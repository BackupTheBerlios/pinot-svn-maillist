From fabricecolin at mail.berlios.de  Sat Sep  2 05:42:12 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Sat, 2 Sep 2006 05:42:12 +0200
Subject: [Pinot-svn] r450 - trunk/Index
Message-ID: <200609020342.k823gCJV005058@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-02 05:42:09 +0200 (Sat, 02 Sep 2006)
New Revision: 450

Modified:
   trunk/Index/pinot-index.1
   trunk/Index/pinot-index.cpp
Log:
Made sure index was open in the appropriate mode.
Removed reference to pinot-search in man page.


Modified: trunk/Index/pinot-index.1
===================================================================
--- trunk/Index/pinot-index.1	2006-08-31 11:46:35 UTC (rev 449)
+++ trunk/Index/pinot-index.1	2006-09-02 03:42:09 UTC (rev 450)
@@ -1,9 +1,9 @@
 .\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.36.
-.TH PINOT-INDEX "1" "August 2006" "pinot-index - pinot 0.60" "User Commands"
+.TH PINOT-INDEX "1" "September 2006" "pinot-index - pinot 0.60" "User Commands"
 .SH NAME
 pinot-index \- Index documents from the command-line
 .SH SYNOPSIS
-.B pinot-search
+.B pinot-index
 [\fIOPTIONS\fR] \fIINDEXTYPE INDEXLOCATION\fR
 .SH DESCRIPTION
 pinot\-index \- Index documents from the command\-line

Modified: trunk/Index/pinot-index.cpp
===================================================================
--- trunk/Index/pinot-index.cpp	2006-08-31 11:46:35 UTC (rev 449)
+++ trunk/Index/pinot-index.cpp	2006-09-02 03:42:09 UTC (rev 450)
@@ -64,7 +64,7 @@
 			case 'h':
 				// Help
 				cout << "pinot-index - Index documents from the command-line\n\n"
-					<< "Usage: pinot-search [OPTIONS] INDEXTYPE INDEXLOCATION\n\n"
+					<< "Usage: pinot-index [OPTIONS] INDEXTYPE INDEXLOCATION\n\n"
 					<< "Options:\n"
 					<< "  -c, --check		check whether the given URL is in the index\n"
 					<< "  -h, --help		display this help and exit\n"
@@ -110,6 +110,18 @@
 	MIMEScanner::initialize();
 	DownloaderInterface::initialize();
 
+	// Make sure the index is open in the correct mode
+	XapianDatabase *pDb = XapianDatabaseFactory::getDatabase(argv[optind + 1], (indexDocument ? false : true));
+	if (pDb == NULL)
+	{
+		cerr << "Couldn't open index " << argv[optind + 1] << endl;
+
+		DownloaderInterface::shutdown();
+		MIMEScanner::shutdown();
+
+		return EXIT_FAILURE;
+	}
+
 	// Get a read-write index of the given type
 	IndexInterface *pIndex = IndexFactory::getIndex(argv[optind], argv[optind + 1]);
 	if (pIndex == NULL)



From fabricecolin at mail.berlios.de  Sat Sep  2 09:51:43 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Sat, 2 Sep 2006 09:51:43 +0200
Subject: [Pinot-svn] r451 - trunk/Tokenize
Message-ID: <200609020751.k827phbH019746@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-02 09:51:42 +0200 (Sat, 02 Sep 2006)
New Revision: 451

Modified:
   trunk/Tokenize/HtmlTokenizer.cpp
   trunk/Tokenize/HtmlTokenizer.h
Log:
This wasn't thread-safe. xmlInitParser() shouldn't be called by each thread.
Moreover the parsed document wasn't freed.


Modified: trunk/Tokenize/HtmlTokenizer.cpp
===================================================================
--- trunk/Tokenize/HtmlTokenizer.cpp	2006-09-02 03:42:09 UTC (rev 450)
+++ trunk/Tokenize/HtmlTokenizer.cpp	2006-09-02 07:51:42 UTC (rev 451)
@@ -22,6 +22,7 @@
 #include <iostream>
 
 #include "StringManip.h"
+#include "Url.h"
 #include "XmlTokenizer.h"
 #include "HtmlTokenizer.h"
 
@@ -525,6 +526,16 @@
 	}
 }
 
+void HtmlTokenizer::initialize(void)
+{
+	xmlInitParser();
+}
+
+void HtmlTokenizer::shutdown(void)
+{
+	xmlCleanupParser();
+}
+
 bool HtmlTokenizer::parseHTML(const Document *pDocument)
 {
 	if (pDocument == NULL)
@@ -546,8 +557,6 @@
 	string htmlChunk(pData, dataLength);
 	htmlSAXHandler saxHandler;
 
-	xmlInitParser();
-
 	// Setup the SAX handler
 	memset((void*)&saxHandler, 0, sizeof(htmlSAXHandler));
 	saxHandler.startElement = (startElementSAXFunc)&startHandler;
@@ -575,17 +584,31 @@
 #endif
 	}
 
-#ifndef _DONT_USE_PUSH_INTERFACE
+#if 1
+#ifdef DEBUG
+	cout << "HtmlTokenizer::parseHTML: " << pDocument->getLocation() << endl;
+#endif
 	htmlParserCtxtPtr pContext = htmlCreatePushParserCtxt(&saxHandler, (void*)&m_state,
 		htmlChunk.c_str(), (int)htmlChunk.length(), "", XML_CHAR_ENCODING_NONE);
 	if (pContext != NULL)
 	{
+		xmlCtxtUseOptions(pContext, 0);
+
 		// Parse
 		htmlParseChunk(pContext, htmlChunk.c_str(), (int)htmlChunk.length(), 0);
 
 		// Free
-		htmlParseChunk(pContext, NULL, 0, 1);
-		htmlFreeParserCtxt(pContext);
+		htmlParseChunk(pContext, htmlChunk.c_str(), 0, 1);
+		xmlDocPtr pDoc = pContext->myDoc;
+		int ret = pContext->wellFormed;
+		xmlFreeParserCtxt(pContext);
+		if (!ret)
+		{
+#ifdef DEBUG
+			cout << "HtmlTokenizer::parseHTML: freeing document" << endl;
+#endif
+			xmlFreeDoc(pDoc);
+		}
 	}
 #else
 	htmlDocPtr pDoc = htmlSAXParseDoc((xmlChar *)htmlChunk.c_str(), "", &saxHandler, (void*)&m_state);
@@ -598,7 +621,6 @@
 	{
 		cerr << "HtmlTokenizer::parseHTML: couldn't create parser context" << endl;
 	}
-	xmlCleanupParser();
 
 	// The text after the last link might make a good abstract
 	if (m_state.m_findAbstract == true)

Modified: trunk/Tokenize/HtmlTokenizer.h
===================================================================
--- trunk/Tokenize/HtmlTokenizer.h	2006-09-02 03:42:09 UTC (rev 450)
+++ trunk/Tokenize/HtmlTokenizer.h	2006-09-02 07:51:42 UTC (rev 451)
@@ -51,6 +51,12 @@
 			bool validateOnly, bool findAbstract = false);
 		virtual ~HtmlTokenizer();
 
+		/// Initializes the HTML tokenizer.
+		static void initialize(void);
+
+		/// Shutdowns the HTML tokenizer.
+		static void shutdown(void);
+
 		/// Determines whether the document is properly formed.
 		bool isDocumentValid(void) const;
 



From fabricecolin at mail.berlios.de  Sat Sep  2 09:53:53 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Sat, 2 Sep 2006 09:53:53 +0200
Subject: [Pinot-svn] r452 - trunk
Message-ID: <200609020753.k827rrCP020278@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-02 09:53:52 +0200 (Sat, 02 Sep 2006)
New Revision: 452

Modified:
   trunk/configure.in
Log:
It should be ok to generate Search/Google/Makefile when SOAP support is off.


Modified: trunk/configure.in
===================================================================
--- trunk/configure.in	2006-09-02 07:51:42 UTC (rev 451)
+++ trunk/configure.in	2006-09-02 07:53:52 UTC (rev 452)
@@ -73,7 +73,7 @@
 case "$soapsupport" in
 yes)
 PKG_CHECK_MODULES(SOAP, gsoap)
-SOAP_CFLAGS="-DHAS_GOOGLEAPI $SOAP_CFLAGS"
+SOAP_CFLAGS="-DHAVE_GOOGLEAPI $SOAP_CFLAGS"
 SOAP_LIBS="$SOAP_LIBS -lSearchSOAP"
 SOAP_SUBDIRS="Search/Google"
 SEARCH_LTLIBRARIES="libSearch.la libSearchSOAP.la"
@@ -200,9 +200,6 @@
 
 AC_OUTPUT( pinot.spec UI/GTK2/src/de.berlios.Pinot.service Makefile \
 	Utils/Makefile Tokenize/Makefile SQL/Makefile po/Makefile.in \
-	Collect/Makefile )
-if test "$SOAP_SUBDIRS" != "" ; then
-  AC_OUTPUT( Search/Google/Makefile )
-fi
-AC_OUTPUT( Search/Makefile Index/Makefile Monitor/Makefile UI/GTK2/src/Makefile )
+	Collect/Makefile Search/Google/Makefile Search/Makefile \
+	Index/Makefile Monitor/Makefile UI/GTK2/src/Makefile )
 



From fabricecolin at mail.berlios.de  Sat Sep  2 09:55:15 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Sat, 2 Sep 2006 09:55:15 +0200
Subject: [Pinot-svn] r453 - in trunk: Index Search UI/GTK2/src
Message-ID: <200609020755.k827tFUE020761@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-02 09:55:12 +0200 (Sat, 02 Sep 2006)
New Revision: 453

Modified:
   trunk/Index/pinot-index.cpp
   trunk/Search/pinot-search.cpp
   trunk/UI/GTK2/src/pinot-dbus-daemon.cc
   trunk/UI/GTK2/src/pinot.cc
Log:
Initialize and shutdown HtmlTokenizer.


Modified: trunk/Index/pinot-index.cpp
===================================================================
--- trunk/Index/pinot-index.cpp	2006-09-02 07:53:52 UTC (rev 452)
+++ trunk/Index/pinot-index.cpp	2006-09-02 07:55:12 UTC (rev 453)
@@ -23,6 +23,7 @@
 
 #include "MIMEScanner.h"
 #include "Url.h"
+#include "HtmlTokenizer.h"
 #include "XapianDatabaseFactory.h"
 #include "TokenizerFactory.h"
 #include "DownloaderFactory.h"
@@ -108,6 +109,7 @@
 	}
 
 	MIMEScanner::initialize();
+	HtmlTokenizer::initialize();
 	DownloaderInterface::initialize();
 
 	// Make sure the index is open in the correct mode
@@ -117,6 +119,7 @@
 		cerr << "Couldn't open index " << argv[optind + 1] << endl;
 
 		DownloaderInterface::shutdown();
+		HtmlTokenizer::shutdown();
 		MIMEScanner::shutdown();
 
 		return EXIT_FAILURE;
@@ -130,6 +133,7 @@
 
 		XapianDatabaseFactory::closeAll();
 		DownloaderInterface::shutdown();
+		HtmlTokenizer::shutdown();
 		MIMEScanner::shutdown();
 
 		return EXIT_FAILURE;
@@ -159,6 +163,7 @@
 
 			XapianDatabaseFactory::closeAll();
 			DownloaderInterface::shutdown();
+			HtmlTokenizer::shutdown();
 			MIMEScanner::shutdown();
 
 			return EXIT_FAILURE;
@@ -214,6 +219,7 @@
 
 	XapianDatabaseFactory::closeAll();
 	DownloaderInterface::shutdown();
+	HtmlTokenizer::shutdown();
 	MIMEScanner::shutdown();
 
 	// Did whatever operation we carried out succeed ?

Modified: trunk/Search/pinot-search.cpp
===================================================================
--- trunk/Search/pinot-search.cpp	2006-09-02 07:53:52 UTC (rev 452)
+++ trunk/Search/pinot-search.cpp	2006-09-02 07:55:12 UTC (rev 453)
@@ -24,6 +24,7 @@
 #include "MIMEScanner.h"
 #include "Url.h"
 #include "XapianDatabaseFactory.h"
+#include "HtmlTokenizer.h"
 #include "XmlTokenizer.h"
 #include "SearchEngineFactory.h"
 #include "DownloaderFactory.h"
@@ -64,7 +65,7 @@
 					cout << " " << *engineIter;
 				}
 				cout << "\n\nExamples:\n"
-#ifdef HAS_GOOGLEAPI
+#ifdef HAVE_GOOGLEAPI
 					<< "pinot-search googleapi mygoogleapikey \"clowns\" 10\n\n"
 #endif
 					<< "pinot-search opensearch " << PREFIX << "/share/pinot/engines/KrustyDescription.xml \"clowns\" 10\n\n"
@@ -94,6 +95,7 @@
 	}
 
 	MIMEScanner::initialize();
+	HtmlTokenizer::initialize();
 	DownloaderInterface::initialize();
 
 	// Which SearchEngine ?
@@ -105,6 +107,7 @@
 		cerr << "Couldn't obtain search engine instance" << endl;
 
 		DownloaderInterface::shutdown();
+		HtmlTokenizer::shutdown();
 		MIMEScanner::shutdown();
 
 		return EXIT_FAILURE;
@@ -160,6 +163,7 @@
 
 	XapianDatabaseFactory::closeAll();
 	DownloaderInterface::shutdown();
+	HtmlTokenizer::shutdown();
 	MIMEScanner::shutdown();
 
 	return EXIT_SUCCESS;

Modified: trunk/UI/GTK2/src/pinot-dbus-daemon.cc
===================================================================
--- trunk/UI/GTK2/src/pinot-dbus-daemon.cc	2006-09-02 07:53:52 UTC (rev 452)
+++ trunk/UI/GTK2/src/pinot-dbus-daemon.cc	2006-09-02 07:55:12 UTC (rev 453)
@@ -40,6 +40,7 @@
 #include "MIMEScanner.h"
 #include "XapianDatabase.h"
 #include "XapianDatabaseFactory.h"
+#include "HtmlTokenizer.h"
 #include "CrawlHistory.h"
 #include "QueryHistory.h"
 #include "ViewHistory.h"
@@ -93,6 +94,7 @@
 	g_outputFile.close();
 
 	DownloaderInterface::shutdown();
+	HtmlTokenizer::shutdown();
 	MIMEScanner::shutdown();
 }
 
@@ -693,6 +695,7 @@
 	setenv("XAPIAN_PREFER_FLINT", "1", 1);
 
 	MIMEScanner::initialize();
+	HtmlTokenizer::initialize();
 	DownloaderInterface::initialize();
 	Glib::thread_init();
 

Modified: trunk/UI/GTK2/src/pinot.cc
===================================================================
--- trunk/UI/GTK2/src/pinot.cc	2006-09-02 07:53:52 UTC (rev 452)
+++ trunk/UI/GTK2/src/pinot.cc	2006-09-02 07:55:12 UTC (rev 453)
@@ -32,6 +32,7 @@
 #include "MIMEScanner.h"
 #include "XapianDatabase.h"
 #include "XapianDatabaseFactory.h"
+#include "HtmlTokenizer.h"
 #include "QueryHistory.h"
 #include "ViewHistory.h"
 #include "DownloaderInterface.h"
@@ -80,6 +81,7 @@
 	g_outputFile.close();
 
 	DownloaderInterface::shutdown();
+	HtmlTokenizer::shutdown();
 	MIMEScanner::shutdown();
 }
 
@@ -136,6 +138,7 @@
 	setenv("XAPIAN_PREFER_FLINT", "1", 1);
 
 	MIMEScanner::initialize();
+	HtmlTokenizer::initialize();
 	DownloaderInterface::initialize();
 	Glib::thread_init();
 	Gtk::Main m(&argc, &argv);



From fabricecolin at mail.berlios.de  Sat Sep  2 09:58:25 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Sat, 2 Sep 2006 09:58:25 +0200
Subject: [Pinot-svn] r454 - trunk/UI/GTK2/src
Message-ID: <200609020758.k827wPdR021231@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-02 09:58:22 +0200 (Sat, 02 Sep 2006)
New Revision: 454

Modified:
   trunk/UI/GTK2/src/WorkerThreads.cpp
   trunk/UI/GTK2/src/WorkerThreads.h
   trunk/UI/GTK2/src/mainWindow.cc
Log:
Removed obsolete cache stuff from DownloadingThread.


Modified: trunk/UI/GTK2/src/WorkerThreads.cpp
===================================================================
--- trunk/UI/GTK2/src/WorkerThreads.cpp	2006-09-02 07:55:12 UTC (rev 453)
+++ trunk/UI/GTK2/src/WorkerThreads.cpp	2006-09-02 07:58:22 UTC (rev 454)
@@ -41,9 +41,6 @@
 #include "IndexedDocument.h"
 #include "DownloaderFactory.h"
 #include "SearchEngineFactory.h"
-#ifdef HAS_GOOGLEAPI
-#include "GoogleAPIEngine.h"
-#endif
 #include "IndexFactory.h"
 #include "config.h"
 #include "NLS.h"
@@ -950,10 +947,9 @@
 	delete pDocsIndex;
 }
 
-DownloadingThread::DownloadingThread(const DocumentInfo &docInfo, bool fromCache) :
+DownloadingThread::DownloadingThread(const DocumentInfo &docInfo) :
 	WorkerThread(),
 	m_docInfo(docInfo),
-	m_fromCache(fromCache),
 	m_pDoc(NULL),
 	m_pDownloader(NULL)
 {
@@ -1006,31 +1002,17 @@
 
 	Url thisUrl(m_docInfo.getLocation());
 
-	if (m_fromCache == true)
+	// Get a Downloader, the default one will do
+	m_pDownloader = DownloaderFactory::getDownloader(thisUrl.getProtocol());
+	if (m_pDownloader == NULL)
 	{
-#ifdef HAS_GOOGLEAPI
-		GoogleAPIEngine googleApiEngine;
-		googleApiEngine.setKey(PinotSettings::getInstance().m_googleAPIKey);
-		m_pDoc = googleApiEngine.retrieveCachedUrl(m_docInfo.getLocation());
-#endif
-#ifdef DEBUG
-		cout << "DownloadingThread::doWork: got cached page" << endl;
-#endif
+		m_status = _("Couldn't obtain downloader for protocol");
+		m_status += " ";
+		m_status += thisUrl.getProtocol();
 	}
-	else
+	else if (m_done == false)
 	{
-		// Get a Downloader, the default one will do
-		m_pDownloader = DownloaderFactory::getDownloader(thisUrl.getProtocol());
-		if (m_pDownloader == NULL)
-		{
-			m_status = _("Couldn't obtain downloader for protocol");
-			m_status += " ";
-			m_status += thisUrl.getProtocol();
-		}
-		else if (m_done == false)
-		{
-			m_pDoc = m_pDownloader->retrieveUrl(m_docInfo);
-		}
+		m_pDoc = m_pDownloader->retrieveUrl(m_docInfo);
 	}
 
 	if (m_pDoc == NULL)
@@ -1043,7 +1025,7 @@
 
 IndexingThread::IndexingThread(const DocumentInfo &docInfo, unsigned int docId,
 	const string &indexLocation, bool allowAllMIMETypes) :
-	DownloadingThread(docInfo, false),
+	DownloadingThread(docInfo),
 	m_docInfo(docInfo),
 	m_docId(docId),
 	m_indexLocation(indexLocation),
@@ -1126,7 +1108,7 @@
 
 	DownloadingThread::doWork();
 #ifdef DEBUG
-	cout << "IndexingThread::doWork: downloaded !" << endl;
+	cout << "IndexingThread::doWork: downloaded " << m_docInfo.getLocation() << endl;
 #endif
 
 	if (m_pDoc != NULL)
@@ -1529,7 +1511,8 @@
 {
 	queue<MonitorEvent> events;
 
-	if (m_pMonitor->retrievePendingEvents(events) == false)
+	if ((m_pMonitor == NULL) ||
+		(m_pMonitor->retrievePendingEvents(events) == false))
 	{
 #ifdef DEBUG
 		cout << "MonitorThread::processEvents: failed to retrieve pending events" << endl;
@@ -1831,8 +1814,11 @@
 				<< dirName << endl;
 #endif
 
-			// Monitor first so that we don't miss events
-			m_pMonitor->addLocation(dirName, true);
+			if (m_pMonitor != NULL)
+			{
+				// Monitor first so that we don't miss events
+				m_pMonitor->addLocation(dirName, true);
+			}
 
 			// Iterate through this directory's entries
 			struct dirent *pDirEntry = readdir(pDir);

Modified: trunk/UI/GTK2/src/WorkerThreads.h
===================================================================
--- trunk/UI/GTK2/src/WorkerThreads.h	2006-09-02 07:55:12 UTC (rev 453)
+++ trunk/UI/GTK2/src/WorkerThreads.h	2006-09-02 07:58:22 UTC (rev 454)
@@ -277,7 +277,7 @@
 class DownloadingThread : public WorkerThread
 {
 	public:
-		DownloadingThread(const DocumentInfo &docInfo, bool fromCache);
+		DownloadingThread(const DocumentInfo &docInfo);
 		virtual ~DownloadingThread();
 
 		virtual std::string getType(void) const;
@@ -290,7 +290,6 @@
 
 	protected:
 		DocumentInfo m_docInfo;
-		bool m_fromCache;
 		Document *m_pDoc;
 		DownloaderInterface *m_pDownloader;
 

Modified: trunk/UI/GTK2/src/mainWindow.cc
===================================================================
--- trunk/UI/GTK2/src/mainWindow.cc	2006-09-02 07:55:12 UTC (rev 453)
+++ trunk/UI/GTK2/src/mainWindow.cc	2006-09-02 07:58:22 UTC (rev 454)
@@ -2921,7 +2921,7 @@
 			DocumentInfo docInfo("", url, "", "");
 
 			// Get that message
-			start_thread(new DownloadingThread(docInfo, false));
+			start_thread(new DownloadingThread(docInfo));
 
 			// Record this into the history now, even though it may fail
 			if (viewHistory.hasItem(url) == false)



From fabricecolin at mail.berlios.de  Sat Sep  2 10:18:33 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Sat, 2 Sep 2006 10:18:33 +0200
Subject: [Pinot-svn] r455 - trunk/UI/GTK2/src
Message-ID: <200609020818.k828IXW0031763@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-02 10:18:32 +0200 (Sat, 02 Sep 2006)
New Revision: 455

Modified:
   trunk/UI/GTK2/src/DaemonState.cpp
   trunk/UI/GTK2/src/DaemonState.h
   trunk/UI/GTK2/src/ModelColumns.cpp
   trunk/UI/GTK2/src/ModelColumns.h
   trunk/UI/GTK2/src/OnDiskHandler.cpp
   trunk/UI/GTK2/src/PinotSettings.cpp
   trunk/UI/GTK2/src/PinotSettings.h
   trunk/UI/GTK2/src/prefsDialog.cc
   trunk/UI/GTK2/src/prefsDialog.hh
Log:
Monitoring indexable locations is optional.


Modified: trunk/UI/GTK2/src/DaemonState.cpp
===================================================================
--- trunk/UI/GTK2/src/DaemonState.cpp	2006-09-02 07:58:22 UTC (rev 454)
+++ trunk/UI/GTK2/src/DaemonState.cpp	2006-09-02 08:18:32 UTC (rev 455)
@@ -37,8 +37,7 @@
 DaemonState::DaemonState() :
 	ThreadsManager(PinotSettings::getInstance().m_daemonIndexLocation, 10),
 	m_pMailMonitor(MonitorFactory::getMonitor()),
-	m_pDiskMonitor(MonitorFactory::getMonitor()),
-	m_crawling(false)
+	m_pDiskMonitor(MonitorFactory::getMonitor())
 {
 	m_onThreadEndSignal.connect(SigC::slot(*this, &DaemonState::on_thread_end));
 }
@@ -55,10 +54,38 @@
 	}
 }
 
-void DaemonState::start(void)
+bool DaemonState::crawlLocation(const string &locationToCrawl, bool monitor)
 {
-	string locationToCrawl;
+	DirectoryScannerThread *pScannerThread = NULL;
 
+	if (locationToCrawl.empty() == true)
+	{
+		return false;
+	}
+
+	if (monitor == false)
+	{
+		// Monitoring is not necessary
+		pScannerThread = new DirectoryScannerThread(NULL, locationToCrawl, 0, true);
+	}
+	else
+	{
+		pScannerThread = new DirectoryScannerThread(m_pDiskMonitor, locationToCrawl, 0, true);
+	}
+	pScannerThread->getFileFoundSignal().connect(SigC::slot(*this, &DaemonState::on_message_filefound));
+
+	if (start_thread(pScannerThread) == true)
+	{
+		m_locationBeingCrawled = locationToCrawl;
+
+		return true;
+	}
+
+	return false;
+}
+
+void DaemonState::start(void)
+{
 	// Disable implicit flushing after a change
 	WorkerThread::immediateFlush(false);
 
@@ -80,31 +107,12 @@
 	pDiskMonitorThread->getDirectoryFoundSignal().connect(SigC::slot(*this, &DaemonState::on_message_filefound));
 	start_thread(pDiskMonitorThread, true);
 
-	for (set<PinotSettings::TimestampedItem>::const_iterator locationIter = PinotSettings::getInstance().m_indexableLocations.begin();
-		locationIter != PinotSettings::getInstance().m_indexableLocations.end(); ++locationIter)
+	set<PinotSettings::IndexableLocation>::const_iterator locationIter = PinotSettings::getInstance().m_indexableLocations.begin();
+	if (locationIter != PinotSettings::getInstance().m_indexableLocations.end())
 	{
-		if (locationToCrawl.empty() == true)
-		{
-			// Crawl this now
-			locationToCrawl = locationIter->m_name;
-		}
-		else
-		{
-			// This will be crawled next
-			m_crawlQueue.push(locationIter->m_name);
-		}
+		// Crawl this now
+		crawlLocation(locationIter->m_name, locationIter->m_monitor);
 	}
-
-	// Anything to crawl before starting monitoring ?
-	if (locationToCrawl.empty() == false)
-	{
-		// Scan the directory and import all its files
-		DirectoryScannerThread *pScannerThread = new DirectoryScannerThread(m_pDiskMonitor,
-			locationToCrawl, 0, true);
-		pScannerThread->getFileFoundSignal().connect(SigC::slot(*this, &DaemonState::on_message_filefound));
-
-		m_crawling = start_thread(pScannerThread);
-	}
 }
 
 void DaemonState::on_thread_end(WorkerThread *pThread)
@@ -130,57 +138,32 @@
 			return;
 		}
 
-		DirectoryScannerThread *pNewScannerThread = NULL;
+		// Explicitely flush the index once a directory has been crawled
+		XapianIndex index(PinotSettings::getInstance().m_daemonIndexLocation);
+		index.flush();
 
 		// Another location to crawl ?
-		if (write_lock_lists() == true)
+		if ((m_locationBeingCrawled.empty() == false) &&
+			(write_lock_lists() == true))
 		{
-			if (m_crawlQueue.empty() == false)
-			{
-				string locationToCrawl(m_crawlQueue.front());
+			PinotSettings::IndexableLocation currentLocation;
 
-				set<PinotSettings::TimestampedItem> &indexableLocations = PinotSettings::getInstance().m_indexableLocations;
-				for (set<PinotSettings::TimestampedItem>::iterator locationIter = indexableLocations.begin();
-			                locationIter != indexableLocations.end(); ++locationIter)
-				{
-					if (locationIter->m_name == pScannerThread->getDirectory())
-					{
-						PinotSettings::TimestampedItem location(*locationIter);
+			currentLocation.m_name = m_locationBeingCrawled;
+			m_locationBeingCrawled.clear();
 
-						// Set the timestamp
-						location.m_modTime = time(NULL);
-						indexableLocations.erase(locationIter);
-						indexableLocations.insert(location);
-
-						break;
-					}
+			set<PinotSettings::IndexableLocation>::const_iterator locationIter = PinotSettings::getInstance().m_indexableLocations.find(currentLocation);
+			if (locationIter != PinotSettings::getInstance().m_indexableLocations.end())
+			{
+				// Get the next location
+				++locationIter;
+				if (locationIter != PinotSettings::getInstance().m_indexableLocations.end())
+				{
+					crawlLocation(locationIter->m_name, locationIter->m_monitor);
 				}
-
-				pNewScannerThread = new DirectoryScannerThread(m_pDiskMonitor,
-					locationToCrawl, 0, true);
-				pNewScannerThread->getFileFoundSignal().connect(SigC::slot(*this,
-					&DaemonState::on_message_filefound));
-
-				m_crawlQueue.pop();
 			}
-			else
-			{
-				// Done with crawling
-				m_crawling = false;
-			}
 
 			unlock_lists();
 		}
-
-		// Explicitely flush the index once a directory has been crawled
-		XapianIndex index(PinotSettings::getInstance().m_daemonIndexLocation);
-		index.flush();
-
-		// Start a new scanner thread ?
-		if (pNewScannerThread != NULL)
-		{
-			m_crawling = start_thread(pNewScannerThread);
-		}
 	}
 	else if (type == "IndexingThread")
 	{
@@ -238,14 +221,10 @@
 	}
 	else
 	{
-		DirectoryScannerThread *pScannerThread = new DirectoryScannerThread(m_pDiskMonitor,
-			location.substr(7), 0, true);
-		pScannerThread->getFileFoundSignal().connect(SigC::slot(*this, &DaemonState::on_message_filefound));
-
+		crawlLocation(location.substr(7), true);
 #ifdef DEBUG
 		cout << "DaemonState::on_message_filefound: new directory " << location.substr(7) << endl;
 #endif
-		m_crawling = start_thread(pScannerThread);
 	}
 }
 

Modified: trunk/UI/GTK2/src/DaemonState.h
===================================================================
--- trunk/UI/GTK2/src/DaemonState.h	2006-09-02 07:58:22 UTC (rev 454)
+++ trunk/UI/GTK2/src/DaemonState.h	2006-09-02 08:18:32 UTC (rev 455)
@@ -45,10 +45,10 @@
 	protected:
 		MonitorInterface *m_pMailMonitor;
 		MonitorInterface *m_pDiskMonitor;
-		std::queue<std::string> m_crawlQueue;
-		std::set<std::string> m_monitoredLocations;
-		bool m_crawling;
+		std::string m_locationBeingCrawled;
 
+		bool crawlLocation(const std::string &locationToCrawl, bool monitor);
+
 };
 
 #endif

Modified: trunk/UI/GTK2/src/ModelColumns.cpp
===================================================================
--- trunk/UI/GTK2/src/ModelColumns.cpp	2006-09-02 07:58:22 UTC (rev 454)
+++ trunk/UI/GTK2/src/ModelColumns.cpp	2006-09-02 08:18:32 UTC (rev 455)
@@ -115,12 +115,12 @@
 {
 }
 
-TypeModelColumns::TypeModelColumns()
+IndexableModelColumns::IndexableModelColumns()
 {
-	add(m_enabled);
-	add(m_type);
+	add(m_monitor);
+	add(m_location);
 }
 
-TypeModelColumns::~TypeModelColumns()
+IndexableModelColumns::~IndexableModelColumns()
 {
 }

Modified: trunk/UI/GTK2/src/ModelColumns.h
===================================================================
--- trunk/UI/GTK2/src/ModelColumns.h	2006-09-02 07:58:22 UTC (rev 454)
+++ trunk/UI/GTK2/src/ModelColumns.h	2006-09-02 08:18:32 UTC (rev 455)
@@ -132,7 +132,7 @@
 
 };
 
-/// Preferences window, model column for the directories and mail accounts trees.
+/// Preferences window, model column for the mail accounts tree.
 class TimestampedModelColumns : public Gtk::TreeModel::ColumnRecord
 {
 public:
@@ -144,15 +144,15 @@
 
 };
 
-/// Import window, model column for the types tree.
-class TypeModelColumns : public Gtk::TreeModel::ColumnRecord
+/// references window, model column for the directories tree.
+class IndexableModelColumns : public Gtk::TreeModel::ColumnRecord
 {
 public:
-	TypeModelColumns();
-	virtual ~TypeModelColumns();
+	IndexableModelColumns();
+	virtual ~IndexableModelColumns();
 
-	Gtk::TreeModelColumn<bool> m_enabled;
-	Gtk::TreeModelColumn<Glib::ustring> m_type;
+	Gtk::TreeModelColumn<bool> m_monitor;
+	Gtk::TreeModelColumn<Glib::ustring> m_location;
 
 };
 

Modified: trunk/UI/GTK2/src/OnDiskHandler.cpp
===================================================================
--- trunk/UI/GTK2/src/OnDiskHandler.cpp	2006-09-02 07:58:22 UTC (rev 454)
+++ trunk/UI/GTK2/src/OnDiskHandler.cpp	2006-09-02 08:18:32 UTC (rev 455)
@@ -142,8 +142,8 @@
 	set<string> directories;
 
 	// Get the map of indexable locations
-	set<PinotSettings::TimestampedItem> &indexableLocations = PinotSettings::getInstance().m_indexableLocations;
-	for (set<PinotSettings::TimestampedItem>::iterator dirIter = indexableLocations.begin();
+	set<PinotSettings::IndexableLocation> &indexableLocations = PinotSettings::getInstance().m_indexableLocations;
+	for (set<PinotSettings::IndexableLocation>::iterator dirIter = indexableLocations.begin();
 		dirIter != indexableLocations.end(); ++dirIter)
 	{
 		directories.insert(dirIter->m_name);

Modified: trunk/UI/GTK2/src/PinotSettings.cpp
===================================================================
--- trunk/UI/GTK2/src/PinotSettings.cpp	2006-09-02 07:58:22 UTC (rev 454)
+++ trunk/UI/GTK2/src/PinotSettings.cpp	2006-09-02 08:18:32 UTC (rev 455)
@@ -239,7 +239,7 @@
 	}
 
 	// Some search engines are hardcoded
-#ifdef HAS_GOOGLEAPI
+#ifdef HAVE_GOOGLEAPI
 	m_engineIds[1 << m_engines.size()] = "Google API";
 	m_engines.insert(Engine("Google API", "googleapi", "", "The Web"));
 	m_engineChannels.insert(pair<string, bool>("The Web", true));
@@ -762,7 +762,7 @@
 		return false;
 	}
 
-	TimestampedItem location;
+	IndexableLocation location;
 
 	// Load the indexable location's properties
 	for (Node::NodeList::iterator iter = childNodes.begin(); iter != childNodes.end(); ++iter)
@@ -781,9 +781,16 @@
 		{
 			location.m_name = nodeContent;
 		}
-		else if (nodeName == "mtime")
+		else if (nodeName == "monitor")
 		{
-			location.m_modTime = (time_t)atoi(nodeContent.c_str());
+			if (nodeContent == "YES")
+			{
+				location.m_monitor = true;
+			}
+			else
+			{
+				location.m_monitor = false;
+			}
 		}
 	}
 
@@ -1045,7 +1052,7 @@
 		addChildElement(pElem, "mtime", numStr);
 	}
 	// Locations to index 
-	for (set<TimestampedItem>::iterator locationIter = m_indexableLocations.begin(); locationIter != m_indexableLocations.end(); ++locationIter)
+	for (set<IndexableLocation>::iterator locationIter = m_indexableLocations.begin(); locationIter != m_indexableLocations.end(); ++locationIter)
 	{
 		pElem = pRootElem->add_child("indexable");
 		if (pElem == NULL)
@@ -1053,8 +1060,7 @@
 			return false;
 		}
 		addChildElement(pElem, "name", locationIter->m_name);
-		sprintf(numStr, "%ld", locationIter->m_modTime);
-		addChildElement(pElem, "mtime", numStr);
+		addChildElement(pElem, "monitor", (locationIter->m_monitor ? "YES" : "NO"));
 	}
 
 	// Save to file
@@ -1440,6 +1446,49 @@
 	return false;
 }
 
+PinotSettings::IndexableLocation::IndexableLocation() :
+	m_monitor(false)
+{
+}
+
+PinotSettings::IndexableLocation::IndexableLocation(const IndexableLocation &other) :
+	m_monitor(other.m_monitor),
+	m_name(other.m_name)
+{
+}
+
+PinotSettings::IndexableLocation::~IndexableLocation()
+{
+}
+
+PinotSettings::IndexableLocation &PinotSettings::IndexableLocation::operator=(const IndexableLocation &other)
+{
+	m_monitor = other.m_monitor;
+	m_name = other.m_name;
+
+	return *this;
+}
+
+bool PinotSettings::IndexableLocation::operator<(const IndexableLocation &other) const
+{
+	if (m_name < other.m_name)
+	{
+		return true;
+	}
+
+	return false;
+}
+
+bool PinotSettings::IndexableLocation::operator==(const IndexableLocation &other) const
+{
+	if (m_name == other.m_name)
+	{
+		return true;
+	}
+
+	return false;
+}
+
 PinotSettings::CacheProvider::CacheProvider()
 {
 }

Modified: trunk/UI/GTK2/src/PinotSettings.h
===================================================================
--- trunk/UI/GTK2/src/PinotSettings.h	2006-09-02 07:58:22 UTC (rev 454)
+++ trunk/UI/GTK2/src/PinotSettings.h	2006-09-02 08:18:32 UTC (rev 455)
@@ -147,6 +147,22 @@
 				time_t m_modTime;
 		};
 
+		class IndexableLocation 
+		{
+			public:
+				IndexableLocation();
+				IndexableLocation(const IndexableLocation &other);
+				~IndexableLocation();
+
+				IndexableLocation &operator=(const IndexableLocation &other);
+				bool operator<(const IndexableLocation &other) const;
+				bool operator==(const IndexableLocation &other) const;
+
+				bool m_monitor;
+				Glib::ustring m_name;
+
+		};
+
 		class CacheProvider
 		{
 			public:
@@ -179,7 +195,7 @@
 		unsigned short m_newResultsColourGreen;
 		unsigned short m_newResultsColourBlue;
 		std::set<TimestampedItem> m_mailAccounts;
-		std::set<TimestampedItem> m_indexableLocations;
+		std::set<IndexableLocation> m_indexableLocations;
 		std::vector<CacheProvider> m_cacheProviders;
 		std::set<Glib::ustring> m_cacheProtocols;
 

Modified: trunk/UI/GTK2/src/prefsDialog.cc
===================================================================
--- trunk/UI/GTK2/src/prefsDialog.cc	2006-09-02 07:58:22 UTC (rev 454)
+++ trunk/UI/GTK2/src/prefsDialog.cc	2006-09-02 08:18:32 UTC (rev 455)
@@ -69,6 +69,7 @@
 	// Associate the columns model to the directories tree
 	m_refDirectoriesTree = ListStore::create(m_directoriesColumns);
 	directoriesTreeview->set_model(m_refDirectoriesTree);
+	directoriesTreeview->append_column_editable(_("Monitor"), m_directoriesColumns.m_monitor);
 	directoriesTreeview->append_column(_("Location"), m_directoriesColumns.m_location);
 	// Allow only single selection
 	directoriesTreeview->get_selection()->set_mode(SELECTION_SINGLE);
@@ -190,16 +191,15 @@
 	}
 
 	// Populate the tree
-	for (set<PinotSettings::TimestampedItem>::iterator dirIter = m_settings.m_indexableLocations.begin();
+	for (set<PinotSettings::IndexableLocation>::iterator dirIter = m_settings.m_indexableLocations.begin();
 		dirIter != m_settings.m_indexableLocations.end();
 		++dirIter)
 	{
 		// Create a new row
 		iter = m_refDirectoriesTree->append();
 		row = *iter;
-		// Set its name, type and minium date
+		row[m_directoriesColumns.m_monitor] = dirIter->m_monitor;
 		row[m_directoriesColumns.m_location] = dirIter->m_name;
-		row[m_directoriesColumns.m_mTime] = dirIter->m_modTime;
 	}
 
 	editDirectoryButton->set_sensitive(true);
@@ -219,11 +219,11 @@
 		for (; iter != children.end(); ++iter)
 		{
 			TreeModel::Row row = *iter;
-			PinotSettings::TimestampedItem indexableLocation;
+			PinotSettings::IndexableLocation indexableLocation;
 
 			// Add this new directory to the settings
+			indexableLocation.m_monitor = row[m_directoriesColumns.m_monitor];
 			indexableLocation.m_name = row[m_directoriesColumns.m_location];
-			indexableLocation.m_modTime = row[m_directoriesColumns.m_mTime];
 
 			string dirLabel("file://");
 			dirLabel += from_utf8(indexableLocation.m_name);
@@ -400,8 +400,8 @@
 		TreeModel::iterator iter = m_refDirectoriesTree->append();
 		TreeModel::Row row = *iter;
 	
+		row[m_directoriesColumns.m_monitor] = false;
 		row[m_directoriesColumns.m_location] = to_utf8(dirName);
-		row[m_directoriesColumns.m_mTime] = time(NULL);
 
 		if (wasEmpty == true)
 		{

Modified: trunk/UI/GTK2/src/prefsDialog.hh
===================================================================
--- trunk/UI/GTK2/src/prefsDialog.hh	2006-09-02 07:58:22 UTC (rev 454)
+++ trunk/UI/GTK2/src/prefsDialog.hh	2006-09-02 08:18:32 UTC (rev 455)
@@ -63,7 +63,7 @@
 	Glib::RefPtr<Gtk::ListStore> m_refViewTree;
 	LabelModelColumns m_labelsColumns;
 	Glib::RefPtr<Gtk::ListStore> m_refLabelsTree;
-	TimestampedModelColumns m_directoriesColumns;
+	IndexableModelColumns m_directoriesColumns;
 	Glib::RefPtr<Gtk::ListStore> m_refDirectoriesTree;
 	TimestampedModelColumns m_mailColumns;
 	Glib::RefPtr<Gtk::ListStore> m_refMailTree;



From fabricecolin at mail.berlios.de  Sat Sep  2 10:19:50 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Sat, 2 Sep 2006 10:19:50 +0200
Subject: [Pinot-svn] r456 - trunk/Search
Message-ID: <200609020819.k828JoXE031869@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-02 10:19:50 +0200 (Sat, 02 Sep 2006)
New Revision: 456

Modified:
   trunk/Search/SearchEngineFactory.cpp
Log:
Check HAVE_GOOGLEAPI.


Modified: trunk/Search/SearchEngineFactory.cpp
===================================================================
--- trunk/Search/SearchEngineFactory.cpp	2006-09-02 08:18:32 UTC (rev 455)
+++ trunk/Search/SearchEngineFactory.cpp	2006-09-02 08:19:50 UTC (rev 456)
@@ -14,7 +14,7 @@
  *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
  */
 
-#ifdef HAS_GOOGLEAPI
+#ifdef HAVE_GOOGLEAPI
 #include "GoogleAPIEngine.h"
 #endif
 #include "PluginWebEngine.h"
@@ -44,7 +44,7 @@
 	{
 		myEngine = new XapianEngine(option);
 	}
-#ifdef HAS_GOOGLEAPI
+#ifdef HAVE_GOOGLEAPI
 	else if (type == "googleapi")
 	{
 		myEngine = new GoogleAPIEngine();
@@ -63,7 +63,7 @@
 	engines.insert("sherlock");
 	engines.insert("opensearch");
 	engines.insert("xapian");
-#ifdef HAS_GOOGLEAPI
+#ifdef HAVE_GOOGLEAPI
 	engines.insert("googleapi");
 #endif
 }
@@ -72,7 +72,7 @@
 bool SearchEngineFactory::isSupported(const string &type)
 {
 	if (
-#ifdef HAS_GOOGLEAPI
+#ifdef HAVE_GOOGLEAPI
 		(type == "googleapi") ||
 #endif
 		(type == "sherlock") ||



From fabricecolin at mail.berlios.de  Sun Sep  3 10:42:18 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Sun, 3 Sep 2006 10:42:18 +0200
Subject: [Pinot-svn] r457 - trunk/Utils
Message-ID: <200609030842.k838gIRd031127@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-03 10:42:17 +0200 (Sun, 03 Sep 2006)
New Revision: 457

Modified:
   trunk/Utils/MIMEScanner.cpp
   trunk/Utils/MIMEScanner.h
Log:
Protect calls to xdgmime with mutex.


Modified: trunk/Utils/MIMEScanner.cpp
===================================================================
--- trunk/Utils/MIMEScanner.cpp	2006-09-02 08:19:50 UTC (rev 456)
+++ trunk/Utils/MIMEScanner.cpp	2006-09-03 08:42:17 UTC (rev 457)
@@ -150,6 +150,8 @@
 
 map<string, MIMEAction> MIMEScanner::m_defaultActions;
 
+pthread_mutex_t MIMEScanner::m_mutex = PTHREAD_MUTEX_INITIALIZER;
+
 MIMEScanner::MIMEScanner()
 {
 }
@@ -240,13 +242,21 @@
 
 string MIMEScanner::scanFileType(const string &fileName)
 {
+	const char *pType = NULL;
+
 	if (fileName.empty() == true)
 	{
 		return "";
 	}
 
 	// Does it have an obvious extension ?
-	const char *pType = xdg_mime_get_mime_type_from_file_name(fileName.c_str());
+	if (pthread_mutex_lock(&m_mutex) == 0)
+	{
+		pType = xdg_mime_get_mime_type_from_file_name(fileName.c_str());
+
+		pthread_mutex_unlock(&m_mutex);
+	}
+
 	if ((pType == NULL) ||
 		(strncasecmp(pType, xdg_mime_type_unknown, strlen(pType)) == 0))
 	{
@@ -271,8 +281,16 @@
 
 	if (mimeType.empty() == true)
 	{
+		const char *pType = NULL;
+
 		// Have a peek at the file
-		const char *pType = xdg_mime_get_mime_type_for_file(fileName.c_str(), NULL);
+		if (pthread_mutex_lock(&m_mutex) == 0)
+		{
+			pType = xdg_mime_get_mime_type_for_file(fileName.c_str(), NULL);
+
+			pthread_mutex_unlock(&m_mutex);
+		}
+
 		if (pType != NULL)
 		{
 			return pType;

Modified: trunk/Utils/MIMEScanner.h
===================================================================
--- trunk/Utils/MIMEScanner.h	2006-09-02 08:19:50 UTC (rev 456)
+++ trunk/Utils/MIMEScanner.h	2006-09-03 08:42:17 UTC (rev 457)
@@ -17,6 +17,7 @@
 #ifndef _MIME_SCANNER_H
 #define _MIME_SCANNER_H
 
+#include <pthread.h>
 #include <string>
 #include <map>
 
@@ -63,6 +64,7 @@
 		static bool getDefaultAction(const std::string &mimeType, MIMEAction &typeAction);
 
 	protected:
+		static pthread_mutex_t m_mutex;
 		static std::map<std::string, MIMEAction> m_defaultActions;
 
 		MIMEScanner();



From fabricecolin at mail.berlios.de  Mon Sep  4 13:45:45 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Mon, 4 Sep 2006 13:45:45 +0200
Subject: [Pinot-svn] r458 - trunk/UI/GTK2/src
Message-ID: <200609041145.k84BjjqB013353@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-04 13:45:43 +0200 (Mon, 04 Sep 2006)
New Revision: 458

Modified:
   trunk/UI/GTK2/src/pinot-dbus-daemon.cc
   trunk/UI/GTK2/src/pinot-dbus-daemon.xml
Log:
Fixed usage of array in GetDocumentLabels and SimpleQuery methods.


Modified: trunk/UI/GTK2/src/pinot-dbus-daemon.cc
===================================================================
--- trunk/UI/GTK2/src/pinot-dbus-daemon.cc	2006-09-03 08:42:17 UTC (rev 457)
+++ trunk/UI/GTK2/src/pinot-dbus-daemon.cc	2006-09-04 11:45:43 UTC (rev 458)
@@ -140,13 +140,25 @@
 #ifdef DEBUG
 	if (pSender != NULL)
 	{
-		cout << "messageBusFilter: called from " << pSender << endl;
+		cout << "messageBusFilter: called by " << pSender << endl;
 	}
+	else
+	{
+		cout << "messageBusFilter: called by unknown sender" << endl;
+	}
 #endif
 
 	// Are we about to be disconnected ?
 	if (dbus_message_is_signal(pMessage, DBUS_INTERFACE_LOCAL, "Disconnected") == TRUE)
 	{
+#ifdef DEBUG
+		if ((pSender == NULL) ||
+			(strncmp(pSender, DBUS_PATH_LOCAL, strlen(DBUS_PATH_LOCAL)) != 0))
+		{
+			cout << "messageBusFilter: received Disconnected not from " << DBUS_PATH_LOCAL << endl;
+		}
+		else cout << "messageBusFilter: received Disconnected" << endl;
+#endif
 		quitLoop = true;
 		processedMessage = true;
 	}
@@ -159,7 +171,7 @@
 			DBUS_TYPE_INVALID) == TRUE)
 		{
 #ifdef DEBUG
-			cout << "messageBusFilter: received " << pLabel << endl;
+			cout << "messageBusFilter: received DeleteLabel " << pLabel << endl;
 #endif
 			// Delete the label
 			flushIndex = index.deleteLabel(pLabel);
@@ -195,7 +207,7 @@
 			DocumentInfo docInfo;
 
 #ifdef DEBUG
-			cout << "messageBusFilter: received " << docId << endl;
+			cout << "messageBusFilter: received GetDocumentInfo " << docId << endl;
 #endif
 			if (index.getDocumentInfo(docId, docInfo) == true)
 			{
@@ -246,50 +258,45 @@
 			bool replyWithError = true;
 
 #ifdef DEBUG
-			cout << "messageBusFilter: received " << docId << endl;
+			cout << "messageBusFilter: received GetDocumentLabels " << docId << endl;
 #endif
 			if (index.getDocumentLabels(docId, labels) == true)
 			{
 				dbus_uint32_t labelsCount = labels.size();
+				GPtrArray *pLabels = g_ptr_array_new();
 
-				if (labelsCount > 0)
+				for (set<string>::const_iterator labelIter = labels.begin();
+					labelIter != labels.end(); ++labelIter)
 				{
-					char *pLabels[labelsCount + 1];
-					unsigned int labelIndex = 0;
+					string labelName(*labelIter);
 
-					for (set<string>::const_iterator labelIter = labels.begin();
-						labelIter != labels.end(); ++labelIter)
-					{
-						pLabels[labelIndex] = g_strdup(labelIter->c_str());
-						++labelIndex;
-					}
-					pLabels[labelIndex] = NULL;
+					g_ptr_array_add(pLabels, const_cast<char*>(labelName.c_str()));
+#ifdef DEBUG
+					cout << "messageBusFilter: adding label " << pLabels->len << " " << labelName << endl;
+#endif
+				}
 
-					// Prepare the reply
-					pReply = dbus_message_new_method_return(pMessage);
-					if (pReply != NULL)
+				// Prepare the reply
+				pReply = dbus_message_new_method_return(pMessage);
+				if (pReply != NULL)
+				{
+					dbus_message_append_args(pReply,
+						DBUS_TYPE_ARRAY, DBUS_TYPE_STRING, &pLabels->pdata, pLabels->len,
+						DBUS_TYPE_INVALID);
+
+					// Send the reply here
+					if (dbus_message_get_no_reply(pMessage) == FALSE)
 					{
-						dbus_message_append_args(pReply,
-							DBUS_TYPE_ARRAY, DBUS_TYPE_STRING, &pLabels, (int)labelsCount,
-							DBUS_TYPE_INVALID);
-
-						// Send the reply here
-						if (dbus_message_get_no_reply(pMessage) == FALSE)
-						{
-							dbus_connection_send(pConnection, pReply, NULL);
-						}
-						dbus_message_unref(pReply);
-
-						pReply = NULL;
-						replyWithError = false;
+						dbus_connection_send(pConnection, pReply, NULL);
 					}
+					dbus_message_unref(pReply);
 
-					// Free the array
-					for (unsigned int labelNum = 0; labelNum < labelIndex; ++labelNum)
-					{
-						g_free(pLabels[labelNum]);
-					}
+					pReply = NULL;
+					replyWithError = false;
 				}
+
+				// Free the array
+				g_ptr_array_free(pLabels, TRUE);
 			}
 
 			if (replyWithError == true)
@@ -340,7 +347,7 @@
 			DBUS_TYPE_INVALID) == TRUE)
 		{
 #ifdef DEBUG
-			cout << "messageBusFilter: received " << pOldLabel << ", " << pNewLabel << endl;
+			cout << "messageBusFilter: received RenameLabel " << pOldLabel << ", " << pNewLabel << endl;
 #endif
 			// Rename the label
 			flushIndex = index.renameLabel(pOldLabel, pNewLabel);
@@ -385,7 +392,7 @@
 				((pLanguage != NULL) ? Languages::toLocale(pLanguage) : ""));
 
 #ifdef DEBUG
-			cout << "messageBusFilter: received " << docId << ", " << pTitle
+			cout << "messageBusFilter: received SetDocumentInfo " << docId << ", " << pTitle
 				<< ", " << pLocation << ", " << pType << ", " << pLanguage << endl;
 #endif
 
@@ -436,7 +443,7 @@
 				labels.insert(ppLabels[labelIndex]);
 			}
 #ifdef DEBUG
-			cout << "messageBusFilter: received " << docId << ", " << resetLabels
+			cout << "messageBusFilter: received SetDocumentLabels " << docId << ", " << resetLabels
 				<< " with " << labelsCount << " labels" << endl;
 #endif
 			// Set labels
@@ -481,7 +488,7 @@
 			bool replyWithError = true;
 
 #ifdef DEBUG
-			cout << "messageBusFilter: received " << pSearchText << ", " << maxHits << endl;
+			cout << "messageBusFilter: received SimpleQuery " << pSearchText << ", " << maxHits << endl;
 #endif
 			if (pSearchText != NULL)
 			{
@@ -492,49 +499,43 @@
 				if (engine.runQuery(queryProps) == true)
 				{
 					const vector<Result> &resultsList = engine.getResults();
-					dbus_uint32_t docIdsCount = resultsList.size();
+					GPtrArray *pDocIds = g_ptr_array_new();
+					char docIdStr[64];
 
-					if (docIdsCount > 0)
+					for (vector<Result>::const_iterator resultIter = resultsList.begin();
+						resultIter != resultsList.end(); ++resultIter)
 					{
-						char *pDocIds[docIdsCount];
-						unsigned int resultIndex = 0;
+						// We only need the document ID
+						unsigned int docId = index.hasDocument(resultIter->getLocation());
 
-						for (vector<Result>::const_iterator resultIter = resultsList.begin();
-							resultIter != resultsList.end(); ++resultIter)
-						{
-							// We only need the document ID
-							unsigned int docId = index.hasDocument(resultIter->getLocation());
+						g_snprintf(docIdStr, 64, "%u", docId);
+#ifdef DEBUG
+						cout << "messageBusFilter: adding result " << pDocIds->len << " " << docId << endl;
+#endif
+						g_ptr_array_add(pDocIds, docIdStr);
+					}
 
-							pDocIds[resultIndex] = g_strdup_printf("%u", docId);
-							++resultIndex;
-						}
+					// Prepare the reply
+					pReply = dbus_message_new_method_return(pMessage);
+					if (pReply != NULL)
+					{
+						dbus_message_append_args(pReply,
+							DBUS_TYPE_ARRAY, DBUS_TYPE_STRING, &pDocIds->pdata, pDocIds->len,
+							DBUS_TYPE_INVALID);
 
-						// Prepare the reply
-						pReply = dbus_message_new_method_return(pMessage);
-						if (pReply != NULL)
+						// Send the reply here
+						if (dbus_message_get_no_reply(pMessage) == FALSE)
 						{
-							dbus_message_append_args(pReply,
-								DBUS_TYPE_ARRAY, DBUS_TYPE_STRING, &pDocIds, (int)docIdsCount,
-								DBUS_TYPE_UINT32, &docIdsCount,
-								DBUS_TYPE_INVALID);
-
-							// Send the reply here
-							if (dbus_message_get_no_reply(pMessage) == FALSE)
-							{
-								dbus_connection_send(pConnection, pReply, NULL);
-							}
-							dbus_message_unref(pReply);
-
-							pReply = NULL;
-							replyWithError = false;
+							dbus_connection_send(pConnection, pReply, NULL);
 						}
+						dbus_message_unref(pReply);
 
-						// Free the array
-						for (unsigned int resultNum = 0; resultNum < resultIndex; ++resultNum)
-						{
-							g_free(pDocIds[resultNum]);
-						}
+						pReply = NULL;
+						replyWithError = false;
 					}
+
+					// Free the array
+					g_ptr_array_free(pDocIds, TRUE);
 				}
 			}
 
@@ -563,6 +564,9 @@
 		{
 			int exitStatus = EXIT_SUCCESS;
 
+#ifdef DEBUG
+			cout << "messageBusFilter: received Stop" << endl;
+#endif
 			// Prepare the reply
 			pReply = dbus_message_new_method_return(pMessage);
 			if (pReply != NULL)
@@ -587,7 +591,7 @@
 			DocumentInfo docInfo;
 
 #ifdef DEBUG
-			cout << "messageBusFilter: received " << docId << endl;
+			cout << "messageBusFilter: received UpdateDocument " << docId << endl;
 #endif
 			if (index.getDocumentInfo(docId, docInfo) == true)
 			{

Modified: trunk/UI/GTK2/src/pinot-dbus-daemon.xml
===================================================================
--- trunk/UI/GTK2/src/pinot-dbus-daemon.xml	2006-09-03 08:42:17 UTC (rev 457)
+++ trunk/UI/GTK2/src/pinot-dbus-daemon.xml	2006-09-04 11:45:43 UTC (rev 458)
@@ -100,7 +100,6 @@
       <arg type="s" name="searchText" direction="in" />
       <arg type="u" name="maxHits" direction="in" />
       <arg type="as" name="docIds" direction="out" />
-      <arg type="u" name="docIdsCount" direction="out"/>
     </method>
     <!--
 	Stops the daemon program.



From fabricecolin at mail.berlios.de  Mon Sep  4 17:03:22 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Mon, 4 Sep 2006 17:03:22 +0200
Subject: [Pinot-svn] r459 - trunk/UI/GTK2/src
Message-ID: <200609041503.k84F3Mwa018233@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-04 17:03:21 +0200 (Mon, 04 Sep 2006)
New Revision: 459

Modified:
   trunk/UI/GTK2/src/pinot-dbus-daemon.cc
Log:
Fixed previous check-in !


Modified: trunk/UI/GTK2/src/pinot-dbus-daemon.cc
===================================================================
--- trunk/UI/GTK2/src/pinot-dbus-daemon.cc	2006-09-04 11:45:43 UTC (rev 458)
+++ trunk/UI/GTK2/src/pinot-dbus-daemon.cc	2006-09-04 15:03:21 UTC (rev 459)
@@ -499,20 +499,29 @@
 				if (engine.runQuery(queryProps) == true)
 				{
 					const vector<Result> &resultsList = engine.getResults();
+					vector<string> docIds;
 					GPtrArray *pDocIds = g_ptr_array_new();
-					char docIdStr[64];
 
 					for (vector<Result>::const_iterator resultIter = resultsList.begin();
 						resultIter != resultsList.end(); ++resultIter)
 					{
 						// We only need the document ID
 						unsigned int docId = index.hasDocument(resultIter->getLocation());
+						if (docId > 0)
+						{
+							char docIdStr[64];
+							snprintf(docIdStr, 64, "%u", docId);
+							docIds.push_back(docIdStr);
+						}
+					}
 
-						g_snprintf(docIdStr, 64, "%u", docId);
+					for (vector<string>::const_iterator docIter = docIds.begin();
+						docIter != docIds.end(); ++docIter)
+					{
 #ifdef DEBUG
-						cout << "messageBusFilter: adding result " << pDocIds->len << " " << docId << endl;
+						cout << "messageBusFilter: adding result " << pDocIds->len << " " << *docIter << endl;
 #endif
-						g_ptr_array_add(pDocIds, docIdStr);
+						g_ptr_array_add(pDocIds, const_cast<char*>(docIter->c_str()));
 					}
 
 					// Prepare the reply



From fabricecolin at mail.berlios.de  Tue Sep  5 14:13:30 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Tue, 5 Sep 2006 14:13:30 +0200
Subject: [Pinot-svn] r460 - trunk/UI/GTK2/src
Message-ID: <200609051213.k85CDUJ2002768@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-05 14:13:29 +0200 (Tue, 05 Sep 2006)
New Revision: 460

Modified:
   trunk/UI/GTK2/src/pinot-dbus-daemon.cc
Log:
A lot of changes that boil down to making correct use of the D-Bus API,
eg process messages in the right place.


Modified: trunk/UI/GTK2/src/pinot-dbus-daemon.cc
===================================================================
--- trunk/UI/GTK2/src/pinot-dbus-daemon.cc	2006-09-04 15:03:21 UTC (rev 459)
+++ trunk/UI/GTK2/src/pinot-dbus-daemon.cc	2006-09-05 12:13:29 UTC (rev 460)
@@ -64,11 +64,12 @@
 };
 static const char *g_pinotDBusService = "de.berlios.Pinot";
 static const char *g_pinotDBusObjectPath = "/de/berlios/Pinot";
-static DBusHandlerResult objectPathHandler(DBusConnection *pConnection, DBusMessage *pMessage, void *pData);
+static void unregisteredHandler(DBusConnection *pConnection, void *pData);
+static DBusHandlerResult messageHandler(DBusConnection *pConnection, DBusMessage *pMessage, void *pData);
 static DBusObjectPathVTable g_callVTable = {
+	(DBusObjectPathUnregisterFunction)unregisteredHandler,
+        (DBusObjectPathMessageFunction)messageHandler,
 	NULL,
-	objectPathHandler,
-	NULL,
 };
 static Glib::RefPtr<Glib::MainLoop> g_refMainLoop;
 
@@ -108,27 +109,60 @@
 	}
 }
 
-static DBusHandlerResult objectPathHandler(DBusConnection *pConnection, DBusMessage *pMessage, void *pData)
+static DBusMessage *newDBusReply(DBusMessage *pMessage)
 {
+	if (pMessage == NULL)
+	{
+		return NULL;
+	}
+
+	DBusMessage *pReply = dbus_message_new_method_return(pMessage);
+	if (pReply != NULL)
+	{
+		return pReply;
+	}
+
+	return NULL;
+}
+
+static DBusHandlerResult filterHandler(DBusConnection *pConnection, DBusMessage *pMessage, void *pData)
+{
 #ifdef DEBUG
-	cout << "objectPathHandler: called" << endl;
+	cout << "filterHandler: called" << endl;
 #endif
-	if (dbus_message_is_method_call(pMessage, g_pinotDBusService, "Index") == TRUE)
+	// Are we about to be disconnected ?
+	if (dbus_message_is_signal(pMessage, DBUS_INTERFACE_LOCAL, "Disconnected") == TRUE)
 	{
-		return DBUS_HANDLER_RESULT_HANDLED;
+#ifdef DEBUG
+		cout << "filterHandler: received Disconnected" << endl;
+#endif
+		quitAll(0);
 	}
+	else if (dbus_message_is_signal(pMessage, DBUS_INTERFACE_DBUS, "NameOwnerChanged") == TRUE)
+	{
+#ifdef DEBUG
+		cout << "filterHandler: received NameOwnerChanged" << endl;
+#endif
+	}
 
 	return DBUS_HANDLER_RESULT_NOT_YET_HANDLED;
 }
 
-static DBusHandlerResult messageBusFilter(DBusConnection *pConnection, DBusMessage *pMessage, void *pData)
+static void unregisteredHandler(DBusConnection *pConnection, void *pData)
 {
+#ifdef DEBUG
+	cout << "unregisteredHandler: called" << endl;
+#endif
+}
+
+static DBusHandlerResult messageHandler(DBusConnection *pConnection, DBusMessage *pMessage, void *pData)
+{
 	XapianIndex index(PinotSettings::getInstance().m_daemonIndexLocation);
 	DaemonState *pServer = NULL;
 	DBusMessage *pReply = NULL;
 	DBusError error;
 	const char *pSender = dbus_message_get_sender(pMessage);
-	bool processedMessage = false, flushIndex = false, quitLoop = false;
+	bool processedMessage = true, flushIndex = false, quitLoop = false;
 
 	if (pData != NULL)
 	{
@@ -140,30 +174,16 @@
 #ifdef DEBUG
 	if (pSender != NULL)
 	{
-		cout << "messageBusFilter: called by " << pSender << endl;
+		cout << "messageHandler: called by " << pSender << endl;
 	}
 	else
 	{
-		cout << "messageBusFilter: called by unknown sender" << endl;
+		cout << "messageHandler: called by unknown sender" << endl;
 	}
 #endif
 
-	// Are we about to be disconnected ?
-	if (dbus_message_is_signal(pMessage, DBUS_INTERFACE_LOCAL, "Disconnected") == TRUE)
+	if (dbus_message_is_method_call(pMessage, g_pinotDBusService, "DeleteLabel") == TRUE)
 	{
-#ifdef DEBUG
-		if ((pSender == NULL) ||
-			(strncmp(pSender, DBUS_PATH_LOCAL, strlen(DBUS_PATH_LOCAL)) != 0))
-		{
-			cout << "messageBusFilter: received Disconnected not from " << DBUS_PATH_LOCAL << endl;
-		}
-		else cout << "messageBusFilter: received Disconnected" << endl;
-#endif
-		quitLoop = true;
-		processedMessage = true;
-	}
-	else if (dbus_message_is_method_call(pMessage, g_pinotDBusService, "DeleteLabel") == TRUE)
-	{
 		char *pLabel = NULL;
 
 		if (dbus_message_get_args(pMessage, &error,
@@ -171,13 +191,13 @@
 			DBUS_TYPE_INVALID) == TRUE)
 		{
 #ifdef DEBUG
-			cout << "messageBusFilter: received DeleteLabel " << pLabel << endl;
+			cout << "messageHandler: received DeleteLabel " << pLabel << endl;
 #endif
 			// Delete the label
 			flushIndex = index.deleteLabel(pLabel);
 
 			// Prepare the reply
-			pReply = dbus_message_new_method_return(pMessage);
+			pReply = newDBusReply(pMessage);
 			if (pReply != NULL)
 			{
 				dbus_message_append_args(pReply,
@@ -185,16 +205,6 @@
 					DBUS_TYPE_INVALID);
 			}
 		}
-		else
-		{
-#ifdef DEBUG
-			cout << "messageBusFilter: " << error.message << endl;
-#endif
-			// Use the error message as reply
-			pReply = dbus_message_new_error(pMessage, error.name, error.message);
-		}
-
-		processedMessage = true;
 	}
 	else if (dbus_message_is_method_call(pMessage, g_pinotDBusService, "GetDocumentInfo") == TRUE)
 	{
@@ -207,18 +217,19 @@
 			DocumentInfo docInfo;
 
 #ifdef DEBUG
-			cout << "messageBusFilter: received GetDocumentInfo " << docId << endl;
+			cout << "messageHandler: received GetDocumentInfo " << docId << endl;
 #endif
 			if (index.getDocumentInfo(docId, docInfo) == true)
 			{
 				// Prepare the reply
-				pReply = dbus_message_new_method_return(pMessage);
+				pReply = newDBusReply(pMessage);
 				if (pReply != NULL)
 				{
+					string language(Languages::toEnglish(docInfo.getLanguage()));
 					const char *pTitle = docInfo.getTitle().c_str();
 					const char *pLocation = docInfo.getLocation().c_str();
 					const char *pType = docInfo.getType().c_str();
-					const char *pLanguage = Languages::toEnglish(docInfo.getLanguage()).c_str();
+					const char *pLanguage = language.c_str();
 
 					dbus_message_append_args(pReply,
 						DBUS_TYPE_STRING, &pTitle,
@@ -235,16 +246,6 @@
 					"Unknown document");
 			}
 		}
-		else
-		{
-#ifdef DEBUG
-			cout << "messageBusFilter: " << error.message << endl;
-#endif
-			// Use the error message as reply
-			pReply = dbus_message_new_error(pMessage, error.name, error.message);
-		}
-
-		processedMessage = true;
 	}
 	else if (dbus_message_is_method_call(pMessage, g_pinotDBusService, "GetDocumentLabels") == TRUE)
 	{
@@ -255,10 +256,9 @@
 			DBUS_TYPE_INVALID) == TRUE)
 		{
 			set<string> labels;
-			bool replyWithError = true;
 
 #ifdef DEBUG
-			cout << "messageBusFilter: received GetDocumentLabels " << docId << endl;
+			cout << "messageHandler: received GetDocumentLabels " << docId << endl;
 #endif
 			if (index.getDocumentLabels(docId, labels) == true)
 			{
@@ -272,12 +272,12 @@
 
 					g_ptr_array_add(pLabels, const_cast<char*>(labelName.c_str()));
 #ifdef DEBUG
-					cout << "messageBusFilter: adding label " << pLabels->len << " " << labelName << endl;
+					cout << "messageHandler: adding label " << pLabels->len << " " << labelName << endl;
 #endif
 				}
 
 				// Prepare the reply
-				pReply = dbus_message_new_method_return(pMessage);
+				pReply = newDBusReply(pMessage);
 				if (pReply != NULL)
 				{
 					dbus_message_append_args(pReply,
@@ -285,37 +285,22 @@
 						DBUS_TYPE_INVALID);
 
 					// Send the reply here
-					if (dbus_message_get_no_reply(pMessage) == FALSE)
-					{
-						dbus_connection_send(pConnection, pReply, NULL);
-					}
+					dbus_connection_send(pConnection, pReply, NULL);
 					dbus_message_unref(pReply);
 
 					pReply = NULL;
-					replyWithError = false;
 				}
 
 				// Free the array
 				g_ptr_array_free(pLabels, TRUE);
 			}
-
-			if (replyWithError == true)
+			else
 			{
 				pReply = dbus_message_new_error(pMessage,
 					"de.berlios.Pinot.GetDocumentLabels",
 					" failed");
 			}
 		}
-		else
-		{
-#ifdef DEBUG
-			cout << "messageBusFilter: " << error.message << endl;
-#endif
-			// Use the error message as reply
-			pReply = dbus_message_new_error(pMessage, error.name, error.message);
-		}
-
-		processedMessage = true;
 	}
 	else if (dbus_message_is_method_call(pMessage, g_pinotDBusService, "GetStatistics") == TRUE)
 	{
@@ -324,8 +309,11 @@
 		unsigned int docsCount = index.getDocumentsCount();
 		unsigned int docId = 0;
 
+#ifdef DEBUG
+		cout << "messageHandler: received GetStatistics" << endl;
+#endif
 		// Prepare the reply
-		pReply = dbus_message_new_method_return(pMessage);
+		pReply = newDBusReply(pMessage);
 		if (pReply != NULL)
 		{
 			dbus_message_append_args(pReply,
@@ -333,8 +321,6 @@
 				DBUS_TYPE_UINT32, &docsCount,
 				DBUS_TYPE_INVALID);
 		}
-
-		processedMessage = true;
 	}
 	else if (dbus_message_is_method_call(pMessage, g_pinotDBusService, "RenameLabel") == TRUE)
 	{
@@ -347,13 +333,13 @@
 			DBUS_TYPE_INVALID) == TRUE)
 		{
 #ifdef DEBUG
-			cout << "messageBusFilter: received RenameLabel " << pOldLabel << ", " << pNewLabel << endl;
+			cout << "messageHandler: received RenameLabel " << pOldLabel << ", " << pNewLabel << endl;
 #endif
 			// Rename the label
 			flushIndex = index.renameLabel(pOldLabel, pNewLabel);
 
 			// Prepare the reply
-			pReply = dbus_message_new_method_return(pMessage);
+			pReply = newDBusReply(pMessage);
 			if (pReply != NULL)
 			{
 				dbus_message_append_args(pReply,
@@ -361,16 +347,6 @@
 					DBUS_TYPE_INVALID);
 			}
 		}
-		else
-		{
-#ifdef DEBUG
-			cout << "messageBusFilter: " << error.message << endl;
-#endif
-			// Use the error message as reply
-			pReply = dbus_message_new_error(pMessage, error.name, error.message);
-		}
-
-		processedMessage = true;
 	}
 	else if (dbus_message_is_method_call(pMessage, g_pinotDBusService, "SetDocumentInfo") == TRUE)
 	{
@@ -392,7 +368,7 @@
 				((pLanguage != NULL) ? Languages::toLocale(pLanguage) : ""));
 
 #ifdef DEBUG
-			cout << "messageBusFilter: received SetDocumentInfo " << docId << ", " << pTitle
+			cout << "messageHandler: received SetDocumentInfo " << docId << ", " << pTitle
 				<< ", " << pLocation << ", " << pType << ", " << pLanguage << endl;
 #endif
 
@@ -400,7 +376,7 @@
 			flushIndex = index.updateDocumentInfo(docId, docInfo);
 
 			// Prepare the reply
-			pReply = dbus_message_new_method_return(pMessage);
+			pReply = newDBusReply(pMessage);
 			if (pReply != NULL)
 			{
 				dbus_message_append_args(pReply,
@@ -408,16 +384,6 @@
 					DBUS_TYPE_INVALID);
 			}
 		}
-		else
-		{
-#ifdef DEBUG
-			cout << "messageBusFilter: " << error.message << endl;
-#endif
-			// Use the error message as reply
-			pReply = dbus_message_new_error(pMessage, error.name, error.message);
-		}
-
-		processedMessage = true;
 	}
 	else if (dbus_message_is_method_call(pMessage, g_pinotDBusService, "SetDocumentLabels") == TRUE)
 	{
@@ -443,7 +409,7 @@
 				labels.insert(ppLabels[labelIndex]);
 			}
 #ifdef DEBUG
-			cout << "messageBusFilter: received SetDocumentLabels " << docId << ", " << resetLabels
+			cout << "messageHandler: received SetDocumentLabels " << docId << ", " << resetLabels
 				<< " with " << labelsCount << " labels" << endl;
 #endif
 			// Set labels
@@ -453,7 +419,7 @@
 			g_strfreev(ppLabels);
 
 			// Prepare the reply
-			pReply = dbus_message_new_method_return(pMessage);
+			pReply = newDBusReply(pMessage);
 			if (pReply != NULL)
 			{
 				dbus_message_append_args(pReply,
@@ -461,16 +427,6 @@
 					DBUS_TYPE_INVALID);
 			}
 		}
-		else
-		{
-#ifdef DEBUG
-			cout << "messageBusFilter: " << error.message << endl;
-#endif
-			// Use the error message as reply
-			pReply = dbus_message_new_error(pMessage, error.name, error.message);
-		}
-
-		processedMessage = true;
 	}
 	else if (dbus_message_is_method_call(pMessage, g_pinotDBusService, "SimpleQuery") == TRUE)
 	{
@@ -488,7 +444,7 @@
 			bool replyWithError = true;
 
 #ifdef DEBUG
-			cout << "messageBusFilter: received SimpleQuery " << pSearchText << ", " << maxHits << endl;
+			cout << "messageHandler: received SimpleQuery " << pSearchText << ", " << maxHits << endl;
 #endif
 			if (pSearchText != NULL)
 			{
@@ -519,13 +475,13 @@
 						docIter != docIds.end(); ++docIter)
 					{
 #ifdef DEBUG
-						cout << "messageBusFilter: adding result " << pDocIds->len << " " << *docIter << endl;
+						cout << "messageHandler: adding result " << pDocIds->len << " " << *docIter << endl;
 #endif
 						g_ptr_array_add(pDocIds, const_cast<char*>(docIter->c_str()));
 					}
 
 					// Prepare the reply
-					pReply = dbus_message_new_method_return(pMessage);
+					pReply = newDBusReply(pMessage);
 					if (pReply != NULL)
 					{
 						dbus_message_append_args(pReply,
@@ -533,10 +489,7 @@
 							DBUS_TYPE_INVALID);
 
 						// Send the reply here
-						if (dbus_message_get_no_reply(pMessage) == FALSE)
-						{
-							dbus_connection_send(pConnection, pReply, NULL);
-						}
+						dbus_connection_send(pConnection, pReply, NULL);
 						dbus_message_unref(pReply);
 
 						pReply = NULL;
@@ -555,16 +508,6 @@
 					"Query failed");
 			}
 		}
-		else
-		{
-#ifdef DEBUG
-			cout << "messageBusFilter: " << error.message << endl;
-#endif
-			// Use the error message as reply
-			pReply = dbus_message_new_error(pMessage, error.name, error.message);
-		}
-
-		processedMessage = true;
 	}
 	else if (dbus_message_is_method_call(pMessage, g_pinotDBusService, "Stop") == TRUE)
 	{
@@ -574,10 +517,10 @@
 			int exitStatus = EXIT_SUCCESS;
 
 #ifdef DEBUG
-			cout << "messageBusFilter: received Stop" << endl;
+			cout << "messageHandler: received Stop" << endl;
 #endif
 			// Prepare the reply
-			pReply = dbus_message_new_method_return(pMessage);
+			pReply = newDBusReply(pMessage);
 			if (pReply != NULL)
 			{
 				dbus_message_append_args(pReply,
@@ -586,7 +529,6 @@
 			}
 
 			quitLoop = true;
-			processedMessage = true;
 		}
 	}
 	else if (dbus_message_is_method_call(pMessage, g_pinotDBusService, "UpdateDocument") == TRUE)
@@ -600,7 +542,7 @@
 			DocumentInfo docInfo;
 
 #ifdef DEBUG
-			cout << "messageBusFilter: received UpdateDocument " << docId << endl;
+			cout << "messageHandler: received UpdateDocument " << docId << endl;
 #endif
 			if (index.getDocumentInfo(docId, docInfo) == true)
 			{
@@ -609,7 +551,7 @@
 			}
 
 			// Prepare the reply
-			pReply = dbus_message_new_method_return(pMessage);
+			pReply = newDBusReply(pMessage);
 			if (pReply != NULL)
 			{
 				dbus_message_append_args(pReply,
@@ -617,20 +559,26 @@
 					DBUS_TYPE_INVALID);
 			}
 		}
-		else
-		{
+	}
+	else
+	{
 #ifdef DEBUG
-			cout << "messageBusFilter: " << error.message << endl;
+		cout << "messageHandler: foreign message for/from " << dbus_message_get_interface(pMessage)
+			<< " " << dbus_message_get_member(pMessage) << endl;
 #endif
-			// Use the error message as reply
-			pReply = dbus_message_new_error(pMessage, error.name, error.message);
-		}
-
-		processedMessage = true;
+		processedMessage = false;
 	}
+
+	// Did an error occur ?
+	if (error.message != NULL)
+	{
 #ifdef DEBUG
-	else cout << "messageBusFilter: message for foreign object" << endl;
+		cout << "messageHandler: error occured: " << error.message << endl;
 #endif
+		// Use the error message as reply
+		pReply = dbus_message_new_error(pMessage, error.name, error.message);
+	}
+
 	dbus_error_free(&error);
 
 	if (flushIndex == true)
@@ -642,11 +590,11 @@
 	// Send a reply ?
 	if (pReply != NULL)
 	{
-		if (dbus_message_get_no_reply(pMessage) == FALSE)
-		{
-			dbus_connection_send(pConnection, pReply, NULL);
-		}
-
+		dbus_connection_send(pConnection, pReply, NULL);
+		dbus_connection_flush(pConnection);
+#ifdef DEBUG
+		cout << "messageHandler: sent reply" << endl;
+#endif
 		dbus_message_unref(pReply);
 	}
 
@@ -766,8 +714,7 @@
 	if ((pDb == NULL) ||
 		(pDb->isOpen() == false))
 	{
-		cerr << "Couldn't open index" << " " << settings.m_daemonIndexLocation << endl;
-
+		cerr << "Couldn't open index " << settings.m_daemonIndexLocation << endl;
 		return EXIT_FAILURE;
 	}
 
@@ -777,8 +724,7 @@
 		(QueryHistory::create(settings.m_historyDatabase) == false) ||
 		(ViewHistory::create(settings.m_historyDatabase) == false))
 	{
-		cerr << "Couldn't create history database" << " " << settings.m_historyDatabase << endl;
-
+		cerr << "Couldn't create history database " << settings.m_historyDatabase << endl;
 		return EXIT_FAILURE;
 	}
 	else
@@ -825,38 +771,36 @@
 	dbus_connection_set_exit_on_disconnect(pConnection, FALSE);
 	dbus_connection_setup_with_g_main(pConnection, NULL);
 
-	dbus_connection_add_filter(pConnection, messageBusFilter, &server, NULL);
-	if (dbus_error_is_set(&error) == FALSE)
+	if ((dbus_error_is_set(&error) == FALSE) &&
+		(dbus_connection_register_object_path(pConnection, g_pinotDBusObjectPath,
+			&g_callVTable, &server) == TRUE))
 	{
 		// Request to be identified by this name
 		// FIXME: flags are currently broken ?
 		dbus_bus_request_name(pConnection, g_pinotDBusService, 0, &error);
-		if ((dbus_error_is_set(&error) == FALSE) &&
-			(dbus_connection_register_object_path(pConnection, g_pinotDBusObjectPath,
-				&g_callVTable, NULL) == TRUE))
-		{
-			// Get the main loop
-			g_refMainLoop = Glib::MainLoop::create();
 
-			// Connect to threads' finished signal
-			server.connect();
+		dbus_connection_add_filter(pConnection, (DBusHandleMessageFunction)filterHandler, &server, NULL);
 
-			server.start();
+		// Get the main loop
+		g_refMainLoop = Glib::MainLoop::create();
 
-			// Run the main loop
-			g_refMainLoop->run();
-		}
-		else
-		{
-			cerr << "Couldn't register object path: " << pError->message << endl;
-		}
+		// Connect to threads' finished signal
+		server.connect();
+
+		server.start();
+
+		// Run the main loop
+		g_refMainLoop->run();
 	}
 	else
 	{
-		cerr << "Couldn't add filter: " << pError->message << endl;
+		cerr << "Couldn't register object path: " << pError->message << endl;
 	}
 
 	dbus_error_free(&error);
+#ifdef DEBUG
+	cout << "Closing connection..." << endl;
+#endif
 	dbus_connection_close(pConnection);
 	dbus_g_connection_unref(pBus);
 



From fabricecolin at mail.berlios.de  Tue Sep  5 14:14:03 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Tue, 5 Sep 2006 14:14:03 +0200
Subject: [Pinot-svn] r461 - trunk/UI/GTK2/src
Message-ID: <200609051214.k85CE3ZH002885@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-05 14:14:02 +0200 (Tue, 05 Sep 2006)
New Revision: 461

Modified:
   trunk/UI/GTK2/src/pinot.cc
Log:
Cosmetic changes.


Modified: trunk/UI/GTK2/src/pinot.cc
===================================================================
--- trunk/UI/GTK2/src/pinot.cc	2006-09-05 12:13:29 UTC (rev 460)
+++ trunk/UI/GTK2/src/pinot.cc	2006-09-05 12:14:02 UTC (rev 461)
@@ -197,8 +197,7 @@
 	if ((pFirstDb == NULL) ||
 		(pFirstDb->isOpen() == false))
 	{
-		errorMsg = "Couldn't open index";
-		errorMsg += " ";
+		errorMsg = "Couldn't open index ";
 		errorMsg += settings.m_docsIndexLocation;
 	}
 	// ...and the daemon index in read-only mode
@@ -206,8 +205,7 @@
 	if ((pSecondDb == NULL) ||
 		(pSecondDb->isOpen() == false))
 	{
-		errorMsg = "Couldn't open index";
-		errorMsg += " ";
+		errorMsg = "Couldn't open index ";
 		errorMsg += settings.m_daemonIndexLocation;
 	}
 	// Merge these two, this will be useful later
@@ -218,8 +216,7 @@
 		(QueryHistory::create(settings.m_historyDatabase) == false) ||
 		(ViewHistory::create(settings.m_historyDatabase) == false))
 	{
-		errorMsg = "Couldn't create history database";
-		errorMsg += " ";
+		errorMsg = "Couldn't create history database ";
 		errorMsg += settings.m_historyDatabase;
 	}
 	else



From fabricecolin at mail.berlios.de  Tue Sep  5 14:14:31 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Tue, 5 Sep 2006 14:14:31 +0200
Subject: [Pinot-svn] r462 - trunk/UI
Message-ID: <200609051214.k85CEV6A003075@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-05 14:14:31 +0200 (Tue, 05 Sep 2006)
New Revision: 462

Added:
   trunk/UI/pinot-deskbar.py
Log:
First working version of a plugin for deskbar-applet.


Added: trunk/UI/pinot-deskbar.py
===================================================================
--- trunk/UI/pinot-deskbar.py	2006-09-05 12:14:02 UTC (rev 461)
+++ trunk/UI/pinot-deskbar.py	2006-09-05 12:14:31 UTC (rev 462)
@@ -0,0 +1,103 @@
+import gnome
+
+import deskbar
+import deskbar.Handler, deskbar
+import gobject
+from gettext import gettext as _
+
+from os.path import expanduser
+HOME = expanduser ("~/")
+
+def _check_requirements ():
+	try:
+		import dbus
+		try :
+			if getattr(dbus, 'version', (0,0,0)) >= (0,41,0):
+				import dbus.glib
+		except:
+			return (deskbar.Handler.HANDLER_IS_NOT_APPLICABLE, "Python dbus.glib bindings not found.", None)
+		return (deskbar.Handler.HANDLER_IS_HAPPY, None, None)
+	except:
+		return (deskbar.Handler.HANDLER_IS_NOT_APPLICABLE, "Python dbus bindings not found.", None)
+	
+HANDLERS = {
+	"PinotFileSearchHandler" : {
+		"name": "Pinot",
+		"description": _("Search documents indexed by Pinot"),
+		"requirements" : _check_requirements,
+	}
+}
+
+class PinotFileMatch (deskbar.Match.Match):
+	def __init__(self, handler, name, url, mime_type, main_language, **args):
+		deskbar.Match.Match.__init__ (self, handler, **args)
+		# The mailbox scheme is specific to Pinot
+		self.url = url
+		url_scheme = self.url[:url.index("://")]
+		if url_scheme == "mailbox":
+			print "Mailbox hit: ", self.url
+			self.url = "file://" + url[len("mailbox://"):url.index('?')]
+			url_scheme = "file"
+
+		# Replace HOME with ~
+		file_path = self.url[self.url.index("://") + 3:]
+		if url_scheme == "file":
+			file_path = file_path.replace(HOME, "~/")
+			print "File hit: ", file_path
+
+		self.name = name + " (" + file_path + ")"
+		self.mime_type = mime_type
+		self.main_language = main_language
+		self._icon = deskbar.Utils.load_icon_for_file(self.url)
+
+	def get_verb(self):
+		return "%(name)s"
+
+	def action(self, text=None):
+		print "Opening Pinot hit: ", self.url
+		gnome.url_show (self.url)
+
+	def get_category (self):
+		return "files"
+
+class PinotFileSearchHandler(deskbar.Handler.AsyncHandler):
+	def __init__(self):
+		deskbar.Handler.AsyncHandler.__init__(self, ("system-search", "pinot"))
+		
+		import dbus
+		# We have to do this or it won't work
+		if getattr(dbus, 'version', (0,0,0)) >= (0,41,0):
+			import dbus.glib
+		try:
+			# Set up the dbus connection
+			self.bus = dbus.SessionBus()
+			self.proxy_obj = self.bus.get_object('de.berlios.Pinot', '/de/berlios/Pinot')
+			self.pinot_iface = dbus.Interface(self.proxy_obj, 'de.berlios.Pinot')
+		except Exception, msg:
+			print 'D-Bus exception: ', msg
+
+	def query (self, qstring, max):
+		# Add a 1 second delay so that we don't run queries everytime the query is edited
+		self.check_query_changed (timeout=1)
+
+		print "SimpleQuery: ", qstring
+		matches = []
+		doc_ids = []
+		try :
+			import dbus
+			doc_ids = self.pinot_iface.SimpleQuery (qstring, dbus.UInt32(max))
+		except Exception, msg:
+			print 'D-Bus exception: ', msg
+		# Check if the query is still valid
+		self.check_query_changed ()
+		try :
+			for doc_id in doc_ids:
+				print "Hit on document ", doc_id
+				name, url, mime_type, main_language = self.pinot_iface.GetDocumentInfo (dbus.UInt32(doc_id))
+				matches.append( PinotFileMatch(self, name, url, mime_type, main_language) )
+		except Exception, msg:
+			print 'D-Bus exception: ', msg
+		# Check if the query is still valid here too
+		self.check_query_changed ()
+		return matches
+



From fabricecolin at mail.berlios.de  Thu Sep  7 02:24:02 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Thu, 7 Sep 2006 02:24:02 +0200
Subject: [Pinot-svn] r463 - trunk/UI
Message-ID: <200609070024.k870O2c4018147@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-07 02:24:02 +0200 (Thu, 07 Sep 2006)
New Revision: 463

Modified:
   trunk/UI/pinot-deskbar.py
Log:
Somewhat better plugin. Handler inherits from SignallingHandler and calls to
GetDocumentInfo are asynchronous.


Modified: trunk/UI/pinot-deskbar.py
===================================================================
--- trunk/UI/pinot-deskbar.py	2006-09-05 12:14:31 UTC (rev 462)
+++ trunk/UI/pinot-deskbar.py	2006-09-07 00:24:02 UTC (rev 463)
@@ -60,10 +60,14 @@
 	def get_category (self):
 		return "files"
 
-class PinotFileSearchHandler(deskbar.Handler.AsyncHandler):
+class PinotFileSearchHandler(deskbar.Handler.SignallingHandler):
 	def __init__(self):
-		deskbar.Handler.AsyncHandler.__init__(self, ("system-search", "pinot"))
-		
+		deskbar.Handler.SignallingHandler.__init__(self, ("system-search", "pinot"))
+
+		self.query_string = ""
+		self.results = []
+		self.results_count = 10
+
 		import dbus
 		# We have to do this or it won't work
 		if getattr(dbus, 'version', (0,0,0)) >= (0,41,0):
@@ -74,30 +78,36 @@
 			self.proxy_obj = self.bus.get_object('de.berlios.Pinot', '/de/berlios/Pinot')
 			self.pinot_iface = dbus.Interface(self.proxy_obj, 'de.berlios.Pinot')
 		except Exception, msg:
-			print 'D-Bus exception: ', msg
+			print 'Caught D-Bus exception: ', msg
+		self.set_delay (500)
 
 	def query (self, qstring, max):
-		# Add a 1 second delay so that we don't run queries everytime the query is edited
-		self.check_query_changed (timeout=1)
-
 		print "SimpleQuery: ", qstring
-		matches = []
 		doc_ids = []
 		try :
 			import dbus
 			doc_ids = self.pinot_iface.SimpleQuery (qstring, dbus.UInt32(max))
 		except Exception, msg:
-			print 'D-Bus exception: ', msg
-		# Check if the query is still valid
-		self.check_query_changed ()
+			print 'Caught D-Bus exception: ', msg
+		# Save the query's details
+		self.query_string = qstring
+		self.results = []
+		self.results_count = len(doc_ids)
 		try :
+			# Get the details of each hit
 			for doc_id in doc_ids:
 				print "Hit on document ", doc_id
-				name, url, mime_type, main_language = self.pinot_iface.GetDocumentInfo (dbus.UInt32(doc_id))
-				matches.append( PinotFileMatch(self, name, url, mime_type, main_language) )
+				self.pinot_iface.GetDocumentInfo (dbus.UInt32(doc_id),
+					reply_handler=self.__receive_hits, error_handler=self.__receive_error)
 		except Exception, msg:
-			print 'D-Bus exception: ', msg
-		# Check if the query is still valid here too
-		self.check_query_changed ()
-		return matches
+			print 'Caught exception: ', msg
 
+	def __receive_hits (self, name, url, mime_type, main_language):
+		self.results.append( PinotFileMatch(self, name, url, mime_type, main_language) )
+		print "Got hit ", len(self.results)
+		if len(self.results) == self.results_count:
+			self.emit_query_ready(self.query_string, self.results)
+
+	def __receive_error (self, error):
+		print 'D-Bus error: ', error
+



From fabricecolin at mail.berlios.de  Thu Sep  7 13:35:34 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Thu, 7 Sep 2006 13:35:34 +0200
Subject: [Pinot-svn] r464 - in trunk: SQL UI/GTK2/src
Message-ID: <200609071135.k87BZY1K020439@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-07 13:35:33 +0200 (Thu, 07 Sep 2006)
New Revision: 464

Modified:
   trunk/SQL/CrawlHistory.cpp
   trunk/SQL/CrawlHistory.h
   trunk/UI/GTK2/src/DaemonState.cpp
   trunk/UI/GTK2/src/DaemonState.h
   trunk/UI/GTK2/src/WorkerThreads.cpp
   trunk/UI/GTK2/src/WorkerThreads.h
Log:
DirectoryScanner deletes items and informs the MonitorHandler for all entries
associated to the source that were not found by the current crawl.


Modified: trunk/SQL/CrawlHistory.cpp
===================================================================
--- trunk/SQL/CrawlHistory.cpp	2006-09-07 00:24:02 UTC (rev 463)
+++ trunk/SQL/CrawlHistory.cpp	2006-09-07 11:35:33 UTC (rev 464)
@@ -46,9 +46,6 @@
 		case CRAWLED:
 			text = "CRAWLED";
 			break;
-		case DIRECTORY:
-			text = "DIRECTORY";
-			break;
 		default:
 			break;
 	}
@@ -68,10 +65,6 @@
 	{
 		status = CRAWLED;
 	}
-	else if (text == "DIRECTORY")
-	{
-		status = DIRECTORY;
-	}
 
 	return status;
 }
@@ -270,15 +263,45 @@
 	return success;
 }
 
+/// Updates the status of items en masse.
+bool CrawlHistory::updateItemsStatus(unsigned int sourceId, CrawlStatus currentStatus, CrawlStatus newStatus)
+{
+	bool success = false;
+
+	SQLiteResults *results = executeStatement("UPDATE CrawlHistory \
+		SET Status='%q' WHERE SourceId='%u' AND Status='%q';",
+		statusToText(newStatus).c_str(), sourceId,
+		statusToText(currentStatus).c_str());
+	if (results != NULL)
+	{
+		success = true;
+		delete results;
+	}
+
+	return success;
+}
+
 /// Returns items that belong to a source.
 unsigned int CrawlHistory::getSourceItems(unsigned int sourceId, CrawlStatus status,
-	time_t minDate, set<string> &urls) const
+	set<string> &urls, time_t maxDate) const
 {
+	SQLiteResults *results = NULL;
 	unsigned int count = 0;
 
-	SQLiteResults *results = executeStatement("SELECT Url FROM CrawlHistory \
-		WHERE SourceId='%u' AND Status='%q' AND Date>='%d';",
-		sourceId, statusToText(status).c_str(), minDate);
+	if (maxDate > 0)
+	{
+		results = executeStatement("SELECT Url FROM CrawlHistory \
+			WHERE SourceId='%u' AND Status='%q' AND Date<'%d';",
+			sourceId, statusToText(status).c_str(), maxDate);
+	}
+	else
+	{
+		// Ignore the date
+		results = executeStatement("SELECT Url FROM CrawlHistory \
+			WHERE SourceId='%u' AND Status='%q';",
+			sourceId, statusToText(status).c_str());
+	}
+
 	if (results != NULL)
 	{
 		while (results->hasMoreRows() == true)

Modified: trunk/SQL/CrawlHistory.h
===================================================================
--- trunk/SQL/CrawlHistory.h	2006-09-07 00:24:02 UTC (rev 463)
+++ trunk/SQL/CrawlHistory.h	2006-09-07 11:35:33 UTC (rev 464)
@@ -32,7 +32,7 @@
 		CrawlHistory(const string &database);
 		virtual ~CrawlHistory();
 
-		typedef enum { UNKNOWN, CRAWLING, CRAWLED, DIRECTORY } CrawlStatus;
+		typedef enum { UNKNOWN, CRAWLING, CRAWLED } CrawlStatus;
 
 		/// Creates the CrawlHistory table in the database.
 		static bool create(const string &database);
@@ -58,9 +58,12 @@
 		/// Updates an URL.
 		bool updateItem(const string &url, CrawlStatus status, time_t date);
 
+		/// Updates the status of items en masse.
+		bool updateItemsStatus(unsigned int sourceId, CrawlStatus currentStatus, CrawlStatus newStatus);
+
 		/// Returns items that belong to a source.
 		unsigned int getSourceItems(unsigned int sourceId, CrawlStatus status,
-			time_t minDate, set<string> &urls) const;
+			set<string> &urls, time_t maxDate = 0) const;
 
 		/// Returns the number of URLs.
 		unsigned int getItemsCount(void) const;

Modified: trunk/UI/GTK2/src/DaemonState.cpp
===================================================================
--- trunk/UI/GTK2/src/DaemonState.cpp	2006-09-07 00:24:02 UTC (rev 463)
+++ trunk/UI/GTK2/src/DaemonState.cpp	2006-09-07 11:35:33 UTC (rev 464)
@@ -35,9 +35,10 @@
 using namespace Glib;
 
 DaemonState::DaemonState() :
-	ThreadsManager(PinotSettings::getInstance().m_daemonIndexLocation, 10),
+	ThreadsManager(PinotSettings::getInstance().m_daemonIndexLocation, 20),
 	m_pMailMonitor(MonitorFactory::getMonitor()),
-	m_pDiskMonitor(MonitorFactory::getMonitor())
+	m_pDiskMonitor(MonitorFactory::getMonitor()),
+	m_pDiskHandler(NULL)
 {
 	m_onThreadEndSignal.connect(SigC::slot(*this, &DaemonState::on_thread_end));
 }
@@ -66,11 +67,11 @@
 	if (monitor == false)
 	{
 		// Monitoring is not necessary
-		pScannerThread = new DirectoryScannerThread(NULL, locationToCrawl, 0, true);
+		pScannerThread = new DirectoryScannerThread(locationToCrawl, 0, true, NULL, NULL);
 	}
 	else
 	{
-		pScannerThread = new DirectoryScannerThread(m_pDiskMonitor, locationToCrawl, 0, true);
+		pScannerThread = new DirectoryScannerThread(locationToCrawl, 0, true, m_pDiskMonitor, m_pDiskHandler);
 	}
 	pScannerThread->getFileFoundSignal().connect(SigC::slot(*this, &DaemonState::on_message_filefound));
 
@@ -90,20 +91,20 @@
 	WorkerThread::immediateFlush(false);
 
 	// Fire up the mail monitor thread now
-	MboxHandler *pMbox = new MboxHandler();
+	MboxHandler *pMboxHandler = new MboxHandler();
 	// Connect to its update signal
-	pMbox->getUpdateSignal().connect(
+	pMboxHandler->getUpdateSignal().connect(
 		SigC::slot(*this, &DaemonState::on_message_indexupdate));
-	MonitorThread *pMailMonitorThread = new MonitorThread(m_pMailMonitor, pMbox);
+	MonitorThread *pMailMonitorThread = new MonitorThread(m_pMailMonitor, pMboxHandler);
 	pMailMonitorThread->getDirectoryFoundSignal().connect(SigC::slot(*this, &DaemonState::on_message_filefound));
 	start_thread(pMailMonitorThread, true);
 
 	// Same for the disk monitor thread
-	OnDiskHandler *pDisk = new OnDiskHandler();
+	m_pDiskHandler = new OnDiskHandler();
 	// Connect to its update signal
-	pDisk->getUpdateSignal().connect(
+	m_pDiskHandler->getUpdateSignal().connect(
 		SigC::slot(*this, &DaemonState::on_message_indexupdate));
-	MonitorThread *pDiskMonitorThread = new MonitorThread(m_pDiskMonitor, pDisk);
+	MonitorThread *pDiskMonitorThread = new MonitorThread(m_pDiskMonitor, m_pDiskHandler);
 	pDiskMonitorThread->getDirectoryFoundSignal().connect(SigC::slot(*this, &DaemonState::on_message_filefound));
 	start_thread(pDiskMonitorThread, true);
 

Modified: trunk/UI/GTK2/src/DaemonState.h
===================================================================
--- trunk/UI/GTK2/src/DaemonState.h	2006-09-07 00:24:02 UTC (rev 463)
+++ trunk/UI/GTK2/src/DaemonState.h	2006-09-07 11:35:33 UTC (rev 464)
@@ -45,6 +45,7 @@
 	protected:
 		MonitorInterface *m_pMailMonitor;
 		MonitorInterface *m_pDiskMonitor;
+		MonitorHandler *m_pDiskHandler;
 		std::string m_locationBeingCrawled;
 
 		bool crawlLocation(const std::string &locationToCrawl, bool monitor);

Modified: trunk/UI/GTK2/src/WorkerThreads.cpp
===================================================================
--- trunk/UI/GTK2/src/WorkerThreads.cpp	2006-09-07 00:24:02 UTC (rev 463)
+++ trunk/UI/GTK2/src/WorkerThreads.cpp	2006-09-07 11:35:33 UTC (rev 464)
@@ -1511,6 +1511,9 @@
 {
 	queue<MonitorEvent> events;
 
+#ifdef DEBUG
+	cout << "MonitorThread::processEvents: checking for events" << endl;
+#endif
 	if ((m_pMonitor == NULL) ||
 		(m_pMonitor->retrievePendingEvents(events) == false))
 	{
@@ -1575,8 +1578,7 @@
 			}
 			else
 			{
-				// FIXME: stop monitoring if not under an indexable location
-
+				// We should receive this only if the destination directory is monitored too
 				m_pHandler->directoryMoved(event.m_location, event.m_previousLocation);
 			}
 		}
@@ -1588,7 +1590,7 @@
 			}
 			else
 			{
-				// The monitoring should have stopped monitoring this
+				// The monitor should have stopped monitoring this
 				// In practice, events for the files in this directory will already have been received 
 				m_pHandler->directoryDeleted(event.m_location);
 			}
@@ -1666,13 +1668,14 @@
 	}
 }
 
-DirectoryScannerThread::DirectoryScannerThread(MonitorInterface *pMonitor,
-	const string &dirName, unsigned int maxLevel, bool followSymLinks) :
+DirectoryScannerThread::DirectoryScannerThread(const string &dirName, unsigned int maxLevel,
+	bool followSymLinks, MonitorInterface *pMonitor, MonitorHandler *pHandler) :
 	WorkerThread(),
-	m_pMonitor(pMonitor),
 	m_dirName(dirName),
 	m_maxLevel(maxLevel),
 	m_followSymLinks(followSymLinks),
+	m_pMonitor(pMonitor),
+	m_pHandler(pHandler),
 	m_currentLevel(0),
 	m_sourceId(0)
 {
@@ -1728,7 +1731,7 @@
 	m_signalFileFound(string("file://") + fileName, labelStr, false);
 }
 
-bool DirectoryScannerThread::scanDirectory(const string &dirName)
+bool DirectoryScannerThread::scanEntry(const string &entryName)
 {
 	CrawlHistory history(PinotSettings::getInstance().m_historyDatabase);
 	CrawlHistory::CrawlStatus status = CrawlHistory::UNKNOWN;
@@ -1736,13 +1739,13 @@
 	struct stat fileStat;
 	int statSuccess = 0;
 
-	if (dirName.empty() == true)
+	if (entryName.empty() == true)
 	{
 		return false;
 	}
 
 	// Skip . .. and dotfiles
-	Url urlObj("file://" + dirName);
+	Url urlObj("file://" + entryName);
 	if (urlObj.getFile()[0] == '.')
 	{
 		return false;
@@ -1750,12 +1753,12 @@
 
 	if (m_followSymLinks == false)
 	{
-		statSuccess = lstat(dirName.c_str(), &fileStat);
+		statSuccess = lstat(entryName.c_str(), &fileStat);
 	}
 	else
 	{
 		// Stat the files pointed to by symlinks
-		statSuccess = stat(dirName.c_str(), &fileStat);
+		statSuccess = stat(entryName.c_str(), &fileStat);
 	}
 
 	if (statSuccess == -1)
@@ -1763,7 +1766,7 @@
 		return false;
 	}
 
-	bool itemExists = history.hasItem("file://" + dirName, status, itemDate);
+	bool itemExists = history.hasItem("file://" + entryName, status, itemDate);
 
 	// Is it a file or a directory ?
 	if (S_ISLNK(fileStat.st_mode))
@@ -1776,23 +1779,34 @@
 		bool reportFile = false;
 
 		// It's actually a file
-		// Was it crawled since it was last modified ?
 		if (itemExists == false)
 		{
 			// Record it
-			history.insertItem("file://" + dirName, CrawlHistory::CRAWLED, m_sourceId, fileStat.st_mtime);
+			history.insertItem("file://" + entryName, CrawlHistory::CRAWLED, m_sourceId, fileStat.st_mtime);
+#ifdef DEBUG
+			cout << "DirectoryScannerThread::scanEntry: reporting new file " << entryName << endl;
+#endif
 			reportFile = true;
 		}
-		else if (itemDate < fileStat.st_mtime)
+		else
 		{
 			// Update the record
-			history.updateItem("file://" + dirName, CrawlHistory::CRAWLED, fileStat.st_mtime);
-			reportFile = true;
+			history.updateItem("file://" + entryName, CrawlHistory::CRAWLED, fileStat.st_mtime);
+
+			// Was it last crawled after it was modified ?
+			if (itemDate < fileStat.st_mtime)
+			{
+#ifdef DEBUG
+				cout << "DirectoryScannerThread::scanEntry: reporting modified file " << entryName << endl;
+#endif
+				// No, crawl and index it again
+				reportFile = true;
+			}
 		}
 
 		if (reportFile == true)
 		{
-			foundFile(dirName);
+			foundFile(entryName);
 		}
 	}
 	else if (S_ISDIR(fileStat.st_mode))
@@ -1804,20 +1818,19 @@
 			++m_currentLevel;
 
 			// Open the directory
-			DIR *pDir = opendir(dirName.c_str());
+			DIR *pDir = opendir(entryName.c_str());
 			if (pDir == NULL)
 			{
 				return false;
 			}
 #ifdef DEBUG
-			cout << "DirectoryScannerThread::scanDirectory: entering "
-				<< dirName << endl;
+			cout << "DirectoryScannerThread::scanEntry: entering " << entryName << endl;
 #endif
 
 			if (m_pMonitor != NULL)
 			{
 				// Monitor first so that we don't miss events
-				m_pMonitor->addLocation(dirName, true);
+				m_pMonitor->addLocation(entryName, true);
 			}
 
 			// Iterate through this directory's entries
@@ -1831,20 +1844,20 @@
 				if ((pEntryName != NULL) &&
 					(pEntryName[0] != '.'))
 				{
-					string entryName(dirName);
+					string subEntryName(entryName);
 
-					if (dirName[dirName.length() - 1] != '/')
+					if (entryName[entryName.length() - 1] != '/')
 					{
-						entryName += "/";
+						subEntryName += "/";
 					}
-					entryName += pEntryName;
+					subEntryName += pEntryName;
 
 					// Scan this entry
-					if (scanDirectory(entryName) == false)
+					if (scanEntry(subEntryName) == false)
 					{
 #ifdef DEBUG
-						cout << "DirectoryScannerThread::scanDirectory: failed to open "
-							<< entryName << endl;
+						cout << "DirectoryScannerThread::scanEntry: failed to open "
+							<< subEntryName << endl;
 #endif
 					}
 				}
@@ -1852,17 +1865,8 @@
 				// Next entry
 				pDirEntry = readdir(pDir);
 			}
-
-			if (itemExists == false)
-			{
-				history.insertItem("file://" + dirName, CrawlHistory::DIRECTORY, m_sourceId, fileStat.st_mtime);
-			}
-			else
-			{
-				history.updateItem("file://" + dirName, CrawlHistory::DIRECTORY, fileStat.st_mtime);
-			}
 #ifdef DEBUG
-			cout << "DirectoryScannerThread::scanDirectory: done with " << dirName << endl;
+			cout << "DirectoryScannerThread::scanEntry: done with " << entryName << endl;
 #endif
 
 			// Close the directory
@@ -1881,6 +1885,7 @@
 void DirectoryScannerThread::doWork(void)
 {
 	CrawlHistory history(PinotSettings::getInstance().m_historyDatabase);
+	set<string> deletedFiles;
 
 	// Does this source exist ?
 	if ((m_dirName.empty() == false) &&
@@ -1890,10 +1895,35 @@
 		m_sourceId = history.insertSource("file://" + m_dirName);
 	}
 
-	if (scanDirectory(m_dirName) == false)
+	// Update this source's items status
+	history.updateItemsStatus(m_sourceId, CrawlHistory::CRAWLED, CrawlHistory::CRAWLING);
+
+	if (scanEntry(m_dirName) == false)
 	{
 		m_status = _("Couldn't open directory");
 		m_status += " ";
 		m_status += m_dirName;
 	}
+
+	// All files with status set to CRAWLING were not found in this crawl
+	// Chances are they were removed after the previous crawl
+	if (history.getSourceItems(m_sourceId, CrawlHistory::CRAWLING, deletedFiles) > 0)
+	{
+#ifdef DEBUG
+		cout << "DirectoryScannerThread::doWork: " << deletedFiles.size() << " files were deleted" << endl;
+#endif
+		for(set<string>::const_iterator fileIter = deletedFiles.begin();
+			fileIter != deletedFiles.end(); ++fileIter)
+		{
+			if (m_pHandler != NULL)
+			{
+				// Inform the MonitorHandler
+				m_pHandler->fileDeleted(*fileIter);
+			}
+
+			// Delete this item
+			history.deleteItem(*fileIter);
+		}
+	}
 }
+

Modified: trunk/UI/GTK2/src/WorkerThreads.h
===================================================================
--- trunk/UI/GTK2/src/WorkerThreads.h	2006-09-07 00:24:02 UTC (rev 463)
+++ trunk/UI/GTK2/src/WorkerThreads.h	2006-09-07 11:35:33 UTC (rev 464)
@@ -425,8 +425,9 @@
 class DirectoryScannerThread : public WorkerThread
 {
 	public:
-		DirectoryScannerThread(MonitorInterface *pMonitor,
-			const std::string &dirName, unsigned int maxLevel, bool followSymLinks);
+		DirectoryScannerThread(const std::string &dirName, unsigned int maxLevel,
+			bool followSymLinks, MonitorInterface *pMonitor,
+			MonitorHandler *pHandler);
 		virtual ~DirectoryScannerThread();
 
 		virtual std::string getType(void) const;
@@ -438,16 +439,17 @@
 		SigC::Signal3<void, const std::string&, const std::string&, bool>& getFileFoundSignal(void);
 
 	protected:
-		MonitorInterface *m_pMonitor;
 		std::string m_dirName;
 		unsigned int m_maxLevel;
 		bool m_followSymLinks;
+		MonitorInterface *m_pMonitor;
+		MonitorHandler *m_pHandler;
 		unsigned int m_currentLevel;
 		unsigned int m_sourceId;
 		SigC::Signal3<void, const std::string&, const std::string&, bool> m_signalFileFound;
 
 		void foundFile(const std::string &fileName);
-		bool scanDirectory(const std::string &dirName);
+		bool scanEntry(const std::string &entryName);
 		virtual void doWork(void);
 
 	private:



From fabricecolin at mail.berlios.de  Thu Sep  7 13:38:20 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Thu, 7 Sep 2006 13:38:20 +0200
Subject: [Pinot-svn] r465 - trunk/Monitor
Message-ID: <200609071138.k87BcKAq020769@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-07 13:38:20 +0200 (Thu, 07 Sep 2006)
New Revision: 465

Modified:
   trunk/Monitor/INotifyMonitor.cpp
   trunk/Monitor/INotifyMonitor.h
Log:
Generate a CREATED event for directories moved from somewhere that was not
monitored. Don't generate an internal event when a new directory is created.
Protect against concurrent access.


Modified: trunk/Monitor/INotifyMonitor.cpp
===================================================================
--- trunk/Monitor/INotifyMonitor.cpp	2006-09-07 11:35:33 UTC (rev 464)
+++ trunk/Monitor/INotifyMonitor.cpp	2006-09-07 11:38:20 UTC (rev 465)
@@ -42,6 +42,7 @@
 INotifyMonitor::INotifyMonitor() :
 	MonitorInterface()
 {
+	pthread_mutex_init(&m_mutex, NULL);
 	m_monitorFd = inotify_init();
 	if (m_monitorFd < 0)
 	{
@@ -58,12 +59,14 @@
 	{
 		close(m_monitorFd);
 	}
+	pthread_mutex_destroy(&m_mutex);
 }
 
 /// Starts monitoring a location.
 bool INotifyMonitor::addLocation(const string &location, bool isDirectory)
 {
 	uint32_t eventsMask = IN_CLOSE_WRITE|IN_MOVE|IN_CREATE|IN_DELETE|IN_UNMOUNT|IN_MOVE_SELF|IN_DELETE_SELF;
+	bool addedLocation = false;
 
 	if ((location.empty() == true) ||
 		(location == "/") ||
@@ -72,49 +75,60 @@
 		return false;
 	}
 
+	pthread_mutex_lock(&m_mutex);
 	map<string, int>::iterator locationIter = m_locations.find(location);
 	if (locationIter != m_locations.end())
 	{
 		// This is already being monitored
-		return true;
+		addedLocation = true;
 	}
-
-	// FIXME: check the maximum number of watches hasn't been reached (MAX_FILE_WATCHES ?)
-	int watchNum = inotify_add_watch(m_monitorFd, location.c_str(), eventsMask);
-	if (watchNum >= 0)
+	else
 	{
-		MonitorEvent monEvent;
+		// FIXME: check the maximum number of watches hasn't been reached (MAX_FILE_WATCHES ?)
+		int watchNum = inotify_add_watch(m_monitorFd, location.c_str(), eventsMask);
+		if (watchNum >= 0)
+		{
+			// Generate an event to signal the file exists and is being monitored
+			if (isDirectory == false)
+			{
+				MonitorEvent monEvent;
+				monEvent.m_location = location;
+				monEvent.m_isWatch = true;
+				monEvent.m_type = MonitorEvent::EXISTS;
+				monEvent.m_isDirectory = false;
+				m_internalEvents.push(monEvent);
+			}
 
-		// Generate an event to signal it exists and is being monitored
-		monEvent.m_location = location;
-		monEvent.m_isWatch = true;
-		monEvent.m_type = MonitorEvent::EXISTS;
-		monEvent.m_isDirectory = isDirectory;
-		m_internalEvents.push(monEvent);
-
-		m_watches.insert(pair<int, string>(watchNum, location));
-		m_locations.insert(pair<string, int>(location, watchNum));
+			m_watches.insert(pair<int, string>(watchNum, location));
+			m_locations.insert(pair<string, int>(location, watchNum));
 #ifdef DEBUG
-		cout << "INotifyMonitor::addLocation: added watch "
-			<< watchNum << " for " << location << endl;
+			cout << "INotifyMonitor::addLocation: added watch "
+				<< watchNum << " for " << location << endl;
 #endif
-
-		return true;
+			addedLocation = true;
+		}
+		else
+		{
+			cerr << "INotifyMonitor::addLocation: couldn't monitor " << location << endl;
+		}
 	}
-	cerr << "INotifyMonitor::addLocation: couldn't monitor " << location << endl;
+	pthread_mutex_unlock(&m_mutex);
 
-	return false;
+	return addedLocation;
 }
 
 /// Stops monitoring a location.
 bool INotifyMonitor::removeLocation(const string &location)
 {
+	bool removedLocation = false;
+
 	if ((location.empty() == true) ||
 		(m_monitorFd < 0))
 	{
 		return false;
 	}
 
+	pthread_mutex_lock(&m_mutex);
 	map<string, int>::iterator locationIter = m_locations.find(location);
 	if (locationIter != m_locations.end())
 	{
@@ -126,18 +140,22 @@
 		}
 		m_locations.erase(locationIter);
 
-		return true;
+		removedLocation = true;
 	}
-	cerr << "INotifyMonitor::removeLocation: " << location << " is not being monitored" << endl;
+	else
+	{
+		cerr << "INotifyMonitor::removeLocation: " << location << " is not being monitored" << endl;
+	}
+	pthread_mutex_unlock(&m_mutex);
 
-	return false;
+	return removedLocation;
 }
 
 /// Retrieves pending events.
 bool INotifyMonitor::retrievePendingEvents(queue<MonitorEvent> &events)
 {
 	char buffer[1024];
-	unsigned int queueLen;
+	unsigned int queueLen = 0;
 	size_t offset = 0;
 
 	if (m_monitorFd < 0)
@@ -145,6 +163,7 @@
 		return false;
 	}
 
+	pthread_mutex_lock(&m_mutex);
 	// Copy internal events
 	while (m_internalEvents.empty() == false)
 	{
@@ -161,12 +180,13 @@
 		cout << "INotifyMonitor::retrievePendingEvents: "
 			<< queueLen << " bytes to read" << endl;
 #endif
-		if (queueLen == 0)
-		{
-			// Nothing to read
-			return true;
-		}
 	}
+	if (queueLen == 0)
+	{
+		// Nothing to read
+		pthread_mutex_unlock(&m_mutex);
+		return true;
+	}
 
 	int bytesRead = read(m_monitorFd, buffer, 1024);
 	while ((bytesRead > 0) &&
@@ -260,9 +280,14 @@
 					watchIter->second = monEvent.m_location;
 				}
 			}
+			else
+			{
+				// The previous location is unknown because it's from somewhere not being monitored
+				monEvent.m_type = MonitorEvent::CREATED;
 #ifdef DEBUG
-			else cout << "INotifyMonitor::retrievePendingEvents: don't know where file was moved from" << endl;
+				cout << "INotifyMonitor::retrievePendingEvents: don't know where file was moved from" << endl;
 #endif
+			}
 		}
 		else if (pEvent->mask & IN_DELETE)
 		{
@@ -306,6 +331,8 @@
 
 		offset += eventSize;
 	}
+	pthread_mutex_unlock(&m_mutex);
 
 	return true;
 }
+

Modified: trunk/Monitor/INotifyMonitor.h
===================================================================
--- trunk/Monitor/INotifyMonitor.h	2006-09-07 11:35:33 UTC (rev 464)
+++ trunk/Monitor/INotifyMonitor.h	2006-09-07 11:38:20 UTC (rev 465)
@@ -17,6 +17,7 @@
 #ifndef _INOTIFY_MONITOR_H
 #define _INOTIFY_MONITOR_H
 
+#include <pthread.h>
 #include <string>
 #include <map>
 #include <queue>
@@ -39,6 +40,7 @@
 		virtual bool retrievePendingEvents(std::queue<MonitorEvent> &events);
 
 	protected:
+		pthread_mutex_t m_mutex;
 		std::queue<MonitorEvent> m_internalEvents;
 		std::map<std::string, int> m_locations;
 		std::map<uint32_t, std::string> m_movedFrom;



From fabricecolin at mail.berlios.de  Thu Sep  7 13:41:21 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Thu, 7 Sep 2006 13:41:21 +0200
Subject: [Pinot-svn] r466 - trunk/UI/GTK2/src
Message-ID: <200609071141.k87BfLgE021258@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-07 13:41:21 +0200 (Thu, 07 Sep 2006)
New Revision: 466

Modified:
   trunk/UI/GTK2/src/MboxHandler.cpp
   trunk/UI/GTK2/src/OnDiskHandler.cpp
   trunk/UI/GTK2/src/OnDiskHandler.h
Log:
OnDisk adds a label for the source the document being indexed belongs to.
Protect against concurrent access.
Removed unnecessary call to setDocumentLabels() in Mbox.


Modified: trunk/UI/GTK2/src/MboxHandler.cpp
===================================================================
--- trunk/UI/GTK2/src/MboxHandler.cpp	2006-09-07 11:38:20 UTC (rev 465)
+++ trunk/UI/GTK2/src/MboxHandler.cpp	2006-09-07 11:41:21 UTC (rev 466)
@@ -138,20 +138,22 @@
 bool MboxHandler::parseMailAccount(MboxParser &boxParser, const string &sourceLabel)
 {
 	set<unsigned int> docIdList;
+	set<string> labels;
+	const Document *pMessage = boxParser.getDocument();
+	char sourceStr[64];
+	unsigned int docNum = 0;
 	bool indexedFile = false;
-
 #ifdef DEBUG
 	Timer timer;
 	timer.start();
 #endif
-	set<string> labels;
-	const Document *pMessage = boxParser.getDocument();
-	unsigned int docNum = 0;
 
 	// Get a list of documents labeled with this source label
 	m_index.listDocumentsWithLabel(sourceLabel, docIdList); 
 
 	// This is the labels we'll apply to new documents
+	snprintf(sourceStr, 64, "SOURCE%u", m_sourceId);
+	labels.insert(sourceStr);
 	labels.insert(sourceLabel);
 
 	// Parse the mbox file
@@ -179,8 +181,6 @@
 			{
 				time_t messageDate = boxParser.getDate();
 
-				m_index.setDocumentLabels(docId, labels);
-
 				IndexedDocument docInfo(pMessage->getTitle(),
 					XapianDatabase::buildUrl(PinotSettings::getInstance().m_daemonIndexLocation, docId),
 					pMessage->getLocation(), pMessage->getType(), pMessage->getLanguage());
@@ -268,7 +268,7 @@
 	}
 
 	// Unindex messages that belong to mailboxes that no longer exist
-	if (m_history.getSourceItems(m_sourceId, CrawlHistory::CRAWLED, 0, mailboxes) > 0)
+	if (m_history.getSourceItems(m_sourceId, CrawlHistory::CRAWLED, mailboxes) > 0)
 	{
 		for(set<string>::const_iterator mailIter = mailboxes.begin();
 			mailIter != mailboxes.end(); ++mailIter)

Modified: trunk/UI/GTK2/src/OnDiskHandler.cpp
===================================================================
--- trunk/UI/GTK2/src/OnDiskHandler.cpp	2006-09-07 11:38:20 UTC (rev 465)
+++ trunk/UI/GTK2/src/OnDiskHandler.cpp	2006-09-07 11:41:21 UTC (rev 466)
@@ -16,6 +16,7 @@
 
 #include <fcntl.h>
 #include <unistd.h>
+#include <set>
 #include <iostream>
 #include <fstream>
 
@@ -39,11 +40,13 @@
 	m_history(PinotSettings::getInstance().m_historyDatabase),
 	m_index(PinotSettings::getInstance().m_daemonIndexLocation)
 {
+	pthread_mutex_init(&m_mutex, NULL);
 	m_index.setStemmingMode(IndexInterface::STORE_BOTH);
 }
 
 OnDiskHandler::~OnDiskHandler()
 {
+	pthread_mutex_destroy(&m_mutex);
 }
 
 bool OnDiskHandler::indexFile(const string &fileName, bool alwaysUpdate)
@@ -68,6 +71,29 @@
 		return true;
 	}
 
+	// What source does it belong to ?
+	for(map<unsigned int, string>::const_iterator sourceIter = m_fileSources.begin();
+		sourceIter != m_fileSources.end(); ++sourceIter)
+	{
+		unsigned int sourceId = sourceIter->first;
+
+		if (sourceIter->second.length() < location.length())
+		{
+			// Skip
+			continue;
+		}
+
+		if (sourceIter->second.substr(0, location.length()) == location)
+		{
+			char sourceStr[64];
+
+			// That's the one
+			snprintf(sourceStr, 64, "SOURCE%u", sourceIter->first);
+			labels.insert(sourceStr);
+			break;
+		}
+	}
+
 	DocumentInfo docInfo(urlObj.getFile(), location, MIMEScanner::scanUrl(urlObj), "");
 
 	FileCollector fileCollector;
@@ -138,7 +164,6 @@
 
 void OnDiskHandler::initialize(void)
 {
-	map<unsigned int, string> sources;
 	set<string> directories;
 
 	// Get the map of indexable locations
@@ -150,19 +175,20 @@
 	}
 
 	// Unindex documents that belong to sources that no longer exist
-	if (m_history.getSources(sources) > 0)
+	if (m_history.getSources(m_fileSources) > 0)
 	{
-		for(map<unsigned int, string>::const_iterator sourceIter = sources.begin();
-			sourceIter != sources.end(); ++sourceIter)
+		for(map<unsigned int, string>::const_iterator sourceIter = m_fileSources.begin();
+			sourceIter != m_fileSources.end(); ++sourceIter)
 		{
 			unsigned int sourceId = sourceIter->first;
 
-			// Is this a file and does it still exist ?
 			if (sourceIter->second.substr(0, 7) != "file://")
 			{
+				// Skip
 				continue;
 			}
 
+			// Is this an indexable location ?
 			if (directories.find(sourceIter->second.substr(7)) == directories.end())
 			{
 				char sourceStr[64];
@@ -190,7 +216,9 @@
 
 void OnDiskHandler::flushIndex(void)
 {
+	pthread_mutex_lock(&m_mutex);
 	m_index.flush();
+	pthread_mutex_unlock(&m_mutex);
 }
 
 bool OnDiskHandler::fileExists(const string &fileName)
@@ -201,27 +229,42 @@
 
 bool OnDiskHandler::fileCreated(const string &fileName)
 {
+	bool handledEvent = false;
+
 #ifdef DEBUG
 	cout << "OnDiskHandler::fileCreated: " << fileName << endl;
 #endif
+	pthread_mutex_lock(&m_mutex);
 	// The file shouldn't exist in the index, but if it does for some reason, don't update it
-	return indexFile(fileName, false);
+	handledEvent = indexFile(fileName, false);
+	pthread_mutex_unlock(&m_mutex);
+
+	return handledEvent;
 }
 
 bool OnDiskHandler::fileModified(const string &fileName)
 {
+	bool handledEvent = false;
+
 #ifdef DEBUG
 	cout << "OnDiskHandler::fileModified: " << fileName << endl;
 #endif
+	pthread_mutex_lock(&m_mutex);
 	// Update the file, or index if necessary
-	return indexFile(fileName, true);
+	handledEvent = indexFile(fileName, true);
+	pthread_mutex_unlock(&m_mutex);
+
+	return handledEvent;
 }
 
 bool OnDiskHandler::fileMoved(const string &fileName, const string &previousFileName)
 {
+	bool handledEvent = false;
+
 #ifdef DEBUG
 	cout << "OnDiskHandler::fileMoved: " << fileName << endl;
 #endif
+	pthread_mutex_lock(&m_mutex);
 	unsigned int oldDocId = m_index.hasDocument(string("file://") + previousFileName);
 	if (oldDocId > 0)
 	{
@@ -232,21 +275,24 @@
 			// Change the location
 			docInfo.setLocation(string("file://") + fileName);
 
-			return replaceFile(oldDocId, docInfo);
+			handledEvent = replaceFile(oldDocId, docInfo);
 		}
 	}
+	pthread_mutex_unlock(&m_mutex);
 
-	return false; 
+	return handledEvent;
 }
 
 bool OnDiskHandler::directoryMoved(const string &dirName,
 	const string &previousDirName)
 {
 	set<unsigned int> docIdList;
+	bool handledEvent = false;
 
 #ifdef DEBUG
 	cout << "OnDiskHandler::directoryMoved: " << dirName << endl;
 #endif
+	pthread_mutex_lock(&m_mutex);
 	if (m_index.listDocumentsInDirectory(previousDirName, docIdList) == true)
 	{
 		for (set<unsigned int>::const_iterator iter = docIdList.begin();
@@ -271,37 +317,44 @@
 			}
 		}
 
-		return true;
+		handledEvent = true;
 	}
 #ifdef DEBUG
-	cout << "OnDiskHandler::directoryMoved: no documents in " << previousDirName << endl;
+	else cout << "OnDiskHandler::directoryMoved: no documents in " << previousDirName << endl;
 #endif
+	pthread_mutex_unlock(&m_mutex);
 
-	return false;
+	return handledEvent;
 }
 
 bool OnDiskHandler::fileDeleted(const string &fileName)
 {
+	bool handledEvent = false;
+
 #ifdef DEBUG
 	cout << "OnDiskHandler::fileDeleted: " << fileName << endl;
 #endif
+	pthread_mutex_lock(&m_mutex);
 	unsigned int docId = m_index.hasDocument(string("file://") + fileName);
 	if (docId > 0)
 	{
 		// Unindex the file
-		return m_index.unindexDocument(docId);
+		handledEvent = m_index.unindexDocument(docId);
 	}
+	pthread_mutex_unlock(&m_mutex);
 
-	return false;
+	return handledEvent;
 }
 
 bool OnDiskHandler::directoryDeleted(const string &dirName)
 {
 	set<unsigned int> docIdList;
+	bool handledEvent = false;
 
 #ifdef DEBUG
 	cout << "OnDiskHandler::directoryDeleted: " << dirName << endl;
 #endif
+	pthread_mutex_lock(&m_mutex);
 	if (m_index.listDocumentsInDirectory(dirName, docIdList) == true)
 	{
 		for (set<unsigned int>::const_iterator iter = docIdList.begin();
@@ -310,12 +363,13 @@
 			m_index.unindexDocument(*iter);
 		}
 
-		return true;
+		handledEvent = true;
 	}
 #ifdef DEBUG
-	cout << "OnDiskHandler::directoryDeleted: no documents in " << dirName << endl;
+	else cout << "OnDiskHandler::directoryDeleted: no documents in " << dirName << endl;
 #endif
+	pthread_mutex_unlock(&m_mutex);
 
-	return false;
+	return handledEvent;
 }
 

Modified: trunk/UI/GTK2/src/OnDiskHandler.h
===================================================================
--- trunk/UI/GTK2/src/OnDiskHandler.h	2006-09-07 11:38:20 UTC (rev 465)
+++ trunk/UI/GTK2/src/OnDiskHandler.h	2006-09-07 11:41:21 UTC (rev 466)
@@ -18,8 +18,9 @@
 #define _ONDISKHANDLER_HH
 
 #include <time.h>
+#include <pthread.h>
 #include <string>
-#include <set>
+#include <map>
 #include <sigc++/slot.h>
 
 #include "CrawlHistory.h"
@@ -64,6 +65,8 @@
 		virtual bool directoryDeleted(const std::string &dirName);
 
 	protected:
+		pthread_mutex_t m_mutex;
+		std::map<unsigned int, std::string> m_fileSources;
 		CrawlHistory m_history;
 		XapianIndex m_index;
 



From fabricecolin at mail.berlios.de  Thu Sep  7 13:50:27 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Thu, 7 Sep 2006 13:50:27 +0200
Subject: [Pinot-svn] r467 - in trunk: Monitor UI/GTK2/src
Message-ID: <200609071150.k87BoR02023277@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-07 13:50:27 +0200 (Thu, 07 Sep 2006)
New Revision: 467

Modified:
   trunk/Monitor/MonitorHandler.cpp
   trunk/Monitor/MonitorHandler.h
   trunk/UI/GTK2/src/DaemonState.cpp
   trunk/UI/GTK2/src/DaemonState.h
   trunk/UI/GTK2/src/MboxHandler.cpp
   trunk/UI/GTK2/src/OnDiskHandler.cpp
   trunk/UI/GTK2/src/WorkerThreads.cpp
Log:
Update signalling in MonitorHandler is no longer useful.


Modified: trunk/Monitor/MonitorHandler.cpp
===================================================================
--- trunk/Monitor/MonitorHandler.cpp	2006-09-07 11:41:21 UTC (rev 466)
+++ trunk/Monitor/MonitorHandler.cpp	2006-09-07 11:50:27 UTC (rev 467)
@@ -17,7 +17,6 @@
 #include "MonitorHandler.h"
 
 using namespace std;
-using namespace SigC;
 
 MonitorHandler::MonitorHandler()
 {
@@ -31,8 +30,3 @@
 {
 	return m_fileNames;
 }
-
-Signal3<void, IndexedDocument, unsigned int, string>& MonitorHandler::getUpdateSignal(void)
-{
-	return m_signalUpdate;
-}

Modified: trunk/Monitor/MonitorHandler.h
===================================================================
--- trunk/Monitor/MonitorHandler.h	2006-09-07 11:41:21 UTC (rev 466)
+++ trunk/Monitor/MonitorHandler.h	2006-09-07 11:50:27 UTC (rev 467)
@@ -20,8 +20,6 @@
 #include <string>
 #include <set>
 #include <map>
-#include <sigc++/compatibility.h>
-#include <sigc++/slot.h>
 
 #include "IndexedDocument.h"
 #include "MonitorInterface.h"
@@ -64,12 +62,8 @@
 		/// Returns the names of files to monitor.
 		const std::set<std::string> &getFileNames(void) const;
 
-		/// Returns the file update signal.
-		SigC::Signal3<void, IndexedDocument, unsigned int, std::string>& getUpdateSignal(void);
-
 	protected:
 		std::set<std::string> m_fileNames;
-		SigC::Signal3<void, IndexedDocument, unsigned int, std::string> m_signalUpdate;
 
 	private:
 		MonitorHandler(const MonitorHandler &other);

Modified: trunk/UI/GTK2/src/DaemonState.cpp
===================================================================
--- trunk/UI/GTK2/src/DaemonState.cpp	2006-09-07 11:41:21 UTC (rev 466)
+++ trunk/UI/GTK2/src/DaemonState.cpp	2006-09-07 11:50:27 UTC (rev 467)
@@ -16,6 +16,8 @@
 
 #include <iostream>
 #include <sigc++/class_slot.h>
+#include <sigc++/compatibility.h>
+#include <sigc++/slot.h>
 #include <glibmm/ustring.h>
 #include <glibmm/stringutils.h>
 #include <glibmm/convert.h>
@@ -91,19 +93,12 @@
 	WorkerThread::immediateFlush(false);
 
 	// Fire up the mail monitor thread now
-	MboxHandler *pMboxHandler = new MboxHandler();
-	// Connect to its update signal
-	pMboxHandler->getUpdateSignal().connect(
-		SigC::slot(*this, &DaemonState::on_message_indexupdate));
-	MonitorThread *pMailMonitorThread = new MonitorThread(m_pMailMonitor, pMboxHandler);
+	MonitorThread *pMailMonitorThread = new MonitorThread(m_pMailMonitor, new MboxHandler());
 	pMailMonitorThread->getDirectoryFoundSignal().connect(SigC::slot(*this, &DaemonState::on_message_filefound));
 	start_thread(pMailMonitorThread, true);
 
 	// Same for the disk monitor thread
 	m_pDiskHandler = new OnDiskHandler();
-	// Connect to its update signal
-	m_pDiskHandler->getUpdateSignal().connect(
-		SigC::slot(*this, &DaemonState::on_message_indexupdate));
 	MonitorThread *pDiskMonitorThread = new MonitorThread(m_pDiskMonitor, m_pDiskHandler);
 	pDiskMonitorThread->getDirectoryFoundSignal().connect(SigC::slot(*this, &DaemonState::on_message_filefound));
 	start_thread(pDiskMonitorThread, true);
@@ -201,11 +196,6 @@
 	pop_queue(indexedUrl);
 }
 
-void DaemonState::on_message_indexupdate(IndexedDocument docInfo, unsigned int docId, string indexName)
-{
-	// FIXME: anything to do ?
-}
-
 void DaemonState::on_message_filefound(const string &location, const string &sourceLabel, bool isDirectory)
 {
 	if (isDirectory == false)

Modified: trunk/UI/GTK2/src/DaemonState.h
===================================================================
--- trunk/UI/GTK2/src/DaemonState.h	2006-09-07 11:41:21 UTC (rev 466)
+++ trunk/UI/GTK2/src/DaemonState.h	2006-09-07 11:50:27 UTC (rev 467)
@@ -37,8 +37,6 @@
 
 		void on_thread_end(WorkerThread *pThread);
 
-		void on_message_indexupdate(IndexedDocument docInfo, unsigned int docId, std::string indexName);
-
 		void on_message_filefound(const std::string &location, const std::string &sourceLabel,
 			bool isDirectory);
 

Modified: trunk/UI/GTK2/src/MboxHandler.cpp
===================================================================
--- trunk/UI/GTK2/src/MboxHandler.cpp	2006-09-07 11:41:21 UTC (rev 466)
+++ trunk/UI/GTK2/src/MboxHandler.cpp	2006-09-07 11:50:27 UTC (rev 467)
@@ -177,20 +177,11 @@
 
 			unsigned int docId = 0;
 			indexedFile = m_index.indexDocument(*pTokenizer, labels, docId);
-			if (indexedFile == true)
+#ifdef DEBUG
+			if (indexedFile == false)
 			{
-				time_t messageDate = boxParser.getDate();
-
-				IndexedDocument docInfo(pMessage->getTitle(),
-					XapianDatabase::buildUrl(PinotSettings::getInstance().m_daemonIndexLocation, docId),
-					pMessage->getLocation(), pMessage->getType(), pMessage->getLanguage());
-				docInfo.setTimestamp(TimeConverter::toTimestamp(messageDate));
-
-				// Signal
-				m_signalUpdate(docInfo, docId, _("My Documents"));
+				cout << "MboxHandler::parseMailAccount: couldn't index message " << docNum << endl;
 			}
-#ifdef DEBUG
-			else cout << "MboxHandler::parseMailAccount: couldn't index message " << docNum << endl;
 #endif
 
 			delete pTokenizer;

Modified: trunk/UI/GTK2/src/OnDiskHandler.cpp
===================================================================
--- trunk/UI/GTK2/src/OnDiskHandler.cpp	2006-09-07 11:41:21 UTC (rev 466)
+++ trunk/UI/GTK2/src/OnDiskHandler.cpp	2006-09-07 11:50:27 UTC (rev 467)
@@ -129,17 +129,11 @@
 		indexedFile = m_index.updateDocument(docId, *pTokenizer);
 	}
 
-	if (indexedFile == true)
+#ifdef DEBUG
+	if (indexedFile == false)
 	{
-		IndexedDocument indexedDocInfo(docInfo.getTitle(),
-			XapianDatabase::buildUrl(PinotSettings::getInstance().m_daemonIndexLocation, docId),
-			docInfo.getLocation(), docInfo.getType(), docInfo.getLanguage());
-
-		// Signal
-		m_signalUpdate(indexedDocInfo, docId, _("My Documents"));
+		cout << "OnDiskHandler::indexFile: couldn't index " << location << endl;
 	}
-#ifdef DEBUG
-	else cout << "OnDiskHandler::indexFile: couldn't index " << location << endl;
 #endif
 
 	delete pTokenizer;

Modified: trunk/UI/GTK2/src/WorkerThreads.cpp
===================================================================
--- trunk/UI/GTK2/src/WorkerThreads.cpp	2006-09-07 11:41:21 UTC (rev 466)
+++ trunk/UI/GTK2/src/WorkerThreads.cpp	2006-09-07 11:50:27 UTC (rev 467)
@@ -27,6 +27,8 @@
 #include <iostream>
 #include <fstream>
 #include <sigc++/class_slot.h>
+#include <sigc++/compatibility.h>
+#include <sigc++/slot.h>
 
 #include "HtmlTokenizer.h"
 #include "XmlTokenizer.h"



From fabricecolin at mail.berlios.de  Thu Sep  7 15:29:08 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Thu, 7 Sep 2006 15:29:08 +0200
Subject: [Pinot-svn] r468 - trunk
Message-ID: <200609071329.k87DT8dW003516@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-07 15:29:08 +0200 (Thu, 07 Sep 2006)
New Revision: 468

Modified:
   trunk/Makefile.am
   trunk/pinot.spec.in
Log:
Install the deskbar plugin, package in separate RPM.


Modified: trunk/Makefile.am
===================================================================
--- trunk/Makefile.am	2006-09-07 11:50:27 UTC (rev 467)
+++ trunk/Makefile.am	2006-09-07 13:29:08 UTC (rev 468)
@@ -11,7 +11,8 @@
 	UI/GTK2/src/pinot.1 UI/GTK2/src/pinot-dbus-daemon.1 \
 	UI/GTK2/src/pinot-dbus-daemon.xml UI/GTK2/src/de.berlios.Pinot.service \
 	UI/GTK2/xapian-powered.png UI/GTK2/pinot.png \
-	UI/GTK2/metase-gtk2.glade UI/GTK2/metase-gtk2.gladep
+	UI/GTK2/metase-gtk2.glade UI/GTK2/metase-gtk2.gladep \
+	UI/pinot-deskbar.py
 
 man_MANS = Collect/pinot-collect.1 Index/pinot-index.1 Search/pinot-search.1 \
 	UI/GTK2/src/pinot.1 UI/GTK2/src/pinot-dbus-daemon.1
@@ -36,6 +37,8 @@
 	$(INSTALL_DATA) UI/GTK2/pinot.png $(DESTDIR)$(datadir)/icons/hicolor/48x48/apps/pinot.png
 	$(mkinstalldirs) $(DESTDIR)$(datadir)/applications
 	@desktop-file-install --vendor Amra --dir $(DESTDIR)$(datadir)/applications pinot.desktop
+	$(mkinstalldirs) $(DESTDIR)$(libdir)/deskbar-applet/handlers/
+	$(INSTALL_DATA) UI/pinot-deskbar.py $(DESTDIR)$(libdir)/deskbar-applet/handlers/
 
 ACLOCAL_AMFLAGS = -I m4
 

Modified: trunk/pinot.spec.in
===================================================================
--- trunk/pinot.spec.in	2006-09-07 11:50:27 UTC (rev 467)
+++ trunk/pinot.spec.in	2006-09-07 13:29:08 UTC (rev 468)
@@ -56,6 +56,15 @@
 %description omega
 The included plugin enables Pinot to use Xapian Omega as a search engine.
 
+%package deskbar
+Summary: Pinot plugin for DeskbarApplet
+Group: Applications/Internet
+Requires: %{name} = %{version}
+Requires: deskbar-applet
+
+%description deskbar
+The included plugin enables Deskbar to search documents indexed by Pinot.
+
 %prep
 %setup -q
 
@@ -133,4 +142,8 @@
 %defattr(-, root, root, -)
 %config(noreplace) %{_datadir}/pinot/engines/OmegaDescription.xml
 
+%files deskbar
+%defattr(-, root, root, -)
+%{_libdir}/deskbar-applet/handlers/pinot-deskbar.py*
+
 %changelog



From fabricecolin at mail.berlios.de  Thu Sep  7 17:03:01 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Thu, 7 Sep 2006 17:03:01 +0200
Subject: [Pinot-svn] r469 - trunk/UI/GTK2/src
Message-ID: <200609071503.k87F31BC014237@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-07 17:03:01 +0200 (Thu, 07 Sep 2006)
New Revision: 469

Modified:
   trunk/UI/GTK2/src/OnDiskHandler.cpp
   trunk/UI/GTK2/src/WorkerThreads.cpp
Log:
Fix in previous commit on WorkerThreads.
Cosmetic change to OnDiskHandler.


Modified: trunk/UI/GTK2/src/OnDiskHandler.cpp
===================================================================
--- trunk/UI/GTK2/src/OnDiskHandler.cpp	2006-09-07 13:29:08 UTC (rev 468)
+++ trunk/UI/GTK2/src/OnDiskHandler.cpp	2006-09-07 15:03:01 UTC (rev 469)
@@ -29,7 +29,6 @@
 #include "TokenizerFactory.h"
 #include "CrawlHistory.h"
 #include "FileCollector.h"
-#include "PinotUtils.h"
 #include "OnDiskHandler.h"
 
 using namespace std;

Modified: trunk/UI/GTK2/src/WorkerThreads.cpp
===================================================================
--- trunk/UI/GTK2/src/WorkerThreads.cpp	2006-09-07 13:29:08 UTC (rev 468)
+++ trunk/UI/GTK2/src/WorkerThreads.cpp	2006-09-07 15:03:01 UTC (rev 469)
@@ -1920,7 +1920,7 @@
 			if (m_pHandler != NULL)
 			{
 				// Inform the MonitorHandler
-				m_pHandler->fileDeleted(*fileIter);
+				m_pHandler->fileDeleted(fileIter->substr(7));
 			}
 
 			// Delete this item



From fabricecolin at mail.berlios.de  Fri Sep  8 13:39:58 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Fri, 8 Sep 2006 13:39:58 +0200
Subject: [Pinot-svn] r470 - trunk/Monitor
Message-ID: <200609081139.k88BdwIb004606@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-08 13:39:57 +0200 (Fri, 08 Sep 2006)
New Revision: 470

Modified:
   trunk/Monitor/INotifyMonitor.cpp
   trunk/Monitor/INotifyMonitor.h
Log:
Deal with IN_MOVE_SELF.


Modified: trunk/Monitor/INotifyMonitor.cpp
===================================================================
--- trunk/Monitor/INotifyMonitor.cpp	2006-09-07 15:03:01 UTC (rev 469)
+++ trunk/Monitor/INotifyMonitor.cpp	2006-09-08 11:39:57 UTC (rev 470)
@@ -227,16 +227,16 @@
 			monEvent.m_location += pEvent->name;
 			monEvent.m_isWatch = false;
 		}
-#ifdef DEBUG
-		cout << "INotifyMonitor::retrievePendingEvents: event on "
-			<< monEvent.m_location << endl;
-#endif
 
-		map<uint32_t, string>::iterator movedIter = m_movedFrom.end();
+		map<uint32_t, MonitorEvent>::iterator movedIter = m_movedFrom.end();
 
 		// What type of event ?
 		if (pEvent->mask & IN_CREATE)
 		{
+#ifdef DEBUG
+			cout << "INotifyMonitor::retrievePendingEvents: created "
+				<< monEvent.m_location << endl;
+#endif
 			// Skip regular files
 			if (monEvent.m_isDirectory == true)
 			{
@@ -245,20 +245,32 @@
 		}
 		else if (pEvent->mask & IN_CLOSE_WRITE)
 		{
+#ifdef DEBUG
+			cout << "INotifyMonitor::retrievePendingEvents: written and closed "
+				<< monEvent.m_location << endl;
+#endif
 			monEvent.m_type = MonitorEvent::WRITE_CLOSED;
 		}
 		else if (pEvent->mask & IN_MOVED_FROM)
 		{
+#ifdef DEBUG
+			cout << "INotifyMonitor::retrievePendingEvents: moved from on "
+				<< monEvent.m_location << " " << pEvent->cookie << endl;
+#endif
 			// Store this until we receive a IN_MOVED_TO event
-			m_movedFrom.insert(pair<uint32_t, string>(pEvent->cookie, monEvent.m_location));
+			m_movedFrom.insert(pair<uint32_t, MonitorEvent>(pEvent->cookie, monEvent));
 		}
 		else if (pEvent->mask & IN_MOVED_TO)
 		{
+#ifdef DEBUG
+			cout << "INotifyMonitor::retrievePendingEvents: moved to on "
+				<< monEvent.m_location << " " << pEvent->cookie << endl;
+#endif
 			// What was the previous location ?
 			movedIter = m_movedFrom.find(pEvent->cookie);
 			if (movedIter != m_movedFrom.end())
 			{
-				monEvent.m_previousLocation = movedIter->second;
+				monEvent.m_previousLocation = movedIter->second.m_location;
 				monEvent.m_type = MonitorEvent::MOVED;
 #ifdef DEBUG
 				cout << "INotifyMonitor::retrievePendingEvents: moved from "
@@ -289,18 +301,53 @@
 #endif
 			}
 		}
+		else if (pEvent->mask & IN_MOVE_SELF)
+		{
+#ifdef DEBUG
+			cout << "INotifyMonitor::retrievePendingEvents: moved self on "
+				<< monEvent.m_location << " " << pEvent->cookie << endl;
+#endif
+			// It was moved somewhere not being monitored
+			if (pEvent->cookie == 0)
+			{
+				for (movedIter = m_movedFrom.begin(); movedIter != m_movedFrom.end(); ++movedIter)
+				{
+					if (movedIter->second.m_location == monEvent.m_location)
+					{
+						// For some reason, IN_ISDIR is not set when the cookie is 0
+						if (movedIter->second.m_isDirectory == true)
+						{
+							monEvent.m_isDirectory = true;
+						}
+						break;
+					}
+				}
+			}
+			else
+			{
+				movedIter = m_movedFrom.find(pEvent->cookie);
+			}
+
+			if (movedIter != m_movedFrom.end())
+			{
+				monEvent.m_type = MonitorEvent::DELETED;
+
+				m_movedFrom.erase(movedIter);
+			}
+		}
 		else if (pEvent->mask & IN_DELETE)
 		{
+#ifdef DEBUG
+			cout << "INotifyMonitor::retrievePendingEvents: deleted "
+				<< monEvent.m_location << endl;
+#endif
 			monEvent.m_type = MonitorEvent::DELETED;
 		}
-		else if (pEvent->mask & IN_MOVE_SELF)
-		{
-			// FIXME: how do we find out where the watched location was moved to ?
-		}
 		else if (pEvent->mask & IN_DELETE_SELF)
 		{
 #ifdef DEBUG
-			cout << "INotifyMonitor::retrievePendingEvents: watch moved or deleted itself" << endl;
+			cout << "INotifyMonitor::retrievePendingEvents: deleted self on "
+				<< monEvent.m_location << endl;
 #endif
 			if (monEvent.m_isWatch == true)
 			{
@@ -309,6 +356,10 @@
 		}
 		else if (pEvent->mask & IN_UNMOUNT)
 		{
+#ifdef DEBUG
+			cout << "INotifyMonitor::retrievePendingEvents: unmounted on "
+				<< monEvent.m_location << endl;
+#endif
 			if (monEvent.m_isWatch == true)
 			{
 				// Watches are removed silently if the backing filesystem is unmounted
@@ -319,7 +370,7 @@
 		{
 #ifdef DEBUG
 			cout << "INotifyMonitor::retrievePendingEvents: ignoring event "
-				<< pEvent->mask << endl;
+				<< pEvent->mask << " on " << monEvent.m_location << endl;
 #endif
 		}
 

Modified: trunk/Monitor/INotifyMonitor.h
===================================================================
--- trunk/Monitor/INotifyMonitor.h	2006-09-07 15:03:01 UTC (rev 469)
+++ trunk/Monitor/INotifyMonitor.h	2006-09-08 11:39:57 UTC (rev 470)
@@ -43,7 +43,7 @@
 		pthread_mutex_t m_mutex;
 		std::queue<MonitorEvent> m_internalEvents;
 		std::map<std::string, int> m_locations;
-		std::map<uint32_t, std::string> m_movedFrom;
+		std::map<uint32_t, MonitorEvent> m_movedFrom;
 
 	private:
 		INotifyMonitor(const INotifyMonitor &other);



From fabricecolin at mail.berlios.de  Fri Sep  8 13:43:37 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Fri, 8 Sep 2006 13:43:37 +0200
Subject: [Pinot-svn] r471 - trunk/UI/GTK2/src
Message-ID: <200609081143.k88BhbJf007232@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-08 13:43:31 +0200 (Fri, 08 Sep 2006)
New Revision: 471

Modified:
   trunk/UI/GTK2/src/DaemonState.cpp
   trunk/UI/GTK2/src/DaemonState.h
   trunk/UI/GTK2/src/OnDiskHandler.cpp
   trunk/UI/GTK2/src/OnDiskHandler.h
   trunk/UI/GTK2/src/WorkerThreads.cpp
   trunk/UI/GTK2/src/WorkerThreads.h
Log:
OnDiskHandler and DirectoryScannerThread populate CrawlHistory correctly.
MonitorThread doesn't own the handler object.


Modified: trunk/UI/GTK2/src/DaemonState.cpp
===================================================================
--- trunk/UI/GTK2/src/DaemonState.cpp	2006-09-08 11:39:57 UTC (rev 470)
+++ trunk/UI/GTK2/src/DaemonState.cpp	2006-09-08 11:43:31 UTC (rev 471)
@@ -40,6 +40,7 @@
 	ThreadsManager(PinotSettings::getInstance().m_daemonIndexLocation, 20),
 	m_pMailMonitor(MonitorFactory::getMonitor()),
 	m_pDiskMonitor(MonitorFactory::getMonitor()),
+	m_pMailHandler(NULL),
 	m_pDiskHandler(NULL)
 {
 	m_onThreadEndSignal.connect(SigC::slot(*this, &DaemonState::on_thread_end));
@@ -55,25 +56,36 @@
 	{
 		delete m_pMailMonitor;
 	}
+	if (m_pDiskHandler != NULL)
+	{
+		delete m_pDiskHandler;
+	}
+	if (m_pMailHandler != NULL)
+	{
+		delete m_pMailHandler;
+	}
 }
 
-bool DaemonState::crawlLocation(const string &locationToCrawl, bool monitor)
+bool DaemonState::crawlLocation(const string &locationToCrawl, bool isSource, bool doMonitoring)
 {
 	DirectoryScannerThread *pScannerThread = NULL;
+	unsigned int sourceId = 0;
 
 	if (locationToCrawl.empty() == true)
 	{
 		return false;
 	}
 
-	if (monitor == false)
+	if (doMonitoring == false)
 	{
 		// Monitoring is not necessary
-		pScannerThread = new DirectoryScannerThread(locationToCrawl, 0, true, NULL, NULL);
+		pScannerThread = new DirectoryScannerThread(locationToCrawl, isSource,
+			0, true, NULL, NULL);
 	}
 	else
 	{
-		pScannerThread = new DirectoryScannerThread(locationToCrawl, 0, true, m_pDiskMonitor, m_pDiskHandler);
+		pScannerThread = new DirectoryScannerThread(locationToCrawl, isSource,
+			0, true, m_pDiskMonitor, m_pDiskHandler);
 	}
 	pScannerThread->getFileFoundSignal().connect(SigC::slot(*this, &DaemonState::on_message_filefound));
 
@@ -93,7 +105,8 @@
 	WorkerThread::immediateFlush(false);
 
 	// Fire up the mail monitor thread now
-	MonitorThread *pMailMonitorThread = new MonitorThread(m_pMailMonitor, new MboxHandler());
+	m_pMailHandler = new MboxHandler();
+	MonitorThread *pMailMonitorThread = new MonitorThread(m_pMailMonitor, m_pMailHandler);
 	pMailMonitorThread->getDirectoryFoundSignal().connect(SigC::slot(*this, &DaemonState::on_message_filefound));
 	start_thread(pMailMonitorThread, true);
 
@@ -107,7 +120,7 @@
 	if (locationIter != PinotSettings::getInstance().m_indexableLocations.end())
 	{
 		// Crawl this now
-		crawlLocation(locationIter->m_name, locationIter->m_monitor);
+		crawlLocation(locationIter->m_name, true, locationIter->m_monitor);
 	}
 }
 
@@ -154,12 +167,18 @@
 				++locationIter;
 				if (locationIter != PinotSettings::getInstance().m_indexableLocations.end())
 				{
-					crawlLocation(locationIter->m_name, locationIter->m_monitor);
+					crawlLocation(locationIter->m_name, true, locationIter->m_monitor);
 				}
 			}
+#ifdef DEBUG
+			else cout << "DaemonState::on_thread_end: nothing else to crawl" << endl;
+#endif
 
 			unlock_lists();
 		}
+#ifdef DEBUG
+		else cout << "DaemonState::on_thread_end: done crawling" << endl;
+#endif
 	}
 	else if (type == "IndexingThread")
 	{
@@ -212,7 +231,7 @@
 	}
 	else
 	{
-		crawlLocation(location.substr(7), true);
+		crawlLocation(location.substr(7), false, true);
 #ifdef DEBUG
 		cout << "DaemonState::on_message_filefound: new directory " << location.substr(7) << endl;
 #endif

Modified: trunk/UI/GTK2/src/DaemonState.h
===================================================================
--- trunk/UI/GTK2/src/DaemonState.h	2006-09-08 11:39:57 UTC (rev 470)
+++ trunk/UI/GTK2/src/DaemonState.h	2006-09-08 11:43:31 UTC (rev 471)
@@ -43,10 +43,11 @@
 	protected:
 		MonitorInterface *m_pMailMonitor;
 		MonitorInterface *m_pDiskMonitor;
+		MonitorHandler *m_pMailHandler;
 		MonitorHandler *m_pDiskHandler;
 		std::string m_locationBeingCrawled;
 
-		bool crawlLocation(const std::string &locationToCrawl, bool monitor);
+		bool crawlLocation(const std::string &locationToCrawl, bool isSource, bool doMonitoring);
 
 };
 

Modified: trunk/UI/GTK2/src/OnDiskHandler.cpp
===================================================================
--- trunk/UI/GTK2/src/OnDiskHandler.cpp	2006-09-08 11:39:57 UTC (rev 470)
+++ trunk/UI/GTK2/src/OnDiskHandler.cpp	2006-09-08 11:43:31 UTC (rev 471)
@@ -16,6 +16,7 @@
 
 #include <fcntl.h>
 #include <unistd.h>
+#include <time.h>
 #include <set>
 #include <iostream>
 #include <fstream>
@@ -27,7 +28,6 @@
 #include "Url.h"
 #include "XapianDatabase.h"
 #include "TokenizerFactory.h"
-#include "CrawlHistory.h"
 #include "FileCollector.h"
 #include "OnDiskHandler.h"
 
@@ -48,7 +48,7 @@
 	pthread_mutex_destroy(&m_mutex);
 }
 
-bool OnDiskHandler::indexFile(const string &fileName, bool alwaysUpdate)
+bool OnDiskHandler::indexFile(const string &fileName, bool alwaysUpdate, unsigned int &sourceId)
 {
 	string location(string("file://") + fileName);
 	Url urlObj(location);
@@ -74,7 +74,7 @@
 	for(map<unsigned int, string>::const_iterator sourceIter = m_fileSources.begin();
 		sourceIter != m_fileSources.end(); ++sourceIter)
 	{
-		unsigned int sourceId = sourceIter->first;
+		sourceId = sourceIter->first;
 
 		if (sourceIter->second.length() < location.length())
 		{
@@ -201,7 +201,7 @@
 			}
 #ifdef DEBUG
 			else cout << "OnDiskHandler::initialize: " << sourceIter->second
-				<< " still configured for monitoring" << endl;
+				<< " is still configured" << endl;
 #endif
 		}
 	}
@@ -222,6 +222,7 @@
 
 bool OnDiskHandler::fileCreated(const string &fileName)
 {
+	unsigned int sourceId;
 	bool handledEvent = false;
 
 #ifdef DEBUG
@@ -229,7 +230,11 @@
 #endif
 	pthread_mutex_lock(&m_mutex);
 	// The file shouldn't exist in the index, but if it does for some reason, don't update it
-	handledEvent = indexFile(fileName, false);
+	handledEvent = indexFile(fileName, false, sourceId);
+	if (handledEvent == true)
+	{
+		m_history.insertItem("file://" + fileName, CrawlHistory::CRAWLED, sourceId, time(NULL));
+	}
 	pthread_mutex_unlock(&m_mutex);
 
 	return handledEvent;
@@ -237,6 +242,7 @@
 
 bool OnDiskHandler::fileModified(const string &fileName)
 {
+	unsigned int sourceId;
 	bool handledEvent = false;
 
 #ifdef DEBUG
@@ -244,7 +250,11 @@
 #endif
 	pthread_mutex_lock(&m_mutex);
 	// Update the file, or index if necessary
-	handledEvent = indexFile(fileName, true);
+	handledEvent = indexFile(fileName, true, sourceId);
+	if (handledEvent == true)
+	{
+		m_history.updateItem("file://" + fileName, CrawlHistory::CRAWLED, time(NULL));
+	}
 	pthread_mutex_unlock(&m_mutex);
 
 	return handledEvent;
@@ -333,6 +343,10 @@
 	{
 		// Unindex the file
 		handledEvent = m_index.unindexDocument(docId);
+		if (handledEvent == true)
+		{
+			m_history.deleteItem(string("file://") + fileName);
+		}
 	}
 	pthread_mutex_unlock(&m_mutex);
 
@@ -353,7 +367,13 @@
 		for (set<unsigned int>::const_iterator iter = docIdList.begin();
 			iter != docIdList.end(); ++iter)
 		{
-			m_index.unindexDocument(*iter);
+			DocumentInfo docInfo;
+
+			if ((m_index.getDocumentInfo(*iter, docInfo) == true) &&
+				(m_index.unindexDocument(*iter) == true))
+			{
+				m_history.deleteItem(docInfo.getLocation());
+			}
 		}
 
 		handledEvent = true;

Modified: trunk/UI/GTK2/src/OnDiskHandler.h
===================================================================
--- trunk/UI/GTK2/src/OnDiskHandler.h	2006-09-08 11:39:57 UTC (rev 470)
+++ trunk/UI/GTK2/src/OnDiskHandler.h	2006-09-08 11:43:31 UTC (rev 471)
@@ -70,7 +70,7 @@
 		CrawlHistory m_history;
 		XapianIndex m_index;
 
-		bool indexFile(const std::string &fileName, bool alwaysUpdate);
+		bool indexFile(const std::string &fileName, bool alwaysUpdate, unsigned int &sourceId);
 
 		bool replaceFile(unsigned int docId, DocumentInfo &docInfo);
 

Modified: trunk/UI/GTK2/src/WorkerThreads.cpp
===================================================================
--- trunk/UI/GTK2/src/WorkerThreads.cpp	2006-09-08 11:39:57 UTC (rev 470)
+++ trunk/UI/GTK2/src/WorkerThreads.cpp	2006-09-08 11:43:31 UTC (rev 471)
@@ -1481,11 +1481,6 @@
 
 MonitorThread::~MonitorThread()
 {
-	// It's our responsability to delete the MonitorHandler object
-	if (m_pHandler != NULL)
-	{
-		delete m_pHandler;
-	}
 	close(m_ctrlReadPipe);
 	close(m_ctrlWritePipe);
 }
@@ -1670,8 +1665,9 @@
 	}
 }
 
-DirectoryScannerThread::DirectoryScannerThread(const string &dirName, unsigned int maxLevel,
-	bool followSymLinks, MonitorInterface *pMonitor, MonitorHandler *pHandler) :
+DirectoryScannerThread::DirectoryScannerThread(const string &dirName, bool isSource,
+	unsigned int maxLevel, bool followSymLinks,
+	MonitorInterface *pMonitor, MonitorHandler *pHandler) :
 	WorkerThread(),
 	m_dirName(dirName),
 	m_maxLevel(maxLevel),
@@ -1681,12 +1677,42 @@
 	m_currentLevel(0),
 	m_sourceId(0)
 {
-#ifdef DEBUG
-	if (m_followSymLinks == true)
+	if (m_dirName.empty() == false)
 	{
-		cout << "DirectoryScannerThread: following symlinks" << endl;
+		CrawlHistory history(PinotSettings::getInstance().m_historyDatabase);
+
+		if (isSource == true)
+		{
+			// Does this source exist ?
+			if (history.hasSource("file://" + m_dirName, m_sourceId) == false)
+			{
+				// Create it
+				m_sourceId = history.insertSource("file://" + m_dirName);
+			}
+		}
+		else
+		{
+			map<unsigned int, string> fileSources;
+
+			// What source does this belong to ?
+			for(map<unsigned int, string>::const_iterator sourceIter = fileSources.begin();
+				sourceIter != fileSources.end(); ++sourceIter)
+			{
+				if (sourceIter->second.length() < m_dirName.length())
+				{
+					// Skip
+					continue;
+				}
+
+				if (sourceIter->second.substr(0, m_dirName.length()) == m_dirName)
+				{
+					// That's the one
+					m_sourceId = sourceIter->first;
+					break;
+				}
+			}
+		}
 	}
-#endif
 }
 
 DirectoryScannerThread::~DirectoryScannerThread()
@@ -1889,12 +1915,9 @@
 	CrawlHistory history(PinotSettings::getInstance().m_historyDatabase);
 	set<string> deletedFiles;
 
-	// Does this source exist ?
-	if ((m_dirName.empty() == false) &&
-		(history.hasSource("file://" + m_dirName, m_sourceId) == false))
+	if (m_dirName.empty() == true)
 	{
-		// Create it
-		m_sourceId = history.insertSource("file://" + m_dirName);
+		return;
 	}
 
 	// Update this source's items status
@@ -1909,7 +1932,8 @@
 
 	// All files with status set to CRAWLING were not found in this crawl
 	// Chances are they were removed after the previous crawl
-	if (history.getSourceItems(m_sourceId, CrawlHistory::CRAWLING, deletedFiles) > 0)
+	if ((m_pHandler != NULL) &&
+		(history.getSourceItems(m_sourceId, CrawlHistory::CRAWLING, deletedFiles) > 0))
 	{
 #ifdef DEBUG
 		cout << "DirectoryScannerThread::doWork: " << deletedFiles.size() << " files were deleted" << endl;
@@ -1917,15 +1941,16 @@
 		for(set<string>::const_iterator fileIter = deletedFiles.begin();
 			fileIter != deletedFiles.end(); ++fileIter)
 		{
-			if (m_pHandler != NULL)
+			// Inform the MonitorHandler
+			if (m_pHandler->fileDeleted(fileIter->substr(7)) == true)
 			{
-				// Inform the MonitorHandler
-				m_pHandler->fileDeleted(fileIter->substr(7));
+				// Delete this item
+				history.deleteItem(*fileIter);
 			}
-
-			// Delete this item
-			history.deleteItem(*fileIter);
 		}
 	}
+#ifdef DEBUG
+	cout << "DirectoryScannerThread::doWork: done crawling " << m_dirName << endl;
+#endif
 }
 

Modified: trunk/UI/GTK2/src/WorkerThreads.h
===================================================================
--- trunk/UI/GTK2/src/WorkerThreads.h	2006-09-08 11:39:57 UTC (rev 470)
+++ trunk/UI/GTK2/src/WorkerThreads.h	2006-09-08 11:43:31 UTC (rev 471)
@@ -425,9 +425,9 @@
 class DirectoryScannerThread : public WorkerThread
 {
 	public:
-		DirectoryScannerThread(const std::string &dirName, unsigned int maxLevel,
-			bool followSymLinks, MonitorInterface *pMonitor,
-			MonitorHandler *pHandler);
+		DirectoryScannerThread(const std::string &dirName, bool isSource,
+			unsigned int maxLevel, bool followSymLinks,
+			MonitorInterface *pMonitor, MonitorHandler *pHandler);
 		virtual ~DirectoryScannerThread();
 
 		virtual std::string getType(void) const;



From fabricecolin at mail.berlios.de  Fri Sep  8 14:33:54 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Fri, 8 Sep 2006 14:33:54 +0200
Subject: [Pinot-svn] r472 - in trunk: . Index Utils
Message-ID: <200609081233.k88CXsvq015643@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-08 14:33:52 +0200 (Fri, 08 Sep 2006)
New Revision: 472

Modified:
   trunk/Index/XapianIndex.cpp
   trunk/Utils/StringManip.cpp
   trunk/Utils/StringManip.h
   trunk/configure.in
Log:
Borrowed code from Xapian so that the timestamp of documents is stored in the
format used by Omega, as modtime in the document data, and as a value that
allows sorting by date.
In configure.in, added necessary checks and backtracked on recent change to
AC_OUTPUT() : Search/Google/Makefile should be generated conditionally.


Modified: trunk/Index/XapianIndex.cpp
===================================================================
--- trunk/Index/XapianIndex.cpp	2006-09-08 11:43:31 UTC (rev 471)
+++ trunk/Index/XapianIndex.cpp	2006-09-08 12:33:52 UTC (rev 472)
@@ -19,6 +19,7 @@
 #include <fcntl.h>
 #include <unistd.h>
 #include <stdio.h>
+#include <stdlib.h>
 #include <stdarg.h>
 #include <strings.h>
 #include <time.h>
@@ -397,11 +398,23 @@
 	}
 
 	string language(StringManip::extractField(record, "language=", ""));
+	string timestamp(StringManip::extractField(record, "timestamp=", "\n"));
+
 	docInfo = DocumentInfo(StringManip::extractField(record, "caption=", "\n"),
 		StringManip::extractField(record, "url=", "\n"),
 		StringManip::extractField(record, "type=", "\n"),
 		Languages::toLocale(language));
-	docInfo.setTimestamp(StringManip::extractField(record, "timestamp=", "\n"));
+	// We used to use timestamp prior to 0.60
+	if (timestamp.empty() == true)
+	{
+		string modTime(StringManip::extractField(record, "modtime=", "\n"));
+		if (modTime.empty() == false)
+		{
+			time_t timeT = (time_t )atol(modTime.c_str());
+			timestamp = TimeConverter::toTimestamp(timeT);
+		}
+	}
+	docInfo.setTimestamp(timestamp);
 	Url urlObj(docInfo.getLocation());
 
 	// FIXME: remove terms extracted from the title if they don't have more than one posting
@@ -505,6 +518,7 @@
 	string title(info.getTitle());
 	string timestamp(info.getTimestamp());
 	char timeStr[64];
+	time_t timeT = TimeConverter::fromTimestamp(timestamp);
 
 	// Set the document data omindex-style
 	string record = "url=";
@@ -528,9 +542,10 @@
 	record += title;
 	record += "\ntype=";
 	record += info.getType();
-	// Append a timestamp
-	record += "\ntimestamp=";
-	record += timestamp;
+	// Append a timestamp, in a format compatible with Omega
+	record += "\nmodtime=";
+	snprintf(timeStr, 64, "%ld", timeT);
+	record += timeStr;
 	// ...and the language
 	record += "\nlanguage=";
 	record += StringManip::toLowerCase(language);
@@ -540,8 +555,7 @@
 	doc.set_data(record);
 
 	// Add this value to allow sorting by date
-	snprintf(timeStr, 64, "%d", TimeConverter::fromTimestamp(timestamp));
-	doc.add_value(0, timeStr);
+	doc.add_value(0, StringManip::integerToBinaryString((uint32_t)timeT));
 }
 
 //
@@ -588,17 +602,25 @@
 			string record = doc.get_data();
 			if (record.empty() == false)
 			{
-				string language = Languages::toLocale(StringManip::extractField(record, "language=", ""));
+				string language(Languages::toLocale(StringManip::extractField(record, "language=", "")));
+				// We used to use timestamp prior to 0.60
+				string timestamp(StringManip::extractField(record, "timestamp=", "\n"));
 
 				docInfo = DocumentInfo(StringManip::extractField(record, "caption=", "\n"),
 					StringManip::extractField(record, "url=", "\n"),
 					StringManip::extractField(record, "type=", "\n"),
 					language);
-				docInfo.setTimestamp(StringManip::extractField(record, "timestamp=", "\n"));
-#ifdef DEBUG
-				cout << "XapianIndex::getDocumentInfo: language is "
-					<< docInfo.getLanguage() << endl;
-#endif
+				if (timestamp.empty() == true)
+				{
+					// This is the format used by Omega
+					string modTime(StringManip::extractField(record, "modtime=", "\n"));
+					if (modTime.empty() == false)
+					{
+						time_t timeT = (time_t )atol(modTime.c_str());
+						timestamp = TimeConverter::toTimestamp(timeT);
+					}
+				}
+				docInfo.setTimestamp(timestamp);
 				foundDocument = true;
 			}
 		}
@@ -1133,10 +1155,6 @@
 			Xapian::Document doc = pIndex->get_document(docId);
 			Xapian::termcount termPos = 0;
 
-#ifdef DEBUG
-			cout << "XapianIndex::updateDocumentInfo: language is " << docInfo.getLanguage() << endl;
-#endif
-
 			// Update the document data with the current language
 			removeCommonTerms(doc);
 			m_stemLanguage = Languages::toEnglish(docInfo.getLanguage());

Modified: trunk/Utils/StringManip.cpp
===================================================================
--- trunk/Utils/StringManip.cpp	2006-09-08 11:43:31 UTC (rev 471)
+++ trunk/Utils/StringManip.cpp	2006-09-08 12:33:52 UTC (rev 472)
@@ -14,9 +14,16 @@
  *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
  */
 
+#include "config.h"
 #define _XOPEN_SOURCE
 #include <unistd.h>
 #undef _XOPEN_SOURCE
+#ifdef HAVE_ARPA_INET_H
+# include <arpa/inet.h>
+#endif
+#ifdef HAVE_NETINET_IN_H
+# include <netinet/in.h>
+#endif
 #include <ctype.h>
 #include <algorithm>
 
@@ -312,3 +319,29 @@
 
 	return result;
 }
+
+/// Converts a binary string to an integer.
+uint32_t StringManip::binaryStringToInteger(const string &str)
+{
+	uint32_t value;
+
+	// This is from from Xapian's xapian-applications/omega/values.h
+	if (str.size() != 4)
+	{
+		return (uint32_t)-1;
+	}
+
+	memcpy(&value, str.data(), 4);
+
+	return ntohl(value);
+}
+
+/// Converts an integer to a binary string.
+string StringManip::integerToBinaryString(uint32_t value)
+{
+	// This is from from Xapian's xapian-applications/omega/values.h
+	value = htonl(value);
+
+	return string(reinterpret_cast<const char*>(&value), 4);
+}
+

Modified: trunk/Utils/StringManip.h
===================================================================
--- trunk/Utils/StringManip.h	2006-09-08 11:43:31 UTC (rev 471)
+++ trunk/Utils/StringManip.h	2006-09-08 12:33:52 UTC (rev 472)
@@ -55,6 +55,12 @@
 		/// Hashes a string so that it is no longer than maxLength.
 		static std::string hashString(const std::string &str, unsigned int maxLength);
 
+		/// Converts a binary string to an integer.
+		static uint32_t binaryStringToInteger(const std::string &str);
+
+		/// Converts an integer to a binary string.
+		static std::string integerToBinaryString(uint32_t value);
+
 	protected:
 		StringManip();
 

Modified: trunk/configure.in
===================================================================
--- trunk/configure.in	2006-09-08 11:43:31 UTC (rev 471)
+++ trunk/configure.in	2006-09-08 12:33:52 UTC (rev 472)
@@ -156,7 +156,7 @@
 dnl Other libraries
 MISC_LIBS="-lcrypt"
 AC_SUBST(MISC_LIBS)
-AC_CHECK_HEADERS(textcat.h)
+AC_CHECK_HEADERS([textcat.h netinet/in.h arpa/inet.h])
 PKG_CHECK_MODULES(MIMEINFO, shared-mime-info )
 PKG_CHECK_MODULES(TAGLIB, taglib >= 1.4 )
 AC_SUBST(TAGLIB_CFLAGS)
@@ -200,6 +200,9 @@
 
 AC_OUTPUT( pinot.spec UI/GTK2/src/de.berlios.Pinot.service Makefile \
 	Utils/Makefile Tokenize/Makefile SQL/Makefile po/Makefile.in \
-	Collect/Makefile Search/Google/Makefile Search/Makefile \
-	Index/Makefile Monitor/Makefile UI/GTK2/src/Makefile )
+	Collect/Makefile )
+if test "$SOAP_SUBDIRS" != "" ; then
+AC_OUTPUT( Search/Google/Makefile )
+fi
+AC_OUTPUT( Search/Makefile Index/Makefile Monitor/Makefile UI/GTK2/src/Makefile )
 



From fabricecolin at mail.berlios.de  Fri Sep  8 14:35:34 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Fri, 8 Sep 2006 14:35:34 +0200
Subject: [Pinot-svn] r473 - trunk
Message-ID: <200609081235.k88CZYrn016048@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-08 14:35:34 +0200 (Fri, 08 Sep 2006)
New Revision: 473

Modified:
   trunk/AUTHORS
   trunk/README
Log:
Mention code was borrowed from Xapian, and that D-Bus and its Glib bindings
are required.


Modified: trunk/AUTHORS
===================================================================
--- trunk/AUTHORS	2006-09-08 12:33:52 UTC (rev 472)
+++ trunk/AUTHORS	2006-09-08 12:35:34 UTC (rev 473)
@@ -9,6 +9,9 @@
 The file Monitor/linux-inotify-syscalls.h is originally from libinotify
 (Copyright ? 2005 Ryan Lortie <desrt at desrt dot ca>).
 
+Some code is borrowed from Xapian Omega, which is "largely the work of
+Olly Betts, Mark Shinwell (omindex-config) and Richard Boulton".
+
 Translations provided by :
 
 	Spanish - Jes?s Tramullas <jesus at tramullas dot com>

Modified: trunk/README
===================================================================
--- trunk/README	2006-09-08 12:33:52 UTC (rev 472)
+++ trunk/README	2006-09-08 12:35:34 UTC (rev 473)
@@ -44,6 +44,9 @@
 boost (3)						1.32.0
 http://www.boost.org/
 
+D-Bus with GLib bindings				0.61
+http://www.freedesktop.org/wiki/Software/dbus
+
 shared-mime-info					0.17
 http://freedesktop.org/Software/shared-mime-info
 



From fabricecolin at mail.berlios.de  Sat Sep  9 04:25:29 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Sat, 9 Sep 2006 04:25:29 +0200
Subject: [Pinot-svn] r474 - in trunk: Collect Search UI/GTK2/src
Message-ID: <200609090225.k892PTuH013918@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-09 04:25:28 +0200 (Sat, 09 Sep 2006)
New Revision: 474

Modified:
   trunk/Collect/pinot-collect.1
   trunk/Search/pinot-search.1
   trunk/UI/GTK2/src/pinot-dbus-daemon.1
   trunk/UI/GTK2/src/pinot.1
Log:
Updated man pages date.


Modified: trunk/Collect/pinot-collect.1
===================================================================
--- trunk/Collect/pinot-collect.1	2006-09-08 12:35:34 UTC (rev 473)
+++ trunk/Collect/pinot-collect.1	2006-09-09 02:25:28 UTC (rev 474)
@@ -1,5 +1,5 @@
 .\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.36.
-.TH PINOT-COLLECT "1" "August 2006" "pinot-collect - pinot 0.60" "User Commands"
+.TH PINOT-COLLECT "1" "September 2006" "pinot-collect - pinot 0.60" "User Commands"
 .SH NAME
 pinot-collect \- Download an URL from the command-line
 .SH SYNOPSIS

Modified: trunk/Search/pinot-search.1
===================================================================
--- trunk/Search/pinot-search.1	2006-09-08 12:35:34 UTC (rev 473)
+++ trunk/Search/pinot-search.1	2006-09-09 02:25:28 UTC (rev 474)
@@ -1,5 +1,5 @@
 .\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.36.
-.TH PINOT-SEARCH "1" "August 2006" "pinot-search - pinot 0.60" "User Commands"
+.TH PINOT-SEARCH "1" "September 2006" "pinot-search - pinot 0.60" "User Commands"
 .SH NAME
 pinot-search \- Query search engines from the command-line
 .SH SYNOPSIS

Modified: trunk/UI/GTK2/src/pinot-dbus-daemon.1
===================================================================
--- trunk/UI/GTK2/src/pinot-dbus-daemon.1	2006-09-08 12:35:34 UTC (rev 473)
+++ trunk/UI/GTK2/src/pinot-dbus-daemon.1	2006-09-09 02:25:28 UTC (rev 474)
@@ -1,5 +1,5 @@
 .\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.36.
-.TH PINOT-DBUS-DAEMON "1" "August 2006" "pinot-dbus-daemon - pinot 0.60" "User Commands"
+.TH PINOT-DBUS-DAEMON "1" "September 2006" "pinot-dbus-daemon - pinot 0.60" "User Commands"
 .SH NAME
 pinot-dbus-daemon \- D-Bus search and index daemon
 .SH SYNOPSIS

Modified: trunk/UI/GTK2/src/pinot.1
===================================================================
--- trunk/UI/GTK2/src/pinot.1	2006-09-08 12:35:34 UTC (rev 473)
+++ trunk/UI/GTK2/src/pinot.1	2006-09-09 02:25:28 UTC (rev 474)
@@ -1,5 +1,5 @@
 .\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.36.
-.TH PINOT "1" "August 2006" "pinot - pinot 0.60" "User Commands"
+.TH PINOT "1" "September 2006" "pinot - pinot 0.60" "User Commands"
 .SH NAME
 pinot \- A metasearch tool for the Free Desktop
 .SH SYNOPSIS



From fabricecolin at mail.berlios.de  Sat Sep  9 08:15:06 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Sat, 9 Sep 2006 08:15:06 +0200
Subject: [Pinot-svn] r475 - trunk/Utils
Message-ID: <200609090615.k896F6i3001258@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-09 08:15:05 +0200 (Sat, 09 Sep 2006)
New Revision: 475

Modified:
   trunk/Utils/StringManip.cpp
   trunk/Utils/TimeConverter.cpp
Log:
Portability fixes. On platforms that don't have timegm(), use wget's
mktime_from_utc() function.


Modified: trunk/Utils/StringManip.cpp
===================================================================
--- trunk/Utils/StringManip.cpp	2006-09-09 02:25:28 UTC (rev 474)
+++ trunk/Utils/StringManip.cpp	2006-09-09 06:15:05 UTC (rev 475)
@@ -15,9 +15,13 @@
  */
 
 #include "config.h"
+#ifndef _XOPEN_SOURCE
 #define _XOPEN_SOURCE
 #include <unistd.h>
 #undef _XOPEN_SOURCE
+#else
+#include <unistd.h>
+#endif
 #ifdef HAVE_ARPA_INET_H
 # include <arpa/inet.h>
 #endif

Modified: trunk/Utils/TimeConverter.cpp
===================================================================
--- trunk/Utils/TimeConverter.cpp	2006-09-09 02:25:28 UTC (rev 474)
+++ trunk/Utils/TimeConverter.cpp	2006-09-09 06:15:05 UTC (rev 475)
@@ -14,8 +14,85 @@
  *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
  */
 
-#define _XOPEN_SOURCE	// glibc2 needs this
+#include "config.h"
+#ifdef HAVE_TIMEGM
+#ifndef _XOPEN_SOURCE
+#define _XOPEN_SOURCE
 #include <time.h>
+#undef _XOPEN_SOURCE
+#else
+#include <time.h>
+#endif
+#else
+#include <time.h>
+/* This comment and function are taken from Wget's mktime_from_utc()
+   Converts struct tm to time_t, assuming the data in tm is UTC rather
+   than local timezone.
+
+   mktime is similar but assumes struct tm, also known as the
+   "broken-down" form of time, is in local time zone.  mktime_from_utc
+   uses mktime to make the conversion understanding that an offset
+   will be introduced by the local time assumption.
+
+   mktime_from_utc then measures the introduced offset by applying
+   gmtime to the initial result and applying mktime to the resulting
+   "broken-down" form.  The difference between the two mktime results
+   is the measured offset which is then subtracted from the initial
+   mktime result to yield a calendar time which is the value returned.
+
+   tm_isdst in struct tm is set to 0 to force mktime to introduce a
+   consistent offset (the non DST offset) since tm and tm+o might be
+   on opposite sides of a DST change.
+
+   Some implementations of mktime return -1 for the nonexistent
+   localtime hour at the beginning of DST.  In this event, use
+   mktime(tm - 1hr) + 3600.
+
+   Schematically
+     mktime(tm)   --> t+o
+     gmtime(t+o)  --> tm+o
+     mktime(tm+o) --> t+2o
+     t+o - (t+2o - t+o) = t
+
+   Note that glibc contains a function of the same purpose named
+   `timegm' (reverse of gmtime).  But obviously, it is not universally
+   available, and unfortunately it is not straightforwardly
+   extractable for use here.  Perhaps configure should detect timegm
+   and use it where available.
+
+   Contributed by Roger Beeman <beeman at cisco.com>, with the help of
+   Mark Baushke <mdb at cisco.com> and the rest of the Gurus at CISCO.
+   Further improved by Roger with assistance from Edward J. Sabol
+   based on input by Jamie Zawinski.  */
+static time_t mktime_from_utc (struct tm *t)
+{
+  time_t tl, tb;
+  struct tm *tg;
+
+  tl = mktime (t);
+  if (tl == -1)
+    {
+      t->tm_hour--;
+      tl = mktime (t);
+      if (tl == -1)
+	return -1; /* can't deal with output from strptime */
+      tl += 3600;
+    }
+  tg = gmtime (&tl);
+  tg->tm_isdst = 0;
+  tb = mktime (tg);
+  if (tb == -1)
+    {
+      tg->tm_hour--;
+      tb = mktime (tg);
+      if (tb == -1)
+	return -1; /* can't deal with output from gmtime */
+      tb += 3600;
+    }
+  return (tl - (tb - tl));
+}
+#define timegm(T) mktime_from_utc(T)
+#endif
 #include <iostream>
 
 #include "TimeConverter.h"



From fabricecolin at mail.berlios.de  Tue Sep 12 15:13:50 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Tue, 12 Sep 2006 15:13:50 +0200
Subject: [Pinot-svn] r476 - in trunk: Index UI/GTK2/src
Message-ID: <200609121313.k8CDDoAb015123@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-12 15:13:47 +0200 (Tue, 12 Sep 2006)
New Revision: 476

Modified:
   trunk/Index/DBusXapianIndex.cpp
   trunk/Index/DBusXapianIndex.h
   trunk/UI/GTK2/src/prefsDialog.cc
Log:
DBusXapianIndex exports the GetStatistics method. It's invoked when validating
new preferences if there are locations to index. D-Bus activation will then
start the service if not already running.


Modified: trunk/Index/DBusXapianIndex.cpp
===================================================================
--- trunk/Index/DBusXapianIndex.cpp	2006-09-09 06:15:05 UTC (rev 475)
+++ trunk/Index/DBusXapianIndex.cpp	2006-09-12 13:13:47 UTC (rev 476)
@@ -96,6 +96,49 @@
 	}
 }
 
+/// Asks the D-Bus service for statistics.
+bool DBusXapianIndex::getStatistics(unsigned int &crawledCount, unsigned int &docsCount)
+{
+	bool gotStats = false;
+
+	DBusGConnection *pBus = getBusConnection();
+	if (pBus == NULL)
+	{
+		return false;
+	}
+
+	DBusGProxy *pBusProxy = getBusProxy(pBus);
+	if (pBusProxy == NULL)
+	{
+		cerr << "DBusXapianIndex::getStatistics: couldn't get bus proxy" << endl;
+		return false;
+	}
+
+	GError *pError = NULL;
+	if (dbus_g_proxy_call(pBusProxy, "GetStatistics", &pError,
+		G_TYPE_INVALID,
+		G_TYPE_UINT, &crawledCount,
+		G_TYPE_UINT, &docsCount,
+		G_TYPE_INVALID) == TRUE)
+	{
+		gotStats = true;
+	}
+	else
+	{
+		if (pError != NULL)
+		{
+			cerr << "DBusXapianIndex::getStatistics: " << pError->message << endl;
+			g_error_free(pError);
+		}
+	}
+
+	g_object_unref(pBusProxy);
+	// FIXME: don't we have to call dbus_g_connection_unref(pBus); ?
+
+	return gotStats;
+}
+
+
 //
 // Implementation of IndexInterface
 //

Modified: trunk/Index/DBusXapianIndex.h
===================================================================
--- trunk/Index/DBusXapianIndex.h	2006-09-09 06:15:05 UTC (rev 475)
+++ trunk/Index/DBusXapianIndex.h	2006-09-12 13:13:47 UTC (rev 476)
@@ -31,6 +31,9 @@
 
 		DBusXapianIndex &operator=(const DBusXapianIndex &other);
 
+		/// Asks the D-Bus service for statistics.
+		static bool getStatistics(unsigned int &crawledCount, unsigned int &docsCount);
+
 		/// Returns false if the index couldn't be opened.
 		virtual bool isGood(void) const;
 

Modified: trunk/UI/GTK2/src/prefsDialog.cc
===================================================================
--- trunk/UI/GTK2/src/prefsDialog.cc	2006-09-09 06:15:05 UTC (rev 475)
+++ trunk/UI/GTK2/src/prefsDialog.cc	2006-09-12 13:13:47 UTC (rev 476)
@@ -23,6 +23,7 @@
 #include <gtkmm/messagedialog.h>
 
 #include "MIMEScanner.h"
+#include "DBusXapianIndex.h"
 #include "SearchEngineFactory.h"
 #include "QueryHistory.h"
 #include "config.h"
@@ -208,6 +209,8 @@
 
 bool prefsDialog::save_directoriesTreeview()
 {
+	bool startService = false;
+
 	// Clear the current settings
 	m_settings.m_indexableLocations.clear();
 
@@ -239,9 +242,22 @@
 			cout << "prefsDialog::save_directoriesTreeview: " << indexableLocation.m_name << endl;
 #endif
 			m_settings.m_indexableLocations.insert(indexableLocation);
+			startService = true;
 		}
 	}
 
+	if (startService == true)
+	{
+		unsigned int crawledCount = 0, docsCount = 0;
+
+		// Let D-Bus activate the service if necessary
+		DBusXapianIndex::getStatistics(crawledCount, docsCount);
+#ifdef DEBUG
+		cout << "prefsDialog::save_directoriesTreeview: crawled " << crawledCount
+			<< ", indexed " << docsCount << endl;
+#endif
+	}
+
 	return true;
 }
 



From fabricecolin at mail.berlios.de  Wed Sep 13 14:47:11 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Wed, 13 Sep 2006 14:47:11 +0200
Subject: [Pinot-svn] r477 - trunk/Utils
Message-ID: <200609131247.k8DClBXf011302@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-13 14:47:10 +0200 (Wed, 13 Sep 2006)
New Revision: 477

Modified:
   trunk/Utils/Timer.cpp
Log:
Doh ! What kind of broken timer is that !?


Modified: trunk/Utils/Timer.cpp
===================================================================
--- trunk/Utils/Timer.cpp	2006-09-12 13:13:47 UTC (rev 476)
+++ trunk/Utils/Timer.cpp	2006-09-13 12:47:10 UTC (rev 477)
@@ -52,8 +52,8 @@
 {
 	gettimeofday(&m_stop, NULL);
 
-	long timeDiff = (m_stop.tv_sec - m_start.tv_sec) * 1000000
-		+ (m_stop.tv_usec - m_start.tv_usec);
+	long timeDiff = ((m_stop.tv_sec * 1000000) + m_stop.tv_usec)
+		- ((m_start.tv_sec * 1000000) + m_start.tv_usec);
 
 	return timeDiff;
 }



From fabricecolin at mail.berlios.de  Wed Sep 13 14:48:01 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Wed, 13 Sep 2006 14:48:01 +0200
Subject: [Pinot-svn] r478 - in trunk: UI/GTK2/src Utils
Message-ID: <200609131248.k8DCm1HL011391@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-13 14:48:00 +0200 (Wed, 13 Sep 2006)
New Revision: 478

Modified:
   trunk/UI/GTK2/src/MboxHandler.cpp
   trunk/UI/GTK2/src/OnDiskHandler.cpp
   trunk/Utils/XapianDatabase.cpp
Log:
Minor changea and less verbose debug output.


Modified: trunk/UI/GTK2/src/MboxHandler.cpp
===================================================================
--- trunk/UI/GTK2/src/MboxHandler.cpp	2006-09-13 12:47:10 UTC (rev 477)
+++ trunk/UI/GTK2/src/MboxHandler.cpp	2006-09-13 12:48:00 UTC (rev 478)
@@ -212,9 +212,8 @@
 		++docNum;
 	}
 #ifdef DEBUG
-	long microsecs = timer.stop();
 	cout << "MboxHandler::parseMailAccount: parsed " << docNum << " documents in "
-		<< microsecs/1000000 << " seconds (" << microsecs << ")" << endl;
+		<< timer.stop()/1000 << " ms" << endl;
 #endif
 
 	// Any document still in the list wasn't found this time around

Modified: trunk/UI/GTK2/src/OnDiskHandler.cpp
===================================================================
--- trunk/UI/GTK2/src/OnDiskHandler.cpp	2006-09-13 12:47:10 UTC (rev 477)
+++ trunk/UI/GTK2/src/OnDiskHandler.cpp	2006-09-13 12:48:00 UTC (rev 478)
@@ -193,11 +193,12 @@
 					<< ", source " << sourceId << " was removed" << endl;
 #endif
 				// All documents with this label will be unindexed
-				m_index.unindexDocuments(sourceStr);
-
-				// Delete the source itself and all its items
-				m_history.deleteSource(sourceId);
-				m_history.deleteItems(sourceId);
+				if (m_index.unindexDocuments(sourceStr) == true)
+				{
+					// Delete the source itself and all its items
+					m_history.deleteSource(sourceId);
+					m_history.deleteItems(sourceId);
+				}
 			}
 #ifdef DEBUG
 			else cout << "OnDiskHandler::initialize: " << sourceIter->second

Modified: trunk/Utils/XapianDatabase.cpp
===================================================================
--- trunk/Utils/XapianDatabase.cpp	2006-09-13 12:47:10 UTC (rev 477)
+++ trunk/Utils/XapianDatabase.cpp	2006-09-13 12:48:00 UTC (rev 478)
@@ -241,9 +241,6 @@
 {
 	if (m_merge == false)
 	{
-#ifdef DEBUG
-		cout << "XapianDatabase::readLock: " << m_databaseName << endl;
-#endif
 		if (pthread_rwlock_rdlock(&m_rwLock) == 0)
 		{
 			if (m_pDatabase == NULL)
@@ -299,9 +296,6 @@
 		return NULL;
 	}
 
-#ifdef DEBUG
-	cout << "XapianDatabase::writeLock: " << m_databaseName << endl;
-#endif
 	if (pthread_rwlock_wrlock(&m_rwLock) == 0)
 	{
 		if (m_pDatabase == NULL)
@@ -318,9 +312,6 @@
 /// Unlocks the database.
 void XapianDatabase::unlock(void)
 {
-#ifdef DEBUG
-	cout << "XapianDatabase::unlock: " << m_databaseName << endl;
-#endif
 	pthread_rwlock_unlock(&m_rwLock);
 
 	if (m_merge == true)



From fabricecolin at mail.berlios.de  Wed Sep 13 14:51:32 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Wed, 13 Sep 2006 14:51:32 +0200
Subject: [Pinot-svn] r479 - trunk/Index
Message-ID: <200609131251.k8DCpWGK011957@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-13 14:51:31 +0200 (Wed, 13 Sep 2006)
New Revision: 479

Modified:
   trunk/Index/pinot-index.1
   trunk/Index/pinot-index.cpp
Log:
Added --showinfo option. This outputs the document's DocumentInfo, with labels.


Modified: trunk/Index/pinot-index.1
===================================================================
--- trunk/Index/pinot-index.1	2006-09-13 12:48:00 UTC (rev 478)
+++ trunk/Index/pinot-index.1	2006-09-13 12:51:31 UTC (rev 479)
@@ -18,10 +18,13 @@
 \fB\-i\fR, \fB\-\-index\fR
 index the given URL
 .TP
+\fB\-s\fR, \fB\-\-showinfo\fR
+show information about the document
+.TP
 \fB\-v\fR, \fB\-\-version\fR
 output version information and exit
 .SH EXAMPLES
-pinot\-index \fB\-\-check\fR file:///home/fabrice/Documents/Bozo.txt xapian ~/.pinot/daemon
+pinot\-index \fB\-\-check\fR file:///home/fabrice/Documents/Bozo.txt \fB\-\-showinfo\fR xapian ~/.pinot/daemon
 .PP
 pinot\-index \fB\-\-index\fR http://pinot.berlios.de/ xapian ~/.pinot/index
 .SH "REPORTING BUGS"

Modified: trunk/Index/pinot-index.cpp
===================================================================
--- trunk/Index/pinot-index.cpp	2006-09-13 12:48:00 UTC (rev 478)
+++ trunk/Index/pinot-index.cpp	2006-09-13 12:51:31 UTC (rev 479)
@@ -36,6 +36,7 @@
 	{"check", 1, 0, 'c'},
 	{"help", 0, 0, 'h'},
 	{"index", 1, 0, 'i'},
+	{"showinfo", 0, 0, 's'},
 	{"version", 0, 0, 'v'},
 	{0, 0, 0, 0}
 };
@@ -43,12 +44,13 @@
 int main(int argc, char **argv)
 {
 	string type, option;
+	string urlToCheck, urlToIndex;
 	int longOptionIndex = 0;
-	string urlToCheck, urlToIndex;
-	bool checkDocument = false, indexDocument = false, success = false;
+	unsigned int docId = 0;
+	bool checkDocument = false, indexDocument = false, showInfo = false, success = false;
 
 	// Look at the options
-	int optionChar = getopt_long(argc, argv, "c:hi:v", g_longOptions, &longOptionIndex);
+	int optionChar = getopt_long(argc, argv, "c:hi:sv", g_longOptions, &longOptionIndex);
 	while (optionChar != -1)
 	{
 		set<string> engines;
@@ -70,11 +72,12 @@
 					<< "  -c, --check		check whether the given URL is in the index\n"
 					<< "  -h, --help		display this help and exit\n"
 					<< "  -i, --index		index the given URL\n"
+					<< "  -s, --showinfo		show information about the document\n"
 					<< "  -v, --version		output version information and exit\n\n";
 				// Don't mention type dbus here as it doesn't support indexing and
 				// is identical to xapian when checking for URLs
 				cout << "Examples:\n"
-					<< "pinot-index --check file:///home/fabrice/Documents/Bozo.txt xapian ~/.pinot/daemon\n\n"
+					<< "pinot-index --check file:///home/fabrice/Documents/Bozo.txt --showinfo xapian ~/.pinot/daemon\n\n"
 					<< "pinot-index --index http://pinot.berlios.de/ xapian ~/.pinot/index\n\n"
 					<< "Report bugs to " << PACKAGE_BUGREPORT << endl;
 				return EXIT_SUCCESS;
@@ -85,6 +88,9 @@
 				}
 				indexDocument = true;
 				break;
+			case 's':
+				showInfo = true;
+				break;
 			case 'v':
 				cout << "pinot-index - " << PACKAGE_STRING << "\n\n"
 					<< "This is free software.  You may redistribute copies of it under the terms of\n"
@@ -96,7 +102,7 @@
 		}
 
 		// Next option
-		optionChar = getopt_long(argc, argv, "c:hi:v", g_longOptions, &longOptionIndex);
+		optionChar = getopt_long(argc, argv, "c:hi:sv", g_longOptions, &longOptionIndex);
 	}
 
 	if ((argc < 3) ||
@@ -143,7 +149,7 @@
 	{
 		if (pIndex->isGood() == true)
 		{
-			unsigned int docId = pIndex->hasDocument(urlToCheck);
+			docId = pIndex->hasDocument(urlToCheck);
 			if (docId > 0)
 			{
 				cout << urlToCheck << ": document ID " << docId << endl;
@@ -186,7 +192,7 @@
 				pIndex->setStemmingMode(IndexInterface::STORE_BOTH);
 
 				// Update an existing document or add to the index ?
-				unsigned int docId = pIndex->hasDocument(urlToIndex);
+				docId = pIndex->hasDocument(urlToIndex);
 				if (docId > 0)
 				{
 					// Update the document
@@ -215,6 +221,31 @@
 
 		delete pDownloader;
 	}
+	if ((showInfo == true) &&
+		(docId > 0))
+	{
+		DocumentInfo docInfo;
+		set<string> labels;
+
+		if (pIndex->getDocumentInfo(docId, docInfo) == true)
+		{
+			cout << "Title: " << docInfo.getTitle() << endl;
+			cout << "Location: " << docInfo.getLocation() << endl;
+			cout << "Type: " << docInfo.getType() << endl;
+			cout << "Language: " << docInfo.getLanguage() << endl;
+			cout << "Timestamp: " << docInfo.getTimestamp() << endl;
+		}
+		if (pIndex->getDocumentLabels(docId, labels) == true)
+		{
+			cout << "Labels:";
+			for (set<string>::const_iterator labelIter = labels.begin();
+				labelIter != labels.end(); ++labelIter)
+			{
+				cout << " '" << *labelIter << "'";
+			}
+			cout << endl;
+		}
+	}
 	delete pIndex;
 
 	XapianDatabaseFactory::closeAll();



From fabricecolin at mail.berlios.de  Wed Sep 13 14:53:49 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Wed, 13 Sep 2006 14:53:49 +0200
Subject: [Pinot-svn] r480 - trunk/UI/GTK2/src
Message-ID: <200609131253.k8DCrn2C013287@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-13 14:53:48 +0200 (Wed, 13 Sep 2006)
New Revision: 480

Modified:
   trunk/UI/GTK2/src/prefsDialog.cc
   trunk/UI/GTK2/src/prefsDialog.hh
Log:
Start the service if there are directories OR mbox files to index !


Modified: trunk/UI/GTK2/src/prefsDialog.cc
===================================================================
--- trunk/UI/GTK2/src/prefsDialog.cc	2006-09-13 12:51:31 UTC (rev 479)
+++ trunk/UI/GTK2/src/prefsDialog.cc	2006-09-13 12:53:48 UTC (rev 480)
@@ -137,7 +137,7 @@
 	removeLabelButton->set_sensitive(true);
 }
 
-bool prefsDialog::save_labelsTreeview()
+void prefsDialog::save_labelsTreeview()
 {
 	// Clear the current settings
 	m_settings.clearLabels();
@@ -174,8 +174,6 @@
 			m_settings.addLabel(labelName);
 		}
 	}
-
-	return true;
 }
 
 void prefsDialog::populate_directoriesTreeview()
@@ -246,19 +244,7 @@
 		}
 	}
 
-	if (startService == true)
-	{
-		unsigned int crawledCount = 0, docsCount = 0;
-
-		// Let D-Bus activate the service if necessary
-		DBusXapianIndex::getStatistics(crawledCount, docsCount);
-#ifdef DEBUG
-		cout << "prefsDialog::save_directoriesTreeview: crawled " << crawledCount
-			<< ", indexed " << docsCount << endl;
-#endif
-	}
-
-	return true;
+	return startService;
 }
 
 void prefsDialog::populate_mailTreeview()
@@ -293,6 +279,8 @@
 
 bool prefsDialog::save_mailTreeview()
 {
+	bool startService = false;
+
 	// Clear the current settings
 	m_settings.m_mailAccounts.clear();
 
@@ -326,10 +314,11 @@
 			cout << "prefsDialog::save_mailTreeview: " << mailAccount.m_name << endl;
 #endif
 			m_settings.m_mailAccounts.insert(mailAccount);
+			startService = true;
 		}
 	}
 
-	return true;
+	return startService;
 }
 
 void prefsDialog::on_prefsOkbutton_clicked()
@@ -345,8 +334,21 @@
 
 	// Validate the current lists
 	save_labelsTreeview();
-	save_directoriesTreeview();
-	save_mailTreeview();
+	if ((save_directoriesTreeview() == true) ||
+		(save_mailTreeview() == true))
+	{
+		unsigned int crawledCount = 0, docsCount = 0;
+
+		// Save the settings
+		m_settings.save();
+		// ... and let D-Bus activate the service if necessary
+		// If it was already running, changes will take effect when it's restarted
+		DBusXapianIndex::getStatistics(crawledCount, docsCount);
+#ifdef DEBUG
+		cout << "prefsDialog::on_prefsOkbutton_clicked: crawled " << crawledCount
+			<< ", indexed " << docsCount << endl;
+#endif
+	}
 }
 
 void prefsDialog::on_addLabelButton_clicked()

Modified: trunk/UI/GTK2/src/prefsDialog.hh
===================================================================
--- trunk/UI/GTK2/src/prefsDialog.hh	2006-09-13 12:51:31 UTC (rev 479)
+++ trunk/UI/GTK2/src/prefsDialog.hh	2006-09-13 12:53:48 UTC (rev 480)
@@ -51,7 +51,7 @@
 	virtual void on_removeAccountButton_clicked();
 
 	void populate_labelsTreeview();
-	bool save_labelsTreeview();
+	void save_labelsTreeview();
 	void populate_directoriesTreeview();
 	bool save_directoriesTreeview();
 	void populate_mailTreeview();



From fabricecolin at mail.berlios.de  Wed Sep 13 14:55:39 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Wed, 13 Sep 2006 14:55:39 +0200
Subject: [Pinot-svn] r481 - in trunk: Collect Index Search Tokenize
	UI/GTK2/src Utils
Message-ID: <200609131255.k8DCtddx013906@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-13 14:55:38 +0200 (Wed, 13 Sep 2006)
New Revision: 481

Modified:
   trunk/Collect/Makefile.am
   trunk/Index/Makefile.am
   trunk/Search/Makefile.am
   trunk/Tokenize/Makefile.am
   trunk/UI/GTK2/src/Makefile.am
   trunk/Utils/Makefile.am
Log:
Bundle Utils classes needed by the tokenizers in libBasicUtils, WITHOUT any
static data that would mess things up in the UI after it loads the tokenizers.


Modified: trunk/Collect/Makefile.am
===================================================================
--- trunk/Collect/Makefile.am	2006-09-13 12:53:48 UTC (rev 480)
+++ trunk/Collect/Makefile.am	2006-09-13 12:55:38 UTC (rev 481)
@@ -25,7 +25,7 @@
 	pinot-collect.cpp
 
 pinot_collect_LDADD = -L../Utils -L../Tokenize \
-	-lCollect -lTokenize -lUtils \
+	-lCollect -lTokenize -lUtils -lBasicUtils \
 	@GLIBMM_LIBS@ @INDEX_LIBS@ @XML_LIBS@ @MIME_LIBS@ @HTTP_LIBS@ @MISC_LIBS@
 
 AM_CXXFLAGS = -I$(srcdir)/../Utils -I$(srcdir)/../Tokenize \

Modified: trunk/Index/Makefile.am
===================================================================
--- trunk/Index/Makefile.am	2006-09-13 12:53:48 UTC (rev 480)
+++ trunk/Index/Makefile.am	2006-09-13 12:55:38 UTC (rev 481)
@@ -21,7 +21,7 @@
 	pinot-index.cpp
 
 pinot_index_LDADD = -L../Utils -L../Tokenize -L../Collect \
-	-lIndex -lCollect -lTokenize -lUtils \
+	-lIndex -lCollect -lTokenize -lBasicUtils -lUtils \
 	@GLIBMM_LIBS@ @INDEX_LIBS@ @DBUS_LIBS@ @XML_LIBS@ @MIME_LIBS@ @HTTP_LIBS@ @MISC_LIBS@
 
 AM_CXXFLAGS = -I$(srcdir)/../Utils -I$(srcdir)/../Tokenize -I$(srcdir)/../Collect \

Modified: trunk/Search/Makefile.am
===================================================================
--- trunk/Search/Makefile.am	2006-09-13 12:53:48 UTC (rev 480)
+++ trunk/Search/Makefile.am	2006-09-13 12:55:38 UTC (rev 481)
@@ -44,7 +44,7 @@
 	pinot-search.cpp
 
 pinot_search_LDADD = -L../Utils -L../Tokenize -L../Collect -LGoogle \
-	@SEARCH_LIBS@ -lCollect -lTokenize -lUtils \
+	@SEARCH_LIBS@ -lCollect -lTokenize -lUtils -lBasicUtils \
 	@GLIBMM_LIBS@ @INDEX_LIBS@ @SOAP_LIBS@ @XML_LIBS@ @MIME_LIBS@ @HTTP_LIBS@ @MISC_LIBS@
 
 SOAPEnvC.cpp : SOAPEnv.h

Modified: trunk/Tokenize/Makefile.am
===================================================================
--- trunk/Tokenize/Makefile.am	2006-09-13 12:53:48 UTC (rev 480)
+++ trunk/Tokenize/Makefile.am	2006-09-13 12:55:38 UTC (rev 481)
@@ -1,12 +1,5 @@
 # Process this file with automake to produce Makefile.in
 
-UTILS_OBJS = ../Utils/CommandLine.o \
-	../Utils/Document.o \
-	../Utils/StringManip.o \
-	../Utils/DocumentInfo.o \
-	../Utils/TimeConverter.o \
-	../Utils/Url.o
-
 noinst_HEADERS = \
 	HtmlTokenizer.h \
 	OpenDocumentTokenizer.h \
@@ -31,7 +24,7 @@
 
 libopendocumenttokenizer_la_LDFLAGS = -module
 
-libopendocumenttokenizer_la_LIBADD = ${UTILS_OBJS}
+libopendocumenttokenizer_la_LIBADD = -L../Utils -lBasicUtils
 
 libpdftokenizer_la_SOURCES = \
 	PdfTokenizer.cpp \
@@ -40,7 +33,7 @@
 
 libpdftokenizer_la_LDFLAGS = -module
 
-libpdftokenizer_la_LIBADD = ${UTILS_OBJS} 
+libpdftokenizer_la_LIBADD = -L../Utils -lBasicUtils
 
 librtftokenizer_la_SOURCES = \
 	RtfTokenizer.cpp \
@@ -49,7 +42,7 @@
 
 librtftokenizer_la_LDFLAGS = -module
 
-librtftokenizer_la_LIBADD = ${UTILS_OBJS}
+librtftokenizer_la_LIBADD = -L../Utils -lBasicUtils
 
 libwordtokenizer_la_SOURCES = \
 	WordTokenizer.cpp \
@@ -57,7 +50,7 @@
 
 libwordtokenizer_la_LDFLAGS = -module
 
-libwordtokenizer_la_LIBADD = ${UTILS_OBJS}
+libwordtokenizer_la_LIBADD = -L../Utils -lBasicUtils
 
 libtaglibtokenizer_la_SOURCES = \
 	TagLibTokenizer.cpp \
@@ -65,7 +58,7 @@
 
 libtaglibtokenizer_la_LDFLAGS = -module @TAGLIB_LIBS@
 
-libtaglibtokenizer_la_LIBADD = ${UTILS_OBJS}
+libtaglibtokenizer_la_LIBADD = -L../Utils -lBasicUtils
 
 libTokenize_la_SOURCES = \
 	HtmlTokenizer.cpp \

Modified: trunk/UI/GTK2/src/Makefile.am
===================================================================
--- trunk/UI/GTK2/src/Makefile.am	2006-09-13 12:53:48 UTC (rev 480)
+++ trunk/UI/GTK2/src/Makefile.am	2006-09-13 12:55:38 UTC (rev 481)
@@ -68,11 +68,11 @@
 
 pinot_LDADD = -L$(top_srcdir)/Utils -L$(top_srcdir)/Tokenize -L$(top_srcdir)/SQL -L$(top_srcdir)/Monitor \
 	-L$(top_srcdir)/Collect -L$(top_srcdir)/Search -L$(top_srcdir)/Search/Google \
-	-L$(top_srcdir)/Index -lIndex @SEARCH_LIBS@ -lMonitor -lCollect -lSQL -lTokenize -lUtils \
+	-L$(top_srcdir)/Index -lIndex @SEARCH_LIBS@ -lMonitor -lCollect -lSQL -lTokenize -lUtils -lBasicUtils \
 	@LIBS@ @UI_LIBS@ @INDEX_LIBS@ @DBUS_LIBS@ @SOAP_LIBS@ @XML_LIBS@ @MIME_LIBS@ @HTTP_LIBS@ @SQL_LIBS@ @MISC_LIBS@
 
 pinot_dbus_daemon_LDADD = -L$(top_srcdir)/Utils -L$(top_srcdir)/Tokenize -L$(top_srcdir)/SQL -L$(top_srcdir)/Monitor \
 	-L$(top_srcdir)/Collect -L$(top_srcdir)/Search -L$(top_srcdir)/Search/Google \
-	-L$(top_srcdir)/Index -lIndex @SEARCH_LIBS@ -lMonitor -lCollect -lSQL -lTokenize -lUtils \
+	-L$(top_srcdir)/Index -lIndex @SEARCH_LIBS@ -lMonitor -lCollect -lSQL -lTokenize -lUtils -lBasicUtils \
 	@LIBS@ @GLIBMM_LIBS@ @INDEX_LIBS@ @DBUS_LIBS@ @SOAP_LIBS@ @XML_LIBS@ @MIME_LIBS@ @HTTP_LIBS@ @SQL_LIBS@ @MISC_LIBS@
 

Modified: trunk/Utils/Makefile.am
===================================================================
--- trunk/Utils/Makefile.am	2006-09-13 12:53:48 UTC (rev 480)
+++ trunk/Utils/Makefile.am	2006-09-13 12:55:38 UTC (rev 481)
@@ -24,22 +24,24 @@
 	xdgmime/xdgmimemagic.h \
 	xdgmime/xdgmimeparent.h
 
-noinst_LTLIBRARIES = libUtils.la
+noinst_LTLIBRARIES = libBasicUtils.la libUtils.la
 
-libUtils_la_SOURCES = \
+libBasicUtils_la_SOURCES = \
 	CommandLine.cpp \
 	Document.cpp \
+	DocumentInfo.cpp \
+	StringManip.cpp \
+	TimeConverter.cpp \
+	Url.cpp
+
+libUtils_la_SOURCES = \
+	IndexedDocument.cpp \
 	Languages.cpp \
 	MIMEScanner.cpp \
-	StringManip.cpp \
+	MboxParser.cpp \
+	Result.cpp \
 	Timer.cpp \
 	XapianDatabase.cpp \
-	DocumentInfo.cpp \
-	IndexedDocument.cpp \
-	MboxParser.cpp \
-	Result.cpp \
-	TimeConverter.cpp \
-	Url.cpp \
 	XapianDatabaseFactory.cpp \
 	xdgmime/xdgmimealias.c \
 	xdgmime/xdgmime.c \



From fabricecolin at mail.berlios.de  Wed Sep 13 14:56:25 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Wed, 13 Sep 2006 14:56:25 +0200
Subject: [Pinot-svn] r482 - trunk
Message-ID: <200609131256.k8DCuPcR014008@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-13 14:56:25 +0200 (Wed, 13 Sep 2006)
New Revision: 482

Modified:
   trunk/AUTHORS
Log:
Mention code was borrowed from wget.


Modified: trunk/AUTHORS
===================================================================
--- trunk/AUTHORS	2006-09-13 12:55:38 UTC (rev 481)
+++ trunk/AUTHORS	2006-09-13 12:56:25 UTC (rev 482)
@@ -12,6 +12,9 @@
 Some code is borrowed from Xapian Omega, which is "largely the work of
 Olly Betts, Mark Shinwell (omindex-config) and Richard Boulton".
 
+Code for mktime_from_utc() in Utils/TimeConverter.cpp was borrowed from
+wget (http://wget.sunsite.dk/).
+
 Translations provided by :
 
 	Spanish - Jes?s Tramullas <jesus at tramullas dot com>



From fabricecolin at mail.berlios.de  Wed Sep 13 14:57:38 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Wed, 13 Sep 2006 14:57:38 +0200
Subject: [Pinot-svn] r483 - trunk
Message-ID: <200609131257.k8DCvc5r014130@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-13 14:57:38 +0200 (Wed, 13 Sep 2006)
New Revision: 483

Modified:
   trunk/NEWS
Log:
Updated with recent changes.


Modified: trunk/NEWS
===================================================================
--- trunk/NEWS	2006-09-13 12:56:25 UTC (rev 482)
+++ trunk/NEWS	2006-09-13 12:57:38 UTC (rev 483)
@@ -1,23 +1,33 @@
 ??? version_0_6_0
+Build :
+ - modifications for building on Cygwin, contributed by Reini Urban
 Monitor :
  - inotify monitor more flexible
 SQL :
- - saves the daemon's crawler history
+ - retry if the database is busy
+ - save the daemon's crawler history
 Index :
  - able to open remote indexes that were not initially available
  - indexes are open in write mode only when necessary
  - prefer Xapian's Flint back-end to Quartz
+ - terms starting with an upper-case letter are not ignored by terms suggestion
+ - refresh terms generated from the previous title, location etc... when updating a document
+ - MIME type and directory hierarchy are stored as terms
+ - store documents last modification date in a way compatible with Xapian Omega
 Search :
- - fixed issue with abstract generation on remote indexes
+ - fixed abstract generation with remote indexes, and queries with OR'ed terms !
+ - brought MozDex plugin back
 UI :
  - fixed language shown in the properties box when language is unknown
   for one or more of the documents selected
  - better at queuing document indexing
  - My Email index is replaced with the index managed by the daemon
+ - search terms suggestion, More Like This and the index status icon on results
+  rely on both internal indexes
+ - only URLs can be imported now as the daemon takes care of local files
 Daemon :
- - crawls and indexes user-defined locations on the filesystem
+ - crawls and indexes user-defined locations on the filesystem, mbox files included
  - recursively monitors these locations for changes and updates the index
- - same for mboxes
  - provides a DBus interface suitable for querying and document inspection
  - no dependency on gtkmm
 



From fabricecolin at mail.berlios.de  Wed Sep 13 15:17:49 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Wed, 13 Sep 2006 15:17:49 +0200
Subject: [Pinot-svn] r484 - trunk
Message-ID: <200609131317.k8DDHnd7016206@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-13 15:17:48 +0200 (Wed, 13 Sep 2006)
New Revision: 484

Modified:
   trunk/README
Log:
Hugely more useful README !


Modified: trunk/README
===================================================================
--- trunk/README	2006-09-13 12:57:38 UTC (rev 483)
+++ trunk/README	2006-09-13 13:17:48 UTC (rev 484)
@@ -1,17 +1,199 @@
-Pinot http://pinot.berlios.de/
+Pinot
+http://pinot.berlios.de/
 
-Pinot is a metasearch tool for the Free Desktop. It acts as a front-end
-for search engines such as Google (with support for the SOAP API), Yahoo!,
-MSN, etc... and allows one to index relevant results locally and query the
-index.
-It was developed and tested on GNU/Linux and should work on other Unix-like systems.
 
-Dependencies :
----------------
+1. What is Pinot
+2. Upgrading from previous versions
+3. Using the Google API
+4. Automatic indexing and monitoring
+5. Search strategy
+6. Viewing cached results
+7. Installing additional search plugins
+8. File formats
+9. More Like This
+10. Starting the D-Bus service
+11. Dependencies
+12. FAQ
 
-Name			Location			Version used
-----			--------			------------
 
+1. What is Pinot
+
+
+  Pinot is :
+    * a D-Bus service that crawls, indexes and monitors your documents
+      ("pinot-dbus-daemon")
+    * a GTK-based user interface that enables to query the index built by the
+      service or your favourite Web engine, and display and analyze the
+      results ("pinot")
+    * other command-line tools
+  It was developed and tested on GNU/Linux and should work on other Unix-like
+  systems.
+
+
+2. Upgrading from previous versions
+
+
+  * from 0.50 or older to 0.60
+  The "My Documents" index was renamed "My Web Pages". A new index, appropriately
+  named "My Documents" ;-), includes all local files including mbox files and is
+  populated by the new D-Bus service.
+  If you used the Import facility to index specific directories on your system,
+  it is recommended you manually unindex the corresponding documents from the
+  "My Web Pages" index, and configure these directories to be automatically
+  indexed by the D-Bus service (see section "4. Automatic indexing and monitoring").
+  The "My EMail" index was dropped. Email messages will now appear in your
+  "My Documents" index.
+
+
+3. Using the Google API
+
+
+  If the version of Pinot you are using was built with support for the Google
+  SOAP API, a "Google API" engine will appear in pinot's engines list. To query
+  this engine, you need to obtain a key from Google.
+  Go to http://api.google.com/ and create an account. You will then receive
+  your Google API key by email. Start pinot and enter the key in the corresponding
+  field in the General tab of the Preferences box.
+
+
+4. Automatic indexing and monitoring
+
+
+  Pinot can automatically index :
+    * directories and their contents. Monitoring for changes is optional.
+    * mbox mail accounts. Monitoring is always enabled.
+  The former is configured with the My Documents tab in the Preferences box; the latter
+  with the My EMail tab.
+  Both are handled by the D-Bus service.
+
+
+5. Search strategy
+
+
+  When querying an index, Pinot adopts a multi-stepped search strategy that
+  first attempts to find the documents that best match the query. If a given
+  step doesn't return results, the next step alters the query slightly before
+  it is run again. These steps are :
+    * step 1
+      obey the query's operators, don't stem terms
+    * step 2
+      obey operators, stem terms
+    * step 3
+      don't follow operators (all terms are OR'ed) and don't stem terms
+    * step 4
+      don't follow operators and stem terms
+  Stemming is available only to Stored Queries for which a language is defined
+  (Query parameters box, Indexes only tab).
+
+
+6. Viewing cached results
+
+
+  Results returned by search engines can be viewed "live" by selecting the View
+  menuitem under Results. This opens whatever application defined for the
+  result's MIME type and/or protocol scheme.
+  In addition, Pinot allows to view the page as cached by Google and the Wayback
+  Machine. Cache providers are actually configured in globalconfig.xml, located
+  in $PREFIX/share/pinot/. For instance :
+  <cache>
+    <name>Google</name>
+    <location>http://www.google.com/search?q=cache:%url0</location>
+    <protocols>http, https</protocols>
+  </cache>
+  This is self-explanatory :-) Here it configures a cache provider called
+  "Google" that handles both http and https. The location field supports
+  two parameters that are substituted to obtain the URL to open : 
+    * %url is the result's URL as displayed by the UI, eg
+      http://pinot.berlios.de/download.html
+    * %url0 is the result's URL without the protocol, eg
+      pinot.berlios.de/download.html
+
+
+7. Installing additional search plugins
+
+
+  Starting with v0.42, Pinot supports both Sherlock and OpenSearch Description
+  plugins. They are installed in $PREFIX/share/pinot/engines/, where PREFIX
+  is usually /usr.
+  Additional engines can be installed in that directory or in ~/.pinot/engines.
+  Note this directory is not created automatically.
+  Sherlock is what Firefox and the Mozilla suite use. Chances are that somebody
+  wrote a plugin for the engine you are interested in. MyCroft at
+  http://mycroft.mozdev.org/ has got plenty of plugins. Beware that a lot are
+  out of date and will require some changes. Use pinot-search on the
+  command-line to run a quick check on a plugin, e.g. :
+  $ pinot-search sherlock /usr/share/pinot/engines/Bozo.src "clowns" 10
+
+  Plugins are categorized by channels. For Sherlock plugins, the routeType
+  element under SEARCH specifies the name of the channel the plugin belongs to.
+  As for OpenSearch, A9.com has an extensive list at
+  http://a9.com/-/search/moreColumns.jsp. A Description file is not available
+  for all engines though...
+  Pinot should work with OpenSearch Description 1.0 and 1.1 (draft 2) plugins.
+  One thing to keep in mind is that because Description doesn't describe how
+  to parse the results page returned by the search engine, Pinot assumes that
+  the engine will return results formatted according to the OpenSearch Response
+  standard.
+  In practice, this means that plugins that don't stick to the following rules
+  will be ignored or won't show any result :
+    * For Description 1.1 plugins, the type attribute on the Url field must be
+      set to "application/atom+xml" or "application/rss+xml" (default).
+      "text/html" will be rejected.
+    * The search engine's results page content type must be some form of XML,
+      otherwise Pinot won't attempt parsing it. 
+  Pinot differs from the Description spec in that it interprets the Tags field
+  as a channel name. The standard defines Tags as a "space-delimited set of
+  words that are used as keywords to identify and categorize this search
+  content".
+
+8. File formats
+
+
+  Supported document types are
+  * plain text
+  * HTML
+  * PDF (pdftotext is required)
+  * RTF (unrtf is required)
+  * MS Word (antiword is required)
+  * XML
+  * OpenDocument/StarOffice files
+  * mbox
+  * MP3 and Ogg Vorbis (TagLib required)
+  More formats will be supported as the project matures.
+
+
+9. More Like This
+
+
+   The More Like This feature is enabled when at least one of the results
+   currently selected is indexed, ie if the result was previously manually
+   indexed in "My Web Pages", or if it's a local file indexed in "My Documents".
+   Its role is to expand queries.
+   When activated, it will suggest other terms from the selected results
+   and create a new Stored Query prefixed with "More Like". For instance,
+   if you run a Stored Query with name "Me", the expanded query's name will be
+   "More Like Me".
+
+
+10. Starting the D-Bus service
+
+
+   Thanks to D-Bus activation, the service is started whenever one of its
+   methods are invoked, either by the UI or any other consumer application.
+   When directories or mbox files are configured for indexing in the UI,
+   clicking OK on the Preferences box will call a method of the service
+   to make sure it is running.   
+   If you want the service to be started when you start a new X session,
+   add pinot-dbus-daemon to your desktop environment's startup programs
+   list.
+
+
+11. Dependencies
+
+
+---------------------------------------------------------------
+Name							Version
+---------------------------------------------------------------
 SQLite							3.1.2
 http://www.sqlite.org/
 
@@ -68,16 +250,19 @@
 
 TagLib							1.4
 http://ktown.kde.org/~wheeler/taglib/
-
+---------------------------------------------------------------
+Notes :
 (1) enabled with "./configure --with-http=neon|curl"
 (2) enabled with "./configure --with-soap=yes"
 (3) for building only
+---------------------------------------------------------------
 
-FAQ :
------
 
-- When listing an index or indexing documents, Pinot complains of an
-  "index error"
+12. FAQ
+
+
+- At startup, when listing an index or indexing documents, Pinot complains
+  of an "index error"
   This is likely because a previous instance didn't exit properly and one
   (or more) index is still locked. Quit Pinot and look for a "db_lock" file
   in "~/.pinot/index" and "~/.pinot/mail". If it's there, delete it and
@@ -95,3 +280,4 @@
 - If you have built Pinot from source, make sure you have done a "make install".
   Pinot will fail to start if it can't find stuff it needs, its icon for instance.
 
+



From fabricecolin at mail.berlios.de  Wed Sep 13 16:41:26 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Wed, 13 Sep 2006 16:41:26 +0200
Subject: [Pinot-svn] r485 - trunk
Message-ID: <200609131441.k8DEfQqn027221@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-13 16:41:25 +0200 (Wed, 13 Sep 2006)
New Revision: 485

Modified:
   trunk/README
Log:
Talk a bit more about how the D-Bus service functions.


Modified: trunk/README
===================================================================
--- trunk/README	2006-09-13 13:17:48 UTC (rev 484)
+++ trunk/README	2006-09-13 14:41:25 UTC (rev 485)
@@ -1,7 +1,7 @@
 Pinot
 http://pinot.berlios.de/
+Fabrice Colin <fabricecolin at users dot berlios dot de>
 
-
 1. What is Pinot
 2. Upgrading from previous versions
 3. Using the Google API
@@ -11,7 +11,7 @@
 7. Installing additional search plugins
 8. File formats
 9. More Like This
-10. Starting the D-Bus service
+10. D-Bus service
 11. Dependencies
 12. FAQ
 
@@ -26,6 +26,7 @@
       service or your favourite Web engine, and display and analyze the
       results ("pinot")
     * other command-line tools
+
   It was developed and tested on GNU/Linux and should work on other Unix-like
   systems.
 
@@ -37,10 +38,11 @@
   The "My Documents" index was renamed "My Web Pages". A new index, appropriately
   named "My Documents" ;-), includes all local files including mbox files and is
   populated by the new D-Bus service.
+
   If you used the Import facility to index specific directories on your system,
   it is recommended you manually unindex the corresponding documents from the
   "My Web Pages" index, and configure these directories to be automatically
-  indexed by the D-Bus service (see section "4. Automatic indexing and monitoring").
+  indexed by the D-Bus service, See section "4. Automatic indexing and monitoring".
   The "My EMail" index was dropped. Email messages will now appear in your
   "My Documents" index.
 
@@ -51,6 +53,7 @@
   If the version of Pinot you are using was built with support for the Google
   SOAP API, a "Google API" engine will appear in pinot's engines list. To query
   this engine, you need to obtain a key from Google.
+
   Go to http://api.google.com/ and create an account. You will then receive
   your Google API key by email. Start pinot and enter the key in the corresponding
   field in the General tab of the Preferences box.
@@ -63,10 +66,9 @@
     * directories and their contents. Monitoring for changes is optional.
     * mbox mail accounts. Monitoring is always enabled.
   The former is configured with the My Documents tab in the Preferences box; the latter
-  with the My EMail tab.
-  Both are handled by the D-Bus service.
+  with the My EMail tab. Both are handled by the D-Bus service.
+  See section "10. D-Bus service".
 
-
 5. Search strategy
 
 
@@ -84,6 +86,9 @@
       don't follow operators and stem terms
   Stemming is available only to Stored Queries for which a language is defined
   (Query parameters box, Indexes only tab).
+  While Stored Queries allow to define how terms should be used, live queries
+  are run with all terms AND'ed together when querying an index. Future
+  versions of Pinot will allow more flexibility in that respect.
 
 
 6. Viewing cached results
@@ -100,6 +105,7 @@
     <location>http://www.google.com/search?q=cache:%url0</location>
     <protocols>http, https</protocols>
   </cache>
+
   This is self-explanatory :-) Here it configures a cache provider called
   "Google" that handles both http and https. The location field supports
   two parameters that are substituted to obtain the URL to open : 
@@ -169,25 +175,39 @@
    currently selected is indexed, ie if the result was previously manually
    indexed in "My Web Pages", or if it's a local file indexed in "My Documents".
    Its role is to expand queries.
+
    When activated, it will suggest other terms from the selected results
    and create a new Stored Query prefixed with "More Like". For instance,
    if you run a Stored Query with name "Me", the expanded query's name will be
    "More Like Me".
 
 
-10. Starting the D-Bus service
+10. D-Bus service
 
 
    Thanks to D-Bus activation, the service is started whenever one of its
    methods are invoked, either by the UI or any other consumer application.
    When directories or mbox files are configured for indexing in the UI,
    clicking OK on the Preferences box will call a method of the service
-   to make sure it is running.   
+   to make sure it is running.
+
    If you want the service to be started when you start a new X session,
    add pinot-dbus-daemon to your desktop environment's startup programs
    list.
+   A few things to keep in mind :
+     * the service doesn't reload its configuration while running, so any
+       change (adding or removing a directory or mbox file) will take effect
+       when the service is restarted.
+     * when starting, the service will first crawl all configured locations
+       and (re)index new and modified files. This might be CPU intensive,
+       but not so much that it prevents you from doing anything else.
+     * when finished crawling, the service will monitor these locations
+       for changes and should consume little resources, unless a huge
+       quantity of files needs its attention.
 
+  For a list of available D-Bus methods, see the file pinot-dbus-daemon.xml.
 
+
 11. Dependencies
 
 



From fabricecolin at mail.berlios.de  Wed Sep 13 16:45:15 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Wed, 13 Sep 2006 16:45:15 +0200
Subject: [Pinot-svn] r486 - trunk/Index
Message-ID: <200609131445.k8DEjFwj027546@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-13 16:45:14 +0200 (Wed, 13 Sep 2006)
New Revision: 486

Modified:
   trunk/Index/pinot-index.cpp
Log:
Align help text nicely.


Modified: trunk/Index/pinot-index.cpp
===================================================================
--- trunk/Index/pinot-index.cpp	2006-09-13 14:41:25 UTC (rev 485)
+++ trunk/Index/pinot-index.cpp	2006-09-13 14:45:14 UTC (rev 486)
@@ -69,11 +69,11 @@
 				cout << "pinot-index - Index documents from the command-line\n\n"
 					<< "Usage: pinot-index [OPTIONS] INDEXTYPE INDEXLOCATION\n\n"
 					<< "Options:\n"
-					<< "  -c, --check		check whether the given URL is in the index\n"
-					<< "  -h, --help		display this help and exit\n"
-					<< "  -i, --index		index the given URL\n"
-					<< "  -s, --showinfo		show information about the document\n"
-					<< "  -v, --version		output version information and exit\n\n";
+					<< "  -c, --check               check whether the given URL is in the index\n"
+					<< "  -h, --help                display this help and exit\n"
+					<< "  -i, --index               index the given URL\n"
+					<< "  -s, --showinfo            show information about the document\n"
+					<< "  -v, --version             output version information and exit\n\n";
 				// Don't mention type dbus here as it doesn't support indexing and
 				// is identical to xapian when checking for URLs
 				cout << "Examples:\n"



From fabricecolin at mail.berlios.de  Thu Sep 14 13:15:05 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Thu, 14 Sep 2006 13:15:05 +0200
Subject: [Pinot-svn] r487 - trunk
Message-ID: <200609141115.k8EBF5P9028980@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-14 13:15:04 +0200 (Thu, 14 Sep 2006)
New Revision: 487

Modified:
   trunk/README
Log:
Clarified a few things, added blurb about the Deskbar Applet plugin.


Modified: trunk/README
===================================================================
--- trunk/README	2006-09-13 14:45:14 UTC (rev 486)
+++ trunk/README	2006-09-14 11:15:04 UTC (rev 487)
@@ -2,6 +2,7 @@
 http://pinot.berlios.de/
 Fabrice Colin <fabricecolin at users dot berlios dot de>
 
+
 1. What is Pinot
 2. Upgrading from previous versions
 3. Using the Google API
@@ -12,8 +13,9 @@
 8. File formats
 9. More Like This
 10. D-Bus service
-11. Dependencies
-12. FAQ
+11. Deskbar Applet plugin
+12. Dependencies
+13. FAQ
 
 
 1. What is Pinot
@@ -69,6 +71,7 @@
   with the My EMail tab. Both are handled by the D-Bus service.
   See section "10. D-Bus service".
 
+
 5. Search strategy
 
 
@@ -127,7 +130,7 @@
   wrote a plugin for the engine you are interested in. MyCroft at
   http://mycroft.mozdev.org/ has got plenty of plugins. Beware that a lot are
   out of date and will require some changes. Use pinot-search on the
-  command-line to run a quick check on a plugin, e.g. :
+  command-line to run a quick check on a plugin, eg
   $ pinot-search sherlock /usr/share/pinot/engines/Bozo.src "clowns" 10
 
   Plugins are categorized by channels. For Sherlock plugins, the routeType
@@ -206,11 +209,29 @@
        quantity of files needs its attention.
 
   For a list of available D-Bus methods, see the file pinot-dbus-daemon.xml.
+  Note that only the My Documents index is accessible through D-Bus for the
+  time being.
 
 
-11. Dependencies
+11. Deskbar Applet plugin
 
 
+  Deskbar Applet provides an omnipresent versatile search interface for Gnome.
+  Searching documents indexed by Pinot with the applet is possible. Users
+  of RPM-based systems may install the pinot-desbar RPM. Otherwise, the
+  file UI/pinot-deskbar.py can simply be copied into
+  $PREFIX/lib/deskbar-applet/handlers (or, on 64 bit systems,
+  $PREFIX/lib64/deskbar-applet/handlers) for use by all users, or into
+  ~/.gnome2/deskbar-applet/handlers for use only by the current user.
+  Once enabled, the plugin will rely on the D-Bus service to query the My
+  Documents index.
+  Deskbar Applet appears to sort results by names, so it may not present
+  results in the same order as the Pinot UI.
+
+
+12. Dependencies
+
+
 ---------------------------------------------------------------
 Name							Version
 ---------------------------------------------------------------
@@ -278,26 +299,26 @@
 ---------------------------------------------------------------
 
 
-12. FAQ
+13. FAQ
 
 
-- At startup, when listing an index or indexing documents, Pinot complains
-  of an "index error"
-  This is likely because a previous instance didn't exit properly and one
-  (or more) index is still locked. Quit Pinot and look for a "db_lock" file
-  in "~/.pinot/index" and "~/.pinot/mail". If it's there, delete it and
-  restart Pinot. This will be fixed in the future.
+  * At startup, when listing an index or indexing documents, Pinot complains
+    of an "index error"
+    This is likely because a previous instance didn't exit properly and one
+    (or more) index is still locked. Quit Pinot and look for a "db_lock" file
+    in "~/.pinot/index" and "~/.pinot/mail". If it's there, delete it and
+    restart Pinot. This will be fixed in the future.
 
-- When compiling from source, you may run into linking problems related to
-  libstdc++.la. Try patching xapian-config as explained in this post
-  (http://lists.tartarus.org/pipermail/xapian-devel/2006-January/000293.html).
+  * When compiling from source, you may run into linking problems related to
+    libstdc++.la. Try patching xapian-config as explained in the post at
+    http://lists.tartarus.org/pipermail/xapian-devel/2006-January/000293.html
 
-- If you experience segfaults at startup and you are on Fedora, chances are
-  it's because of libxml++/libsigc++. See this Bugzilla entry:
-  https://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=178592
-  The latest version seems to fix this issue.
+  * If you experience segfaults at startup and you are on Fedora, chances are
+    it's because of libxml++/libsigc++. See this Bugzilla entry :
+    https://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=178592
+    The latest version seems to fix this issue.
 
-- If you have built Pinot from source, make sure you have done a "make install".
-  Pinot will fail to start if it can't find stuff it needs, its icon for instance.
+  * If you have built Pinot from source, make sure you have done a "make install".
+    Pinot will fail to start if it can't find stuff it needs, its icon for instance.
 
 



From fabricecolin at mail.berlios.de  Thu Sep 14 13:19:19 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Thu, 14 Sep 2006 13:19:19 +0200
Subject: [Pinot-svn] r488 - trunk
Message-ID: <200609141119.k8EBJJ1t030237@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-14 13:19:18 +0200 (Thu, 14 Sep 2006)
New Revision: 488

Modified:
   trunk/TODO
Log:
Slightly less to do...


Modified: trunk/TODO
===================================================================
--- trunk/TODO	2006-09-14 11:15:04 UTC (rev 487)
+++ trunk/TODO	2006-09-14 11:19:18 UTC (rev 488)
@@ -2,7 +2,6 @@
 - Fix the FIXMEs
 - Get rid of dead code/classes/methods...
 - Advertise service via Rendezvous
-- Check for leaks with valgrind (eg --tool=memcheck -v --leak-check=yes --show-reachable=yes ...)
 - MIMEScanner should also return parent types so that we don't filter out types unnecessarily
 
 Tokenize
@@ -11,9 +10,10 @@
 - WordPerfect tokenizer with libwpd
 - Spin tokenizers into separate project, a la libextractor
 - Check whether pdftotext flattens text in PDF documents that have columns
+- HtmlTokenizer should skip htdig_noindex blocks (http://www.htdig.org/attrs.html#noindex_start)
 
 Monitor
-- Use SQLite for email lists in MboxHandler, and not the index
+- Implement support for Solaris FEM
 
 Collect
 - Comply with robot stuff defined at http://www.robotstxt.org/
@@ -40,14 +40,14 @@
 - Write a pseudo-filesystem for indexes with FUSE (http://fuse.sourceforge.net/) or gnome-vfs ?
 - Xapian lock files can be deleted at startup if no other instance is running
 - Play around with the XAPIAN_FLUSH_THRESHOLD env var
-- Switch to Xapian's new Flint back-end (set XAPIAN_PREFER_FLINT=1)
-- Write a back-end for CLucene (http://clucene.sourceforge.net/)
-- Flush the index before searching not after modification
 - Hash document data to determine on updates whether documents have changed
-- Allow to monitor imported documents for changes
 - Xapian Query objects will become serializable at some point, this will be useful
   for stored queries
 - Think about indexing archives (parent documents) and their contents (child documents)
+- Reopen connection to remote indexes when necessary; does Xapian throw a RemoteError ?
+- Allow to access remote Xapian indexes tunneled through ssh, using Xapian::Remote::open()
+  defined in /usr/include/xapian/dbfactory.h
+- Use Xapian's QueryParser
 
 Mail
 - Find out what kind of locking scheme Mozilla uses (POSIX lock ?) and use that
@@ -64,7 +64,6 @@
 UI
 - Switching back and forth between grouping modes messes up results rankings : check scores
 - When sorting results by host name, give better score to results that appear several times
-- Results and index trees should be sorted when clicking on columns
 - Show which threads are running, what they are doing, and allow to stop them selectively
 - Add an history window to edit Index and ViewHistory
 - Automatic indexing of a query's results depending on type, source, size, language
@@ -72,15 +71,14 @@
 - Display search engines icons (Gtk::IconSource::set_filename() and Gtk::Style::render_icon())
 - Replace Combobox objects with ComboboxText's (glademm support required)
 - Replace glademm with libglademm ?
-- Show activity when mail is being indexed
 - Filter documents by language, similarly to how labels are shown
 - Clean up method names
 - Prefer ustring to string whenever possible
 - Closing when threads are running gives the impression Pinot has crashed; how do we tell the user
   we are waiting for something to finish ?
-- Use libnotify to show a popup when a new result is available ?
 - Replace labels with tags (Leaftag, http://www.chipx86.com/wiki/Leaftag). Enable to import
   all the documents that match a specific tag
 - When switching back and forth between results tabs and another tab, why does the
   result list get shifted right to the Title column ?
+- Make Pinot a unique app (http://guniqueapp.akl.lt/)
 



From fabricecolin at mail.berlios.de  Wed Sep 20 16:24:48 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Wed, 20 Sep 2006 16:24:48 +0200
Subject: [Pinot-svn] r489 - in trunk: Index Monitor Search Tokenize
	UI/GTK2/src Utils
Message-ID: <200609201424.k8KEOmCe003702@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-20 16:24:47 +0200 (Wed, 20 Sep 2006)
New Revision: 489

Modified:
   trunk/Index/DBusXapianIndex.cpp
   trunk/Index/XapianIndex.cpp
   trunk/Monitor/MonitorEvent.cpp
   trunk/Search/QueryProperties.cpp
   trunk/Search/SearchPluginProperties.cpp
   trunk/Tokenize/HtmlTokenizer.cpp
   trunk/UI/GTK2/src/PinotSettings.cpp
   trunk/Utils/Document.cpp
   trunk/Utils/DocumentInfo.cpp
   trunk/Utils/IndexedDocument.cpp
   trunk/Utils/MIMEScanner.cpp
   trunk/Utils/Result.cpp
   trunk/Utils/Timer.cpp
   trunk/Utils/Url.cpp
   trunk/Utils/XapianDatabase.cpp
Log:
Copy operators check we are not trying to copy the current object.
Some didn't return anything !


Modified: trunk/Index/DBusXapianIndex.cpp
===================================================================
--- trunk/Index/DBusXapianIndex.cpp	2006-09-14 11:19:18 UTC (rev 488)
+++ trunk/Index/DBusXapianIndex.cpp	2006-09-20 14:24:47 UTC (rev 489)
@@ -79,7 +79,11 @@
 
 DBusXapianIndex &DBusXapianIndex::operator=(const DBusXapianIndex &other)
 {
-	XapianIndex::operator=(other);
+	if (this != &other)
+	{
+		XapianIndex::operator=(other);
+	}
+
 	return *this;
 }
 

Modified: trunk/Index/XapianIndex.cpp
===================================================================
--- trunk/Index/XapianIndex.cpp	2006-09-14 11:19:18 UTC (rev 488)
+++ trunk/Index/XapianIndex.cpp	2006-09-20 14:24:47 UTC (rev 489)
@@ -100,10 +100,14 @@
 
 XapianIndex &XapianIndex::operator=(const XapianIndex &other)
 {
-	IndexInterface::operator=(other);
-	m_databaseName = other.m_databaseName;
-	m_goodIndex = other .m_goodIndex;
-	m_stemLanguage = other.m_stemLanguage;
+	if (this != &other)
+	{
+		IndexInterface::operator=(other);
+		m_databaseName = other.m_databaseName;
+		m_goodIndex = other .m_goodIndex;
+		m_stemLanguage = other.m_stemLanguage;
+	}
+
 	return *this;
 }
 

Modified: trunk/Monitor/MonitorEvent.cpp
===================================================================
--- trunk/Monitor/MonitorEvent.cpp	2006-09-14 11:19:18 UTC (rev 488)
+++ trunk/Monitor/MonitorEvent.cpp	2006-09-20 14:24:47 UTC (rev 489)
@@ -41,11 +41,14 @@
 
 MonitorEvent& MonitorEvent::operator=(const MonitorEvent& other)
 {
-	m_location = other.m_location;
-	m_previousLocation = other.m_previousLocation;
-	m_isWatch = other.m_isWatch;
-	m_type = other.m_type;
-	m_isDirectory = other.m_isDirectory;
+	if (this != &other)
+	{
+		m_location = other.m_location;
+		m_previousLocation = other.m_previousLocation;
+		m_isWatch = other.m_isWatch;
+		m_type = other.m_type;
+		m_isDirectory = other.m_isDirectory;
+	}
 
 	return *this;
 }

Modified: trunk/Search/QueryProperties.cpp
===================================================================
--- trunk/Search/QueryProperties.cpp	2006-09-14 11:19:18 UTC (rev 488)
+++ trunk/Search/QueryProperties.cpp	2006-09-20 14:24:47 UTC (rev 489)
@@ -61,18 +61,21 @@
 
 QueryProperties &QueryProperties::operator=(const QueryProperties &other)
 {
-	m_name = other.m_name;
-	m_andWords = other.m_andWords;
-	m_phrase = other.m_phrase;
-	m_anyWords = other.m_anyWords;
-	m_notWords = other.m_notWords;
-	m_language = other.m_language;
-	m_hostFilter = other.m_hostFilter;
-	m_fileFilter = other.m_fileFilter;
-	m_labelFilter = other.m_labelFilter;
-	m_resultsCount = other.m_resultsCount;
-	m_indexResults = other.m_indexResults;
-	m_labelName = other.m_labelName;
+	if (this != &other)
+	{
+		m_name = other.m_name;
+		m_andWords = other.m_andWords;
+		m_phrase = other.m_phrase;
+		m_anyWords = other.m_anyWords;
+		m_notWords = other.m_notWords;
+		m_language = other.m_language;
+		m_hostFilter = other.m_hostFilter;
+		m_fileFilter = other.m_fileFilter;
+		m_labelFilter = other.m_labelFilter;
+		m_resultsCount = other.m_resultsCount;
+		m_indexResults = other.m_indexResults;
+		m_labelName = other.m_labelName;
+	}
 
 	return *this;
 }

Modified: trunk/Search/SearchPluginProperties.cpp
===================================================================
--- trunk/Search/SearchPluginProperties.cpp	2006-09-14 11:19:18 UTC (rev 488)
+++ trunk/Search/SearchPluginProperties.cpp	2006-09-20 14:24:47 UTC (rev 489)
@@ -59,31 +59,36 @@
 
 SearchPluginProperties& SearchPluginProperties::operator=(const SearchPluginProperties& other)
 {
-	m_name = other.m_name;
-	m_longName = other.m_longName;
-	m_description = other.m_description;
-	m_channel = other.m_channel;
-	m_baseUrl = other.m_baseUrl;
-	m_method = other.m_method;
-	m_parametersRemainder = other.m_parametersRemainder;
-	m_outputType = other.m_outputType;
-	m_scrolling = other.m_scrolling;
-	m_nextIncrement = other.m_nextIncrement;
-	m_nextBase = other.m_nextBase;
-	m_response = other.m_response;
+	if (this != &other)
+	{
+		m_name = other.m_name;
+		m_longName = other.m_longName;
+		m_description = other.m_description;
+		m_channel = other.m_channel;
+		m_baseUrl = other.m_baseUrl;
+		m_method = other.m_method;
+		m_parametersRemainder = other.m_parametersRemainder;
+		m_outputType = other.m_outputType;
+		m_scrolling = other.m_scrolling;
+		m_nextIncrement = other.m_nextIncrement;
+		m_nextBase = other.m_nextBase;
+		m_response = other.m_response;
 
-	m_languages.clear();
-	copy(other.m_languages.begin(), other.m_languages.end(),
-		inserter(m_languages, m_languages.begin()));
-	m_outputEncodings.clear();
-	copy(other.m_outputEncodings.begin(), other.m_outputEncodings.end(),
-		inserter(m_outputEncodings, m_outputEncodings.begin()));
-	m_inputEncodings.clear();
-	copy(other.m_inputEncodings.begin(), other.m_inputEncodings.end(),
-		inserter(m_inputEncodings, m_inputEncodings.begin()));
-	m_parameters.clear();
-	copy(other.m_parameters.begin(), other.m_parameters.end(),
-		inserter(m_parameters, m_parameters.begin()));
+		m_languages.clear();
+		copy(other.m_languages.begin(), other.m_languages.end(),
+			inserter(m_languages, m_languages.begin()));
+		m_outputEncodings.clear();
+		copy(other.m_outputEncodings.begin(), other.m_outputEncodings.end(),
+			inserter(m_outputEncodings, m_outputEncodings.begin()));
+		m_inputEncodings.clear();
+		copy(other.m_inputEncodings.begin(), other.m_inputEncodings.end(),
+			inserter(m_inputEncodings, m_inputEncodings.begin()));
+		m_parameters.clear();
+		copy(other.m_parameters.begin(), other.m_parameters.end(),
+			inserter(m_parameters, m_parameters.begin()));
+	}
+
+	return *this;
 }
 
 bool SearchPluginProperties::operator==(const SearchPluginProperties &other) const

Modified: trunk/Tokenize/HtmlTokenizer.cpp
===================================================================
--- trunk/Tokenize/HtmlTokenizer.cpp	2006-09-14 11:19:18 UTC (rev 488)
+++ trunk/Tokenize/HtmlTokenizer.cpp	2006-09-20 14:24:47 UTC (rev 489)
@@ -448,11 +448,14 @@
 
 Link& Link::operator=(const Link& other)
 {
-	m_url = other.m_url;
-	m_name = other.m_name;
-	m_index = other.m_index;
-	m_startPos = other.m_startPos;
-	m_endPos = other.m_endPos;
+	if (this != &other)
+	{
+		m_url = other.m_url;
+		m_name = other.m_name;
+		m_index = other.m_index;
+		m_startPos = other.m_startPos;
+		m_endPos = other.m_endPos;
+	}
 
 	return *this;
 }

Modified: trunk/UI/GTK2/src/PinotSettings.cpp
===================================================================
--- trunk/UI/GTK2/src/PinotSettings.cpp	2006-09-14 11:19:18 UTC (rev 488)
+++ trunk/UI/GTK2/src/PinotSettings.cpp	2006-09-20 14:24:47 UTC (rev 489)
@@ -1377,10 +1377,15 @@
 
 PinotSettings::Engine &PinotSettings::Engine::operator=(const PinotSettings::Engine &other)
 {
-	m_name = other.m_name;
-	m_type = other.m_type;
-	m_option = other.m_option;
-	m_channel = other.m_channel;
+	if (this != &other)
+	{
+		m_name = other.m_name;
+		m_type = other.m_type;
+		m_option = other.m_option;
+		m_channel = other.m_channel;
+	}
+
+	return *this;
 }
 
 bool PinotSettings::Engine::operator<(const PinotSettings::Engine &other) const
@@ -1420,8 +1425,11 @@
 
 PinotSettings::TimestampedItem &PinotSettings::TimestampedItem::operator=(const TimestampedItem &other)
 {
-	m_name = other.m_name;
-	m_modTime = other.m_modTime;
+	if (this != &other)
+	{
+		m_name = other.m_name;
+		m_modTime = other.m_modTime;
+	}
 
 	return *this;
 }
@@ -1463,8 +1471,11 @@
 
 PinotSettings::IndexableLocation &PinotSettings::IndexableLocation::operator=(const IndexableLocation &other)
 {
-	m_monitor = other.m_monitor;
-	m_name = other.m_name;
+	if (this != &other)
+	{
+		m_monitor = other.m_monitor;
+		m_name = other.m_name;
+	}
 
 	return *this;
 }
@@ -1508,11 +1519,14 @@
 
 PinotSettings::CacheProvider &PinotSettings::CacheProvider::operator=(const CacheProvider &other)
 {
-	m_name = other.m_name;
-	m_location = other.m_location;
-	m_protocols.clear();
-	copy(other.m_protocols.begin(), other.m_protocols.end(),
-		inserter(m_protocols, m_protocols.begin()));
+	if (this != &other)
+	{
+		m_name = other.m_name;
+		m_location = other.m_location;
+		m_protocols.clear();
+		copy(other.m_protocols.begin(), other.m_protocols.end(),
+			inserter(m_protocols, m_protocols.begin()));
+	}
 
 	return *this;
 }

Modified: trunk/Utils/Document.cpp
===================================================================
--- trunk/Utils/Document.cpp	2006-09-14 11:19:18 UTC (rev 488)
+++ trunk/Utils/Document.cpp	2006-09-20 14:24:47 UTC (rev 489)
@@ -73,10 +73,13 @@
 
 Document& Document::operator=(const Document& other)
 {
-	// Copying does a deep copy
-	DocumentInfo::operator=(other);
-	setData(other.m_pData, other.m_dataLength);
-	m_isMapped = false;
+	if (this != &other)
+	{
+		// Copying does a deep copy
+		DocumentInfo::operator=(other);
+		setData(other.m_pData, other.m_dataLength);
+		m_isMapped = false;
+	}
 
 	return *this;
 }

Modified: trunk/Utils/DocumentInfo.cpp
===================================================================
--- trunk/Utils/DocumentInfo.cpp	2006-09-14 11:19:18 UTC (rev 488)
+++ trunk/Utils/DocumentInfo.cpp	2006-09-20 14:24:47 UTC (rev 489)
@@ -54,14 +54,17 @@
 
 DocumentInfo& DocumentInfo::operator=(const DocumentInfo& other)
 {
-	m_title = other.m_title;
-	m_location = other.m_location;
-	m_type = other.m_type;
-	m_language = other.m_language;
-	m_timestamp = other.m_timestamp;
-	m_labels.clear();
-	copy(other.m_labels.begin(), other.m_labels.end(),
-		inserter(m_labels, m_labels.begin()));
+	if (this != &other)
+	{
+		m_title = other.m_title;
+		m_location = other.m_location;
+		m_type = other.m_type;
+		m_language = other.m_language;
+		m_timestamp = other.m_timestamp;
+		m_labels.clear();
+		copy(other.m_labels.begin(), other.m_labels.end(),
+			inserter(m_labels, m_labels.begin()));
+	}
 
 	return *this;
 }

Modified: trunk/Utils/IndexedDocument.cpp
===================================================================
--- trunk/Utils/IndexedDocument.cpp	2006-09-14 11:19:18 UTC (rev 488)
+++ trunk/Utils/IndexedDocument.cpp	2006-09-20 14:24:47 UTC (rev 489)
@@ -38,8 +38,13 @@
 
 IndexedDocument& IndexedDocument::operator=(const IndexedDocument& other)
 {
-	Document::operator=(other);
-	m_originalLocation = other.m_originalLocation;
+	if (this != &other)
+	{
+		Document::operator=(other);
+		m_originalLocation = other.m_originalLocation;
+	}
+
+	return *this;
 }
 
 /// Returns the document ID.

Modified: trunk/Utils/MIMEScanner.cpp
===================================================================
--- trunk/Utils/MIMEScanner.cpp	2006-09-14 11:19:18 UTC (rev 488)
+++ trunk/Utils/MIMEScanner.cpp	2006-09-20 14:24:47 UTC (rev 489)
@@ -137,13 +137,16 @@
 
 MIMEAction &MIMEAction::operator=(const MIMEAction &other)
 {
-	m_multipleArgs = other.m_multipleArgs;
-	m_localOnly = other.m_localOnly;
-	m_name = other.m_name;
-	m_location = other.m_location;
-	m_exec = other.m_exec;
-	m_icon = other.m_icon;
-	m_device = other.m_device;
+	if (this != &other)
+	{
+		m_multipleArgs = other.m_multipleArgs;
+		m_localOnly = other.m_localOnly;
+		m_name = other.m_name;
+		m_location = other.m_location;
+		m_exec = other.m_exec;
+		m_icon = other.m_icon;
+		m_device = other.m_device;
+	}
 
 	return *this;
 }

Modified: trunk/Utils/Result.cpp
===================================================================
--- trunk/Utils/Result.cpp	2006-09-14 11:19:18 UTC (rev 488)
+++ trunk/Utils/Result.cpp	2006-09-20 14:24:47 UTC (rev 489)
@@ -39,9 +39,12 @@
 
 Result &Result::operator=(const Result &other)
 {
-	DocumentInfo::operator=(other);
-	m_extract = other.m_extract;
-	m_score = other.m_score;
+	if (this != &other)
+	{
+		DocumentInfo::operator=(other);
+		m_extract = other.m_extract;
+		m_score = other.m_score;
+	}
 
 	return *this;
 }

Modified: trunk/Utils/Timer.cpp
===================================================================
--- trunk/Utils/Timer.cpp	2006-09-14 11:19:18 UTC (rev 488)
+++ trunk/Utils/Timer.cpp	2006-09-20 14:24:47 UTC (rev 489)
@@ -31,8 +31,11 @@
 
 Timer &Timer::operator=(const Timer &other)
 {
-	m_start = other.m_start;
-	m_stop = other.m_stop;
+	if (this != &other)
+	{
+		m_start = other.m_start;
+		m_stop = other.m_stop;
+	}
 
 	return *this;
 }

Modified: trunk/Utils/Url.cpp
===================================================================
--- trunk/Utils/Url.cpp	2006-09-14 11:19:18 UTC (rev 488)
+++ trunk/Utils/Url.cpp	2006-09-20 14:24:47 UTC (rev 489)
@@ -60,13 +60,16 @@
 
 Url& Url::operator=(const Url& other)
 {
-	m_protocol = other.m_protocol;
-	m_user = other.m_user;
-	m_password = other.m_password;
-	m_host = other.m_host;
-	m_location = other.m_location;
-	m_file = other.m_file;
-	m_parameters = other.m_parameters;
+	if (this != &other)
+	{
+		m_protocol = other.m_protocol;
+		m_user = other.m_user;
+		m_password = other.m_password;
+		m_host = other.m_host;
+		m_location = other.m_location;
+		m_file = other.m_file;
+		m_parameters = other.m_parameters;
+	}
 
 	return *this;
 }

Modified: trunk/Utils/XapianDatabase.cpp
===================================================================
--- trunk/Utils/XapianDatabase.cpp	2006-09-14 11:19:18 UTC (rev 488)
+++ trunk/Utils/XapianDatabase.cpp	2006-09-20 14:24:47 UTC (rev 489)
@@ -81,21 +81,24 @@
 
 XapianDatabase &XapianDatabase::operator=(const XapianDatabase &other)
 {
-	m_databaseName = other.m_databaseName;
-	m_readOnly = other.m_readOnly;
-	if (m_pDatabase != NULL)
+	if (this != &other)
 	{
-		delete m_pDatabase;
-		m_pDatabase = NULL;
+		m_databaseName = other.m_databaseName;
+		m_readOnly = other.m_readOnly;
+		if (m_pDatabase != NULL)
+		{
+			delete m_pDatabase;
+			m_pDatabase = NULL;
+		}
+		if (other.m_pDatabase != NULL)
+		{
+			m_pDatabase = new Xapian::Database(*other.m_pDatabase);
+		}
+		m_isOpen = other.m_isOpen;
+		m_merge = other.m_merge;
+		m_pFirst = other.m_pFirst;
+		m_pSecond = other.m_pSecond;
 	}
-	if (other.m_pDatabase != NULL)
-	{
-		m_pDatabase = new Xapian::Database(*other.m_pDatabase);
-	}
-	m_isOpen = other.m_isOpen;
-	m_merge = other.m_merge;
-	m_pFirst = other.m_pFirst;
-	m_pSecond = other.m_pSecond;
 
 	return *this;
 }



From fabricecolin at mail.berlios.de  Thu Sep 21 14:04:55 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Thu, 21 Sep 2006 14:04:55 +0200
Subject: [Pinot-svn] r490 - in trunk: . UI
Message-ID: <200609211204.k8LC4tEt002952@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-21 14:04:54 +0200 (Thu, 21 Sep 2006)
New Revision: 490

Added:
   trunk/UI/pinot-live.py
Removed:
   trunk/UI/pinot-deskbar.py
Modified:
   trunk/Makefile.am
   trunk/pinot.spec.in
Log:
Renamed deskbar plugin to pinot-live.py


Modified: trunk/Makefile.am
===================================================================
--- trunk/Makefile.am	2006-09-20 14:24:47 UTC (rev 489)
+++ trunk/Makefile.am	2006-09-21 12:04:54 UTC (rev 490)
@@ -12,7 +12,7 @@
 	UI/GTK2/src/pinot-dbus-daemon.xml UI/GTK2/src/de.berlios.Pinot.service \
 	UI/GTK2/xapian-powered.png UI/GTK2/pinot.png \
 	UI/GTK2/metase-gtk2.glade UI/GTK2/metase-gtk2.gladep \
-	UI/pinot-deskbar.py
+	UI/pinot-live.py
 
 man_MANS = Collect/pinot-collect.1 Index/pinot-index.1 Search/pinot-search.1 \
 	UI/GTK2/src/pinot.1 UI/GTK2/src/pinot-dbus-daemon.1
@@ -38,7 +38,7 @@
 	$(mkinstalldirs) $(DESTDIR)$(datadir)/applications
 	@desktop-file-install --vendor Amra --dir $(DESTDIR)$(datadir)/applications pinot.desktop
 	$(mkinstalldirs) $(DESTDIR)$(libdir)/deskbar-applet/handlers/
-	$(INSTALL_DATA) UI/pinot-deskbar.py $(DESTDIR)$(libdir)/deskbar-applet/handlers/
+	$(INSTALL_DATA) UI/pinot-live.py $(DESTDIR)$(libdir)/deskbar-applet/handlers/
 
 ACLOCAL_AMFLAGS = -I m4
 

Deleted: trunk/UI/pinot-deskbar.py
===================================================================
--- trunk/UI/pinot-deskbar.py	2006-09-20 14:24:47 UTC (rev 489)
+++ trunk/UI/pinot-deskbar.py	2006-09-21 12:04:54 UTC (rev 490)
@@ -1,113 +0,0 @@
-import gnome
-
-import deskbar
-import deskbar.Handler, deskbar
-import gobject
-from gettext import gettext as _
-
-from os.path import expanduser
-HOME = expanduser ("~/")
-
-def _check_requirements ():
-	try:
-		import dbus
-		try :
-			if getattr(dbus, 'version', (0,0,0)) >= (0,41,0):
-				import dbus.glib
-		except:
-			return (deskbar.Handler.HANDLER_IS_NOT_APPLICABLE, "Python dbus.glib bindings not found.", None)
-		return (deskbar.Handler.HANDLER_IS_HAPPY, None, None)
-	except:
-		return (deskbar.Handler.HANDLER_IS_NOT_APPLICABLE, "Python dbus bindings not found.", None)
-	
-HANDLERS = {
-	"PinotFileSearchHandler" : {
-		"name": "Pinot",
-		"description": _("Search documents indexed by Pinot"),
-		"requirements" : _check_requirements,
-	}
-}
-
-class PinotFileMatch (deskbar.Match.Match):
-	def __init__(self, handler, name, url, mime_type, main_language, **args):
-		deskbar.Match.Match.__init__ (self, handler, **args)
-		# The mailbox scheme is specific to Pinot
-		self.url = url
-		url_scheme = self.url[:url.index("://")]
-		if url_scheme == "mailbox":
-			print "Mailbox hit: ", self.url
-			self.url = "file://" + url[len("mailbox://"):url.index('?')]
-			url_scheme = "file"
-
-		# Replace HOME with ~
-		file_path = self.url[self.url.index("://") + 3:]
-		if url_scheme == "file":
-			file_path = file_path.replace(HOME, "~/")
-			print "File hit: ", file_path
-
-		self.name = name + " (" + file_path + ")"
-		self.mime_type = mime_type
-		self.main_language = main_language
-		self._icon = deskbar.Utils.load_icon_for_file(self.url)
-
-	def get_verb(self):
-		return "%(name)s"
-
-	def action(self, text=None):
-		print "Opening Pinot hit: ", self.url
-		gnome.url_show (self.url)
-
-	def get_category (self):
-		return "files"
-
-class PinotFileSearchHandler(deskbar.Handler.SignallingHandler):
-	def __init__(self):
-		deskbar.Handler.SignallingHandler.__init__(self, ("system-search", "pinot"))
-
-		self.query_string = ""
-		self.results = []
-		self.results_count = 10
-
-		import dbus
-		# We have to do this or it won't work
-		if getattr(dbus, 'version', (0,0,0)) >= (0,41,0):
-			import dbus.glib
-		try:
-			# Set up the dbus connection
-			self.bus = dbus.SessionBus()
-			self.proxy_obj = self.bus.get_object('de.berlios.Pinot', '/de/berlios/Pinot')
-			self.pinot_iface = dbus.Interface(self.proxy_obj, 'de.berlios.Pinot')
-		except Exception, msg:
-			print 'Caught D-Bus exception: ', msg
-		self.set_delay (500)
-
-	def query (self, qstring, max):
-		print "SimpleQuery: ", qstring
-		doc_ids = []
-		try :
-			import dbus
-			doc_ids = self.pinot_iface.SimpleQuery (qstring, dbus.UInt32(max))
-		except Exception, msg:
-			print 'Caught D-Bus exception: ', msg
-		# Save the query's details
-		self.query_string = qstring
-		self.results = []
-		self.results_count = len(doc_ids)
-		try :
-			# Get the details of each hit
-			for doc_id in doc_ids:
-				print "Hit on document ", doc_id
-				self.pinot_iface.GetDocumentInfo (dbus.UInt32(doc_id),
-					reply_handler=self.__receive_hits, error_handler=self.__receive_error)
-		except Exception, msg:
-			print 'Caught exception: ', msg
-
-	def __receive_hits (self, name, url, mime_type, main_language):
-		self.results.append( PinotFileMatch(self, name, url, mime_type, main_language) )
-		print "Got hit ", len(self.results)
-		if len(self.results) == self.results_count:
-			self.emit_query_ready(self.query_string, self.results)
-
-	def __receive_error (self, error):
-		print 'D-Bus error: ', error
-

Copied: trunk/UI/pinot-live.py (from rev 463, trunk/UI/pinot-deskbar.py)

Modified: trunk/pinot.spec.in
===================================================================
--- trunk/pinot.spec.in	2006-09-20 14:24:47 UTC (rev 489)
+++ trunk/pinot.spec.in	2006-09-21 12:04:54 UTC (rev 490)
@@ -144,6 +144,6 @@
 
 %files deskbar
 %defattr(-, root, root, -)
-%{_libdir}/deskbar-applet/handlers/pinot-deskbar.py*
+%{_libdir}/deskbar-applet/handlers/pinot-live.py*
 
 %changelog



From fabricecolin at mail.berlios.de  Sat Sep 23 09:44:31 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Sat, 23 Sep 2006 09:44:31 +0200
Subject: [Pinot-svn] r491 - trunk/UI/GTK2/src
Message-ID: <200609230744.k8N7iVLZ020348@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-23 09:44:31 +0200 (Sat, 23 Sep 2006)
New Revision: 491

Modified:
   trunk/UI/GTK2/src/WorkerThreads.cpp
Log:
Don't set the status on stop().


Modified: trunk/UI/GTK2/src/WorkerThreads.cpp
===================================================================
--- trunk/UI/GTK2/src/WorkerThreads.cpp	2006-09-21 12:04:54 UTC (rev 490)
+++ trunk/UI/GTK2/src/WorkerThreads.cpp	2006-09-23 07:44:31 UTC (rev 491)
@@ -599,9 +599,6 @@
 bool IndexBrowserThread::stop(void)
 {
 	m_done = true;
-	m_status = _("Stopped browsing");
-	m_status += " ";
-	m_status += m_indexName;
 	return true;
 }
 
@@ -743,9 +740,6 @@
 bool QueryingThread::stop(void)
 {
 	m_done = true;
-	m_status = _("Stopped querying");
-	m_status += " ";
-	m_status += m_engineDisplayableName;
 	return true;
 }
 
@@ -847,9 +841,6 @@
 bool ExpandQueryThread::stop(void)
 {
 	m_done = true;
-	m_status = _("Stopped expanding");
-	m_status += " ";
-	m_status += m_queryProps.getName();
 	return true;
 }
 
@@ -907,7 +898,6 @@
 bool LabelUpdateThread::stop(void)
 {
 	m_done = true;
-	m_status = _("Stopped querying index labels");
 	return true;
 }
 
@@ -987,10 +977,6 @@
 bool DownloadingThread::stop(void)
 {
 	m_done = true;
-	m_status = _("Stopped retrieval of");
-	m_status += " ";
-	m_status += m_docInfo.getLocation();
-
 	return true;
 }
 
@@ -1081,9 +1067,6 @@
 	if (DownloadingThread::stop() == true)
 	{
 		m_done = true;
-		m_status = _("Stopped indexing");
-		m_status += " ";
-		m_status += m_docInfo.getLocation();
 		return true;
 	}
 
@@ -1293,7 +1276,6 @@
 bool UnindexingThread::stop(void)
 {
 	m_done = true;
-	m_status = _("Stopped unindexing document(s)");
 	return true;
 }
 
@@ -1404,10 +1386,6 @@
 bool UpdateDocumentThread::stop(void)
 {
 	m_done = true;
-	m_status = _("Stopped document update for");
-	m_status += " ";
-	m_status += m_docId;
-
 	return true;
 }
 
@@ -1494,8 +1472,6 @@
 {
 	m_done = true;
 	write(m_ctrlWritePipe, "Stop", 4);
-	m_status = _("Stopped monitoring");
-
 	return true;
 }
 
@@ -1732,10 +1708,6 @@
 bool DirectoryScannerThread::stop(void)
 {
 	m_done = true;
-	m_status = _("Stopped scanning");
-	m_status += " ";
-	m_status += m_dirName;
-
 	return true;
 }
 



From fabricecolin at mail.berlios.de  Sat Sep 23 15:21:34 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Sat, 23 Sep 2006 15:21:34 +0200
Subject: [Pinot-svn] r492 - trunk/UI/GTK2/src
Message-ID: <200609231321.k8NDLYdd022819@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-23 15:21:33 +0200 (Sat, 23 Sep 2006)
New Revision: 492

Modified:
   trunk/UI/GTK2/src/WorkerThreads.cpp
Log:
Cosmetic change.


Modified: trunk/UI/GTK2/src/WorkerThreads.cpp
===================================================================
--- trunk/UI/GTK2/src/WorkerThreads.cpp	2006-09-23 07:44:31 UTC (rev 491)
+++ trunk/UI/GTK2/src/WorkerThreads.cpp	2006-09-23 13:21:33 UTC (rev 492)
@@ -864,9 +864,9 @@
 	// Run the query
 	if (pEngine->runQuery(m_queryProps) == false)
 	{
-		m_status = _("Couldn't expand");
+		m_status = _("Couldn't run query on search engine");
 		m_status += " ";
-		m_status += m_queryProps.getName();
+		m_status += m_engineName;
 	}
 	else
 	{



From fabricecolin at mail.berlios.de  Mon Sep 25 14:23:41 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Mon, 25 Sep 2006 14:23:41 +0200
Subject: [Pinot-svn] r494 - in trunk/UI/GTK2: . src
Message-ID: <200609251223.k8PCNfHL029296@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-25 14:23:40 +0200 (Mon, 25 Sep 2006)
New Revision: 494

Modified:
   trunk/UI/GTK2/metase-gtk2.glade
   trunk/UI/GTK2/src/prefsDialog_glade.cc
Log:
Label text change.


Modified: trunk/UI/GTK2/metase-gtk2.glade
===================================================================
--- trunk/UI/GTK2/metase-gtk2.glade	2006-09-25 12:22:17 UTC (rev 493)
+++ trunk/UI/GTK2/metase-gtk2.glade	2006-09-25 12:23:40 UTC (rev 494)
@@ -1506,7 +1506,7 @@
 	      <child>
 		<widget class="GtkLabel" id="directoriesLabel">
 		  <property name="visible">True</property>
-		  <property name="label" translatable="yes">These directories will be monitored and indexed:</property>
+		  <property name="label" translatable="yes">These directories will be indexed and optionally monitored for changes:</property>
 		  <property name="use_underline">False</property>
 		  <property name="use_markup">False</property>
 		  <property name="justify">GTK_JUSTIFY_LEFT</property>

Modified: trunk/UI/GTK2/src/prefsDialog_glade.cc
===================================================================
--- trunk/UI/GTK2/src/prefsDialog_glade.cc	2006-09-25 12:22:17 UTC (rev 493)
+++ trunk/UI/GTK2/src/prefsDialog_glade.cc	2006-09-25 12:23:40 UTC (rev 494)
@@ -94,7 +94,7 @@
    Gtk::HBox *labelsHbox = Gtk::manage(new class Gtk::HBox(false, 0));
    Gtk::VBox *labelsVbox = Gtk::manage(new class Gtk::VBox(false, 0));
    Gtk::Label *labelsLabel = Gtk::manage(new class Gtk::Label(_("Labels")));
-   Gtk::Label *directoriesLabel = Gtk::manage(new class Gtk::Label(_("These directories will be monitored and indexed:")));
+   Gtk::Label *directoriesLabel = Gtk::manage(new class Gtk::Label(_("These directories will be indexed and optionally monitored for changes:")));
    directoriesTreeview = Gtk::manage(new class Gtk::TreeView());
    
    Gtk::ScrolledWindow *directoriesScrolledwindow = Gtk::manage(new class Gtk::ScrolledWindow());



From fabricecolin at mail.berlios.de  Mon Sep 25 14:25:46 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Mon, 25 Sep 2006 14:25:46 +0200
Subject: [Pinot-svn] r495 - trunk/UI/GTK2/src
Message-ID: <200609251225.k8PCPkNp029418@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-25 14:25:45 +0200 (Mon, 25 Sep 2006)
New Revision: 495

Modified:
   trunk/UI/GTK2/src/Notebook.cpp
   trunk/UI/GTK2/src/Notebook.h
Log:
Further attempt at putting buttons in notebook tabs. This still doesn't work
correctly and is disabled. I'll have to revisit this later...


Modified: trunk/UI/GTK2/src/Notebook.cpp
===================================================================
--- trunk/UI/GTK2/src/Notebook.cpp	2006-09-25 12:23:40 UTC (rev 494)
+++ trunk/UI/GTK2/src/Notebook.cpp	2006-09-25 12:25:45 UTC (rev 495)
@@ -92,7 +92,9 @@
 	m_title(title),
 	m_pageType(type),
 	m_tabLabel(NULL),
+	m_tabImage(NULL),
 #if _USE_BUTTON_TAB
+	m_tabImageBox(NULL),
 	m_tabButton(NULL)
 #else
 	m_tabEventBox(NULL)
@@ -106,32 +108,31 @@
 	m_tabLabel = manage(new Label(title));
 	m_tabImage = manage(new Image(StockID("gtk-close"), IconSize(ICON_SIZE_MENU)));
 #if _USE_BUTTON_TAB
+	m_tabImageBox = manage(new HBox());
 	m_tabButton = manage(new Button());
 #else
 	m_tabEventBox = manage(new EventBox);
 #endif
 
-	m_tabLabel->set_alignment(0,0.5);
-	m_tabLabel->set_padding(0,0);
+	m_tabLabel->set_alignment(0, 0.5);
+	m_tabLabel->set_padding(0, 0);
 	m_tabLabel->set_justify(JUSTIFY_LEFT);
 	m_tabLabel->set_line_wrap(false);
 	m_tabLabel->set_use_markup(false);
 	m_tabLabel->set_selectable(false);
-	m_tabImage->set_alignment(0,0);
-	m_tabImage->set_padding(0,0);
+	m_tabImage->set_alignment(0, 0);
+	m_tabImage->set_padding(0, 0);
 #if _USE_BUTTON_TAB
-	m_tabButton->set_flags(CAN_FOCUS);
-	m_tabButton->set_flags(CAN_DEFAULT);
-	m_tabButton->add(*m_tabImage);
 	m_tabButton->set_relief(RELIEF_NONE);
 	m_tabButton->set_border_width(0);
-	m_tabButton->set_alignment(0,0);
+	m_tabButton->set_alignment(0, 0);
 	// Resize the button
 	if (gotDimensions == true)
 	{
-		m_tabButton->set_size_request(width, height);
-		m_tabButton->check_resize();
+		m_tabButton->set_size_request(width + 4, height + 4);
 	}
+	m_tabImageBox->pack_start(*m_tabImage, false, true);
+	m_tabButton->add(*m_tabImageBox);
 #else
 	m_tabEventBox->add(*m_tabImage);
 	m_tabEventBox->set_events(Gdk::BUTTON_PRESS_MASK);
@@ -147,6 +148,7 @@
 	m_tabLabel->show();
 	m_tabImage->show();
 #if _USE_BUTTON_TAB
+	m_tabImageBox->show();
 	m_tabButton->show();
 #else
 	m_tabEventBox->show();
@@ -174,7 +176,9 @@
 {
 	m_signalClose(m_title, m_pageType);
 
+#if !_USE_BUTTON_TAB
 	return true;
+#endif
 }
 
 //

Modified: trunk/UI/GTK2/src/Notebook.h
===================================================================
--- trunk/UI/GTK2/src/Notebook.h	2006-09-25 12:23:40 UTC (rev 494)
+++ trunk/UI/GTK2/src/Notebook.h	2006-09-25 12:25:45 UTC (rev 495)
@@ -86,6 +86,7 @@
 		Gtk::Label *m_tabLabel;
 		Gtk::Image *m_tabImage;
 #if _USE_BUTTON_TAB
+		Gtk::HBox *m_tabImageBox;
 		Gtk::Button *m_tabButton;
 #else
 		Gtk::EventBox *m_tabEventBox;



From fabricecolin at mail.berlios.de  Mon Sep 25 14:26:55 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Mon, 25 Sep 2006 14:26:55 +0200
Subject: [Pinot-svn] r496 - trunk
Message-ID: <200609251226.k8PCQtVK029505@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-25 14:26:55 +0200 (Mon, 25 Sep 2006)
New Revision: 496

Modified:
   trunk/pinot.desktop
Log:
Modified Categories.


Modified: trunk/pinot.desktop
===================================================================
--- trunk/pinot.desktop	2006-09-25 12:25:45 UTC (rev 495)
+++ trunk/pinot.desktop	2006-09-25 12:26:55 UTC (rev 496)
@@ -10,5 +10,5 @@
 Icon=pinot.png
 Terminal=false
 Type=Application
-Categories=Application;Network;
+Categories=GTK;Core;Application;Network;Filesystem;
 Encoding=UTF-8



From fabricecolin at mail.berlios.de  Mon Sep 25 14:22:19 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Mon, 25 Sep 2006 14:22:19 +0200
Subject: [Pinot-svn] r493 - trunk/po
Message-ID: <200609251222.k8PCMJSl029171@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-25 14:22:17 +0200 (Mon, 25 Sep 2006)
New Revision: 493

Modified:
   trunk/po/es.po
   trunk/po/fr.po
Log:
Updated translations.


Modified: trunk/po/es.po
===================================================================
--- trunk/po/es.po	2006-09-23 13:21:33 UTC (rev 492)
+++ trunk/po/es.po	2006-09-25 12:22:17 UTC (rev 493)
@@ -1,15 +1,15 @@
-# es PO file for pinot.
-# Copyright (C) 2006 Fabrice Colin, Jes?s Tramullas
-# This file is distributed under the same license as the pinot package.
-# Jes?s Tramullas <jesus at tramullas.com>, 2006.
-# 
+# es PO file for pinot.
+# Copyright (C) 2006 Fabrice Colin, Jes?s Tramullas
+# This file is distributed under the same license as the pinot package.
+# Jes?s Tramullas <jesus at tramullas.com>, 2006.
+# 
 #, fuzzy
 msgid ""
 msgstr ""
 "Project-Id-Version: pinot 0.49\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2006-06-29 22:27+0800\n"
-"PO-Revision-Date: 2006-01-30 16:44+0800\n"
+"POT-Creation-Date: 2006-09-23 15:56+0800\n"
+"PO-Revision-Date: 2006-09-25 20:23+0800\n"
 "Last-Translator: Jes?s Tramullas <jesus at tramullas.com>\n"
 "Language-Team: es <jesus at tramullas.com>\n"
 "MIME-Version: 1.0\n"
@@ -24,86 +24,49 @@
 msgid "Current User"
 msgstr "Usuario"
 
-#: UI/GTK2/src/EnginesTree.cpp:339 UI/GTK2/src/mainWindow.cc:234
-#: UI/GTK2/src/mainWindow.cc:344 UI/GTK2/src/mainWindow.cc:347
-#: UI/GTK2/src/mainWindow.cc:573 UI/GTK2/src/mainWindow.cc:1165
-#: UI/GTK2/src/mainWindow.cc:1221 UI/GTK2/src/mainWindow.cc:1241
-#: UI/GTK2/src/mainWindow.cc:1276 UI/GTK2/src/mainWindow.cc:1800
-#: UI/GTK2/src/mainWindow.cc:1863 UI/GTK2/src/PinotSettings.cpp:216
-#: UI/GTK2/src/PinotSettings.cpp:1016 UI/GTK2/src/PinotSettings.cpp:1072
+#: UI/GTK2/src/EnginesTree.cpp:339 UI/GTK2/src/mainWindow.cc:186
+#: UI/GTK2/src/mainWindow.cc:304 UI/GTK2/src/mainWindow.cc:307
+#: UI/GTK2/src/mainWindow.cc:533 UI/GTK2/src/mainWindow.cc:1139
+#: UI/GTK2/src/mainWindow.cc:1181 UI/GTK2/src/mainWindow.cc:1201
+#: UI/GTK2/src/mainWindow.cc:1232 UI/GTK2/src/mainWindow.cc:1807
+#: UI/GTK2/src/PinotSettings.cpp:230 UI/GTK2/src/PinotSettings.cpp:1081
+#: UI/GTK2/src/PinotSettings.cpp:1137
+msgid "My Web Pages"
+msgstr "Mis Paginas Web"
+
+#: UI/GTK2/src/EnginesTree.cpp:340 UI/GTK2/src/mainWindow.cc:298
+#: UI/GTK2/src/mainWindow.cc:301 UI/GTK2/src/PinotSettings.cpp:231
+#: UI/GTK2/src/PinotSettings.cpp:1082 UI/GTK2/src/PinotSettings.cpp:1138
+#: UI/GTK2/src/prefsDialog_glade.cc:112
 msgid "My Documents"
 msgstr "Mis documentos"
 
-#: UI/GTK2/src/EnginesTree.cpp:343 UI/GTK2/src/mainWindow.cc:350
-#: UI/GTK2/src/mainWindow.cc:353 UI/GTK2/src/MboxHandler.cpp:200
-#: UI/GTK2/src/PinotSettings.cpp:217 UI/GTK2/src/PinotSettings.cpp:1017
-#: UI/GTK2/src/PinotSettings.cpp:1073 UI/GTK2/src/prefsDialog_glade.cc:112
-msgid "My Email"
-msgstr "Mi email"
-
-#: UI/GTK2/src/importDialog.cc:107
-msgid "File"
-msgstr "Fichero"
-
-#: UI/GTK2/src/importDialog.cc:110
-msgid "Directory"
-msgstr "Directorio"
-
-#: UI/GTK2/src/importDialog.cc:115 UI/GTK2/src/IndexTree.cpp:68
-#: UI/GTK2/src/ResultsTree.cpp:131
-msgid "URL"
-msgstr "URL"
-
-#: UI/GTK2/src/importDialog.cc:121 UI/GTK2/src/queryDialog.cc:91
+#: UI/GTK2/src/importDialog.cc:81 UI/GTK2/src/queryDialog.cc:91
 msgid "None"
 msgstr "Ninguno"
 
-#: UI/GTK2/src/importDialog.cc:362
-msgid "Document To Import"
-msgstr "Documento a importar"
-
-#: UI/GTK2/src/importDialog_glade.cc:68 UI/GTK2/src/indexDialog_glade.cc:68
+#: UI/GTK2/src/importDialog_glade.cc:67 UI/GTK2/src/indexDialog_glade.cc:68
 msgid "Location:"
 msgstr "Localizaci?n:"
 
-#: UI/GTK2/src/importDialog_glade.cc:69
+#: UI/GTK2/src/importDialog_glade.cc:68
 #: UI/GTK2/src/propertiesDialog_glade.cc:65
 msgid "Title:"
 msgstr "T?tulo:"
 
-#: UI/GTK2/src/importDialog_glade.cc:72 UI/GTK2/src/indexDialog_glade.cc:67
-msgid "Type:"
-msgstr "Tipo:"
-
-#: UI/GTK2/src/importDialog_glade.cc:74 UI/GTK2/src/indexDialog_glade.cc:64
-msgid "..."
-msgstr "..."
-
-#: UI/GTK2/src/importDialog_glade.cc:80
-msgid "Depth:"
-msgstr "Profundidad:"
-
-#: UI/GTK2/src/importDialog_glade.cc:81
-msgid "Symlinks:"
-msgstr "Enlaces:"
-
-#: UI/GTK2/src/importDialog_glade.cc:82
-msgid "Follow symlinks"
-msgstr "Seguir los enlaces"
-
-#: UI/GTK2/src/importDialog_glade.cc:85
+#: UI/GTK2/src/importDialog_glade.cc:71
 msgid "Apply label:"
 msgstr "Etiqueta aplicada:"
 
-#: UI/GTK2/src/importDialog_glade.cc:90 UI/GTK2/src/mainWindow_glade.cc:213
+#: UI/GTK2/src/importDialog_glade.cc:77
 msgid "Import"
 msgstr "Importar"
 
-#: UI/GTK2/src/importDialog_glade.cc:199
-msgid "Import document"
-msgstr "Importar documento"
+#: UI/GTK2/src/importDialog_glade.cc:148 UI/GTK2/src/mainWindow_glade.cc:213
+msgid "Import URL"
+msgstr "Importar una URL"
 
-#: UI/GTK2/src/indexDialog.cc:221
+#: UI/GTK2/src/indexDialog.cc:223
 msgid "Index location"
 msgstr "Localizaci?n del ?ndice"
 
@@ -111,6 +74,14 @@
 msgid "Name:"
 msgstr "Nombre:"
 
+#: UI/GTK2/src/indexDialog_glade.cc:64
+msgid "..."
+msgstr "..."
+
+#: UI/GTK2/src/indexDialog_glade.cc:67
+msgid "Type:"
+msgstr "Tipo:"
+
 #: UI/GTK2/src/indexDialog_glade.cc:69
 msgid "Port:"
 msgstr "Puerto:"
@@ -119,10 +90,14 @@
 msgid "External index"
 msgstr "?ndice externo"
 
-#: UI/GTK2/src/IndexTree.cpp:63 UI/GTK2/src/ResultsTree.cpp:121
+#: UI/GTK2/src/IndexTree.cpp:63 UI/GTK2/src/ResultsTree.cpp:131
 msgid "Title"
 msgstr "T?tulo"
 
+#: UI/GTK2/src/IndexTree.cpp:68 UI/GTK2/src/ResultsTree.cpp:141
+msgid "URL"
+msgstr "URL"
+
 #: UI/GTK2/src/IndexTree.cpp:73
 msgid "Timestamp"
 msgstr "Fecha"
@@ -139,214 +114,206 @@
 msgid "All labels"
 msgstr "Todas las etiquetas"
 
-#: UI/GTK2/src/mainWindow.cc:169
+#: UI/GTK2/src/mainWindow.cc:131
 msgid "Query Name"
 msgstr "Nombre de la b?squeda"
 
-#: UI/GTK2/src/mainWindow.cc:174
+#: UI/GTK2/src/mainWindow.cc:136
 msgid "Last Run"
 msgstr "?ltima ejecuci?n"
 
-#: UI/GTK2/src/mainWindow.cc:179
+#: UI/GTK2/src/mainWindow.cc:141
 msgid "Summary"
 msgstr "Sumario"
 
-#: UI/GTK2/src/mainWindow.cc:212
+#: UI/GTK2/src/mainWindow.cc:174
 msgid "Add index"
 msgstr "A?adir ?ndice"
 
-#: UI/GTK2/src/mainWindow.cc:213
+#: UI/GTK2/src/mainWindow.cc:175
 msgid "Remove index"
 msgstr "Borrar ?ndice"
 
-#: UI/GTK2/src/mainWindow.cc:229
+#: UI/GTK2/src/mainWindow.cc:181
 msgid "Ready"
 msgstr "Listo"
 
-#: UI/GTK2/src/mainWindow.cc:273
+#: UI/GTK2/src/mainWindow.cc:227
 msgid "N/A"
 msgstr "Desconocido"
 
-#: UI/GTK2/src/mainWindow.cc:283
+#: UI/GTK2/src/mainWindow.cc:237
 msgid "<undefined>"
 msgstr "<indefinido>"
 
-#: UI/GTK2/src/mainWindow.cc:502
+#: UI/GTK2/src/mainWindow.cc:456
 msgid "Result location is"
 msgstr "La localizaci?n del resultado es"
 
-#: UI/GTK2/src/mainWindow.cc:583
+#: UI/GTK2/src/mainWindow.cc:543
 msgid "Document location is"
 msgstr "La localizaci?n del documento es"
 
-#: UI/GTK2/src/mainWindow.cc:900
+#: UI/GTK2/src/mainWindow.cc:861
 msgid "Showing"
 msgstr "Mostrando"
 
-#: UI/GTK2/src/mainWindow.cc:905
-msgid "off"
-msgstr "desactivado"
+#: UI/GTK2/src/mainWindow.cc:866
+msgid "of"
+msgstr "documentos"
 
-#: UI/GTK2/src/mainWindow.cc:910
+#: UI/GTK2/src/mainWindow.cc:871
 msgid "documents, starting at"
 msgstr "documentos comenzando en"
 
-#: UI/GTK2/src/mainWindow.cc:946
+#: UI/GTK2/src/mainWindow.cc:907
 msgid "Query"
 msgstr "B?squeda"
 
-#: UI/GTK2/src/mainWindow.cc:950 UI/GTK2/src/mainWindow.cc:2929
+#: UI/GTK2/src/mainWindow.cc:911 UI/GTK2/src/mainWindow.cc:2849
 msgid "on"
 msgstr "en"
 
-#: UI/GTK2/src/mainWindow.cc:954
+#: UI/GTK2/src/mainWindow.cc:915
 msgid "ended"
 msgstr "finalizado"
 
-#: UI/GTK2/src/mainWindow.cc:1032
+#: UI/GTK2/src/mainWindow.cc:1004
 msgid "More Like"
 msgstr "M?s como"
 
-#: UI/GTK2/src/mainWindow.cc:1094
+#: UI/GTK2/src/mainWindow.cc:1065
 msgid "Updated label(s)"
 msgstr "Etiqueta(s) actualizada(s)"
 
-#: UI/GTK2/src/mainWindow.cc:1175
+#: UI/GTK2/src/mainWindow.cc:1149
 msgid "Updated document"
 msgstr "Documento actualizado"
 
-#: UI/GTK2/src/mainWindow.cc:1190
+#: UI/GTK2/src/mainWindow.cc:1162
 msgid "Indexed"
 msgstr "Indizado"
 
-#: UI/GTK2/src/mainWindow.cc:1242
+#: UI/GTK2/src/mainWindow.cc:1202
 msgid "Unindexed document(s)"
 msgstr "Documento(s) no indizado(s)"
 
-#: UI/GTK2/src/mainWindow.cc:1287
+#: UI/GTK2/src/mainWindow.cc:1243
 msgid "Updated document properties"
 msgstr "Propiedades del documento actualizadas"
 
-#: UI/GTK2/src/mainWindow.cc:1334
+#: UI/GTK2/src/mainWindow.cc:1290
 msgid "Couldn't rename index, name"
 msgstr "No se pudo renombrar ?ndice, nombre"
 
-#: UI/GTK2/src/mainWindow.cc:1338 UI/GTK2/src/mainWindow.cc:2232
-#: UI/GTK2/src/mainWindow.cc:2763
+#: UI/GTK2/src/mainWindow.cc:1294 UI/GTK2/src/mainWindow.cc:2184
+#: UI/GTK2/src/mainWindow.cc:2683
 msgid "is already in use"
 msgstr "ya est? en uso"
 
-#: UI/GTK2/src/mainWindow.cc:1351
+#: UI/GTK2/src/mainWindow.cc:1307
 msgid "Couldn't rename index"
 msgstr "No se pudo renombrar el ?ndice"
 
-#: UI/GTK2/src/mainWindow.cc:1364
+#: UI/GTK2/src/mainWindow.cc:1320
 msgid "Edited index"
 msgstr "?ndice editado"
 
-#: UI/GTK2/src/mainWindow.cc:1751 UI/GTK2/src/mainWindow.cc:2387
+#: UI/GTK2/src/mainWindow.cc:1689 UI/GTK2/src/mainWindow.cc:2341
 msgid "Live query"
 msgstr "B?squeda activa"
 
-#: UI/GTK2/src/mainWindow.cc:1776
+#: UI/GTK2/src/mainWindow.cc:1715
 msgid "Couldn't find query"
 msgstr "No se pudo a?adir la b?squeda"
 
-#: UI/GTK2/src/mainWindow.cc:1815 UI/GTK2/src/mainWindow.cc:1907
+#: UI/GTK2/src/mainWindow.cc:1759 UI/GTK2/src/mainWindow.cc:1851
 msgid "Please set a location for the index first"
 msgstr "Por favor, primero fije una localizaci?n para el ?ndice"
 
-#: UI/GTK2/src/mainWindow.cc:1854
-msgid "Import Document(s)"
-msgstr "Importar Documento(s)"
-
-#: UI/GTK2/src/mainWindow.cc:1980 UI/GTK2/src/WorkerThreads.cpp:425
-#: UI/GTK2/src/WorkerThreads.cpp:1172
+#: UI/GTK2/src/mainWindow.cc:1924 UI/GTK2/src/WorkerThreads.cpp:620
+#: UI/GTK2/src/WorkerThreads.cpp:1400
 msgid "Index"
 msgstr "?ndice"
 
-#: UI/GTK2/src/mainWindow.cc:1984 UI/GTK2/src/WorkerThreads.cpp:429
-#: UI/GTK2/src/WorkerThreads.cpp:1176
+#: UI/GTK2/src/mainWindow.cc:1928 UI/GTK2/src/WorkerThreads.cpp:624
+#: UI/GTK2/src/WorkerThreads.cpp:1404
 msgid "doesn't exist"
 msgstr "no existe"
 
-#: UI/GTK2/src/mainWindow.cc:2120
+#: UI/GTK2/src/mainWindow.cc:2072
 msgid "Remove this document from the index ?"
 msgstr "?Borrar este documento del ?ndice?"
 
-#: UI/GTK2/src/mainWindow.cc:2139
+#: UI/GTK2/src/mainWindow.cc:2091
 msgid "Remove these documents from the index ?"
 msgstr "?Borrar este documento del ?ndice?"
 
-#: UI/GTK2/src/mainWindow.cc:2183
+#: UI/GTK2/src/mainWindow.cc:2135
 msgid "A metasearch tool for the Free Desktop"
 msgstr "Una herramienta metabuscador para el escritorio libre"
 
-#: UI/GTK2/src/mainWindow.cc:2184
+#: UI/GTK2/src/mainWindow.cc:2136
 msgid "(C) 2005-2006 Fabrice Colin"
 msgstr "(C) 2005-2006 Fabrice Colin"
 
-#: UI/GTK2/src/mainWindow.cc:2228
+#: UI/GTK2/src/mainWindow.cc:2180
 msgid "Index name"
 msgstr "Nombre del ?ndice"
 
-#: UI/GTK2/src/mainWindow.cc:2243
+#: UI/GTK2/src/mainWindow.cc:2195
 msgid "Couldn't add index"
 msgstr "No se pudo a?adir el ?ndice"
 
-#: UI/GTK2/src/mainWindow.cc:2257
+#: UI/GTK2/src/mainWindow.cc:2209
 msgid "Added new index"
 msgstr "A?adido un nuevo ?ndice"
 
-#: UI/GTK2/src/mainWindow.cc:2292
+#: UI/GTK2/src/mainWindow.cc:2244
 msgid "Couldn't remove index"
 msgstr "No se pudo borrar el ?ndice"
 
-#: UI/GTK2/src/mainWindow.cc:2544
+#: UI/GTK2/src/mainWindow.cc:2498
 msgid "At least one task hasn't completed yet. Quit now ?"
 msgstr "Al menos una tarea no ha finalizado. ?Parar ahora?"
 
-#: UI/GTK2/src/mainWindow.cc:2759
+#: UI/GTK2/src/mainWindow.cc:2679
 msgid "Query name"
 msgstr "Nombre la b?squeda"
 
-#: UI/GTK2/src/mainWindow.cc:2786
+#: UI/GTK2/src/mainWindow.cc:2706
 msgid "Couldn't update query"
 msgstr "No se pudo actualizar la b?squeda"
 
-#: UI/GTK2/src/mainWindow.cc:2794
+#: UI/GTK2/src/mainWindow.cc:2714
 msgid "Edited query"
 msgstr "B?squeda editada"
 
-#: UI/GTK2/src/mainWindow.cc:2801
+#: UI/GTK2/src/mainWindow.cc:2721
 msgid "Couldn't add query"
 msgstr "No se pudo a?adir la b?squeda"
 
-#: UI/GTK2/src/mainWindow.cc:2809
+#: UI/GTK2/src/mainWindow.cc:2729
 msgid "Added new query"
 msgstr "A?adida una nueva b?squeda"
 
-#: UI/GTK2/src/mainWindow.cc:2823
+#: UI/GTK2/src/mainWindow.cc:2743
 msgid "Query is not set"
 msgstr "B?squeda no definida"
 
-#: UI/GTK2/src/mainWindow.cc:2834
+#: UI/GTK2/src/mainWindow.cc:2754
 msgid "No search engine selected"
 msgstr "Motor de b?squeda no seleccionado"
 
-#: UI/GTK2/src/mainWindow.cc:2916
+#: UI/GTK2/src/mainWindow.cc:2836
 msgid "Please set the Google API key first"
 msgstr "Por favor, primero configure el API de Google"
 
-#: UI/GTK2/src/mainWindow.cc:2925
+#: UI/GTK2/src/mainWindow.cc:2845
 msgid "Running query"
 msgstr "Ejecutando la b?squeda"
 
-#: UI/GTK2/src/mainWindow.cc:3049
-msgid "is already indexed or is being indexed"
-msgstr "ya ha sido indizado, o se est? indizando"
-
-#: UI/GTK2/src/mainWindow.cc:3147
+#: UI/GTK2/src/mainWindow.cc:3004
 msgid "No default application defined for type"
 msgstr "No hay aplicaci?n predefinida para el tipo"
 
@@ -443,99 +410,95 @@
 msgid "Pinot"
 msgstr "Pinot"
 
-#: UI/GTK2/src/pinot.cc:156
+#: UI/GTK2/src/pinot.cc:164 UI/GTK2/src/pinot-dbus-daemon.cc:681
 msgid "Unknown"
 msgstr "Desconocido"
 
-#: UI/GTK2/src/pinot.cc:157
+#: UI/GTK2/src/pinot.cc:165 UI/GTK2/src/pinot-dbus-daemon.cc:682
 msgid "Danish"
 msgstr "Dan?s"
 
-#: UI/GTK2/src/pinot.cc:158
+#: UI/GTK2/src/pinot.cc:166 UI/GTK2/src/pinot-dbus-daemon.cc:683
 msgid "Dutch"
 msgstr "Holand?s"
 
-#: UI/GTK2/src/pinot.cc:159
+#: UI/GTK2/src/pinot.cc:167 UI/GTK2/src/pinot-dbus-daemon.cc:684
 msgid "English"
 msgstr "Ingl?s"
 
-#: UI/GTK2/src/pinot.cc:160
+#: UI/GTK2/src/pinot.cc:168 UI/GTK2/src/pinot-dbus-daemon.cc:685
 msgid "Finnish"
 msgstr "Finland?s"
 
-#: UI/GTK2/src/pinot.cc:161
+#: UI/GTK2/src/pinot.cc:169 UI/GTK2/src/pinot-dbus-daemon.cc:686
 msgid "French"
 msgstr "Franc?s"
 
-#: UI/GTK2/src/pinot.cc:162
+#: UI/GTK2/src/pinot.cc:170 UI/GTK2/src/pinot-dbus-daemon.cc:687
 msgid "German"
 msgstr "Alem?n"
 
-#: UI/GTK2/src/pinot.cc:163
+#: UI/GTK2/src/pinot.cc:171 UI/GTK2/src/pinot-dbus-daemon.cc:688
 msgid "Italian"
 msgstr "Italiano"
 
-#: UI/GTK2/src/pinot.cc:164
+#: UI/GTK2/src/pinot.cc:172 UI/GTK2/src/pinot-dbus-daemon.cc:689
 msgid "Norwegian"
 msgstr "Noruego"
 
-#: UI/GTK2/src/pinot.cc:165
+#: UI/GTK2/src/pinot.cc:173 UI/GTK2/src/pinot-dbus-daemon.cc:690
 msgid "Portuguese"
 msgstr "Portugu?s"
 
-#: UI/GTK2/src/pinot.cc:166
+#: UI/GTK2/src/pinot.cc:174 UI/GTK2/src/pinot-dbus-daemon.cc:691
 msgid "Russian"
 msgstr "Ruso"
 
-#: UI/GTK2/src/pinot.cc:167
+#: UI/GTK2/src/pinot.cc:175 UI/GTK2/src/pinot-dbus-daemon.cc:692
 msgid "Spanish"
 msgstr "Espa?ol"
 
-#: UI/GTK2/src/pinot.cc:168
+#: UI/GTK2/src/pinot.cc:176 UI/GTK2/src/pinot-dbus-daemon.cc:693
 msgid "Swedish"
 msgstr "Sueco"
 
-#: UI/GTK2/src/pinot.cc:192 UI/GTK2/src/pinot.cc:200
-msgid "Couldn't open index"
-msgstr "No se pudo abrir el ?ndice"
-
-#: UI/GTK2/src/pinot.cc:210
-msgid "Couldn't create history database"
-msgstr "No se pudo crear la base de datos del hist?rico"
-
-#: UI/GTK2/src/PinotSettings.cpp:222
+#: UI/GTK2/src/PinotSettings.cpp:236
 msgid "Important"
 msgstr "Importante"
 
-#: UI/GTK2/src/PinotSettings.cpp:223
+#: UI/GTK2/src/PinotSettings.cpp:237
 msgid "New"
 msgstr "Nuevo"
 
-#: UI/GTK2/src/PinotSettings.cpp:224
+#: UI/GTK2/src/PinotSettings.cpp:238
 msgid "Personal"
 msgstr "Personal"
 
-#: UI/GTK2/src/PinotSettings.cpp:852
+#: UI/GTK2/src/PinotSettings.cpp:911
 msgid "Unclassified"
 msgstr "No clasificado"
 
-#: UI/GTK2/src/prefsDialog.cc:60
+#: UI/GTK2/src/prefsDialog.cc:65
 msgid "Name"
 msgstr "Nombre"
 
-#: UI/GTK2/src/prefsDialog.cc:68
+#: UI/GTK2/src/prefsDialog.cc:73
+msgid "Monitor"
+msgstr "Supervisar"
+
+#: UI/GTK2/src/prefsDialog.cc:74 UI/GTK2/src/prefsDialog.cc:82
 msgid "Location"
 msgstr "Localizaci?n"
 
-#: UI/GTK2/src/prefsDialog.cc:69
-msgid "MIME Type"
-msgstr "Tipo MIME"
-
-#: UI/GTK2/src/prefsDialog.cc:266
+#: UI/GTK2/src/prefsDialog.cc:359
 msgid "New Label"
 msgstr "Nueva etiqueta"
 
-#: UI/GTK2/src/prefsDialog.cc:318 UI/GTK2/src/prefsDialog.cc:355
+#: UI/GTK2/src/prefsDialog.cc:411 UI/GTK2/src/prefsDialog.cc:442
+msgid "Directory to index"
+msgstr "Carpeta a indexar"
+
+#: UI/GTK2/src/prefsDialog.cc:487 UI/GTK2/src/prefsDialog.cc:522
 msgid "Mbox File Location"
 msgstr "Localizaci?n del fichero mbox"
 
@@ -572,6 +535,7 @@
 msgstr "Las etiquetas se usan para clasificar los documentos indizados:"
 
 #: UI/GTK2/src/prefsDialog_glade.cc:82 UI/GTK2/src/prefsDialog_glade.cc:102
+#: UI/GTK2/src/prefsDialog_glade.cc:118
 msgid "Add"
 msgstr "A?adir"
 
@@ -584,10 +548,18 @@
 msgstr "Etiquetas"
 
 #: UI/GTK2/src/prefsDialog_glade.cc:97
+msgid "These directories will be indexed and optionally monitored for changes:"
+msgstr "Estas carpetas van a estar indexar autom?ticamente"
+
+#: UI/GTK2/src/prefsDialog_glade.cc:113
 msgid "Mail boxes of type mbox can be monitored and indexed:"
 msgstr "Los buzones de correo de tipo mbox pueden ser controlados e indizados"
 
-#: UI/GTK2/src/prefsDialog_glade.cc:305
+#: UI/GTK2/src/prefsDialog_glade.cc:128
+msgid "My Email"
+msgstr "Mi email"
+
+#: UI/GTK2/src/prefsDialog_glade.cc:377
 msgid "Preferences"
 msgstr "Preferencias"
 
@@ -599,7 +571,7 @@
 msgid "Per document"
 msgstr "Documento"
 
-#: UI/GTK2/src/prorpertiesDialog_glade.cc:66
+#: UI/GTK2/src/propertiesDialog_glade.cc:66
 msgid "Language:"
 msgstr "Idioma:"
 
@@ -667,104 +639,72 @@
 msgid "Query parameters"
 msgstr "Par?metros de b?squeda"
 
-#: UI/GTK2/src/WorkerThreads.cpp:404
-msgid "Stopped browsing"
-msgstr "Exploraci?n detenida"
+#: UI/GTK2/src/ResultsTree.cpp:121
+msgid "Score"
+msgstr "Cuenta"
 
-#: UI/GTK2/src/WorkerThreads.cpp:437 UI/GTK2/src/WorkerThreads.cpp:668
-#: UI/GTK2/src/WorkerThreads.cpp:677 UI/GTK2/src/WorkerThreads.cpp:865
-#: UI/GTK2/src/WorkerThreads.cpp:1065 UI/GTK2/src/WorkerThreads.cpp:1184
+#: UI/GTK2/src/WorkerThreads.cpp:633 UI/GTK2/src/WorkerThreads.cpp:909
+#: UI/GTK2/src/WorkerThreads.cpp:918 UI/GTK2/src/WorkerThreads.cpp:1084
+#: UI/GTK2/src/WorkerThreads.cpp:1289 UI/GTK2/src/WorkerThreads.cpp:1413
 msgid "Index error on"
 msgstr "Error en el ?ndice"
 
-#: UI/GTK2/src/WorkerThreads.cpp:560
-msgid "Stopped querying"
-msgstr "B?squeda detenida"
-
-#: UI/GTK2/src/WorkerThreads.cpp:572
+#: UI/GTK2/src/WorkerThreads.cpp:752 UI/GTK2/src/WorkerThreads.cpp:853
 msgid "Couldn't create search engine"
 msgstr "No se pudo crear el motor de b?squeda"
 
-#: UI/GTK2/src/WorkerThreads.cpp:589
+#: UI/GTK2/src/WorkerThreads.cpp:764 UI/GTK2/src/WorkerThreads.cpp:867
 msgid "Couldn't run query on search engine"
 msgstr "No se pudo ejecutar la b?squeda contra el motor"
 
-#: UI/GTK2/src/WorkerThreads.cpp:605
+#: UI/GTK2/src/WorkerThreads.cpp:780
 msgid "No title"
 msgstr "Sin t?tulo"
 
-#: UI/GTK2/src/WorkerThreads.cpp:659
-msgid "Stopped querying index labels"
-msgstr "Detenida la b?squeda de etiquetas de ?ndice"
-
-#: UI/GTK2/src/WorkerThreads.cpp:736
-msgid "Stopped retrieval of"
-msgstr "Detenida la recuperaci?n de"
-
-#: UI/GTK2/src/WorkerThreads.cpp:770
+#: UI/GTK2/src/WorkerThreads.cpp:997
 msgid "Couldn't obtain downloader for protocol"
 msgstr "No se pudo usar un recuperador para el protocolo"
 
-#: UI/GTK2/src/WorkerThreads.cpp:782
+#: UI/GTK2/src/WorkerThreads.cpp:1008
 msgid "Couldn't retrieve"
 msgstr "No se pudo descargar"
 
-#: UI/GTK2/src/WorkerThreads.cpp:850
-msgid "Stopped indexing"
-msgstr "Detenida la indizaci?n"
-
-#: UI/GTK2/src/WorkerThreads.cpp:895
+#: UI/GTK2/src/WorkerThreads.cpp:1134
 msgid "Cannot index document type"
 msgstr "No se pudo indizar el tipo de documento"
 
-#: UI/GTK2/src/WorkerThreads.cpp:899
+#: UI/GTK2/src/WorkerThreads.cpp:1138
 msgid "at"
 msgstr "a"
 
-#: UI/GTK2/src/WorkerThreads.cpp:923
+#: UI/GTK2/src/WorkerThreads.cpp:1160
 msgid "Couldn't tokenize"
 msgstr "No se pudo extraer cadenas"
 
-#: UI/GTK2/src/WorkerThreads.cpp:943
+#: UI/GTK2/src/WorkerThreads.cpp:1180
 msgid "Robots META tag forbids indexing"
 msgstr "La etiqueta META Robots proh?be la indizaci?n"
 
-#: UI/GTK2/src/WorkerThreads.cpp:998
+#: UI/GTK2/src/WorkerThreads.cpp:1219
 msgid "Couldn't index"
 msgstr "No se pudo indizar"
 
-#: UI/GTK2/src/WorkerThreads.cpp:1053
-msgid "Stopped unindexing document(s)"
-msgstr "Detenida la des-indizaci?n de documento(s)"
-
-#: UI/GTK2/src/WorkerThreads.cpp:1072
+#: UI/GTK2/src/WorkerThreads.cpp:1300
 msgid "Couldn't unindex document(s)"
 msgstr "No se pudo des-indizar lo(s) documento(s)"
 
-#: UI/GTK2/src/WorkerThreads.cpp:1157
-msgid "Stopped document update for"
-msgstr "Detenida la actualizaci?n del documento por"
-
-#: UI/GTK2/src/WorkerThreads.cpp:1192
+#: UI/GTK2/src/WorkerThreads.cpp:1425
 msgid "Couldn't update document"
 msgstr "No se pudo actualizar el documento"
 
-#: UI/GTK2/src/WorkerThreads.cpp:1242
-msgid "Stopped monitoring"
-msgstr "Detenida la monitorizaci?n"
-
-#: UI/GTK2/src/WorkerThreads.cpp:1259
+#: UI/GTK2/src/WorkerThreads.cpp:1582
 msgid "No monitoring handler"
 msgstr "No hay monitorizaci?n"
 
-#: UI/GTK2/src/WorkerThreads.cpp:1311
+#: UI/GTK2/src/WorkerThreads.cpp:1624
 msgid "Couldn't initialize file monitor"
 msgstr "No se puede inicializar el monitor de archivo"
 
-#: UI/GTK2/src/WorkerThreads.cpp:1425
-msgid "Stopped scanning"
-msgstr "Detenida la exploraci?n"
-
-#: UI/GTK2/src/WorkerThreads.cpp:1583
+#: UI/GTK2/src/WorkerThreads.cpp:1900
 msgid "Couldn't open directory"
 msgstr "No se pudo abrir el directorio"

Modified: trunk/po/fr.po
===================================================================
--- trunk/po/fr.po	2006-09-23 13:21:33 UTC (rev 492)
+++ trunk/po/fr.po	2006-09-25 12:22:17 UTC (rev 493)
@@ -8,8 +8,8 @@
 msgstr ""
 "Project-Id-Version: pinot 0.49\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2006-06-29 22:27+0800\n"
-"PO-Revision-Date: 2006-01-20 19:44+0800\n"
+"POT-Creation-Date: 2006-09-23 15:56+0800\n"
+"PO-Revision-Date: 2006-09-25 20:23+0800\n"
 "Last-Translator: Fabrice Colin <colinf at chez.com>\n"
 "Language-Team: fr <colinf at chez.com>\n"
 "MIME-Version: 1.0\n"
@@ -24,86 +24,49 @@
 msgid "Current User"
 msgstr "Utilisateur"
 
-#: UI/GTK2/src/EnginesTree.cpp:339 UI/GTK2/src/mainWindow.cc:234
-#: UI/GTK2/src/mainWindow.cc:344 UI/GTK2/src/mainWindow.cc:347
-#: UI/GTK2/src/mainWindow.cc:573 UI/GTK2/src/mainWindow.cc:1165
-#: UI/GTK2/src/mainWindow.cc:1221 UI/GTK2/src/mainWindow.cc:1241
-#: UI/GTK2/src/mainWindow.cc:1276 UI/GTK2/src/mainWindow.cc:1800
-#: UI/GTK2/src/mainWindow.cc:1863 UI/GTK2/src/PinotSettings.cpp:216
-#: UI/GTK2/src/PinotSettings.cpp:1016 UI/GTK2/src/PinotSettings.cpp:1072
+#: UI/GTK2/src/EnginesTree.cpp:339 UI/GTK2/src/mainWindow.cc:186
+#: UI/GTK2/src/mainWindow.cc:304 UI/GTK2/src/mainWindow.cc:307
+#: UI/GTK2/src/mainWindow.cc:533 UI/GTK2/src/mainWindow.cc:1139
+#: UI/GTK2/src/mainWindow.cc:1181 UI/GTK2/src/mainWindow.cc:1201
+#: UI/GTK2/src/mainWindow.cc:1232 UI/GTK2/src/mainWindow.cc:1807
+#: UI/GTK2/src/PinotSettings.cpp:230 UI/GTK2/src/PinotSettings.cpp:1081
+#: UI/GTK2/src/PinotSettings.cpp:1137
+msgid "My Web Pages"
+msgstr "Mes Pages Web"
+
+#: UI/GTK2/src/EnginesTree.cpp:340 UI/GTK2/src/mainWindow.cc:298
+#: UI/GTK2/src/mainWindow.cc:301 UI/GTK2/src/PinotSettings.cpp:231
+#: UI/GTK2/src/PinotSettings.cpp:1082 UI/GTK2/src/PinotSettings.cpp:1138
+#: UI/GTK2/src/prefsDialog_glade.cc:112
 msgid "My Documents"
 msgstr "Mes Documents"
 
-#: UI/GTK2/src/EnginesTree.cpp:343 UI/GTK2/src/mainWindow.cc:350
-#: UI/GTK2/src/mainWindow.cc:353 UI/GTK2/src/MboxHandler.cpp:200
-#: UI/GTK2/src/PinotSettings.cpp:217 UI/GTK2/src/PinotSettings.cpp:1017
-#: UI/GTK2/src/PinotSettings.cpp:1073 UI/GTK2/src/prefsDialog_glade.cc:112
-msgid "My Email"
-msgstr "Mon Courrier"
-
-#: UI/GTK2/src/importDialog.cc:107
-msgid "File"
-msgstr "Fichier"
-
-#: UI/GTK2/src/importDialog.cc:110
-msgid "Directory"
-msgstr "Repertoire"
-
-#: UI/GTK2/src/importDialog.cc:115 UI/GTK2/src/IndexTree.cpp:68
-#: UI/GTK2/src/ResultsTree.cpp:131
-msgid "URL"
-msgstr "URL"
-
-#: UI/GTK2/src/importDialog.cc:121 UI/GTK2/src/queryDialog.cc:91
+#: UI/GTK2/src/importDialog.cc:81 UI/GTK2/src/queryDialog.cc:91
 msgid "None"
 msgstr "Aucune"
 
-#: UI/GTK2/src/importDialog.cc:362
-msgid "Document To Import"
-msgstr "Document A Importer"
-
-#: UI/GTK2/src/importDialog_glade.cc:68 UI/GTK2/src/indexDialog_glade.cc:68
+#: UI/GTK2/src/importDialog_glade.cc:67 UI/GTK2/src/indexDialog_glade.cc:68
 msgid "Location:"
 msgstr "Chemin:"
 
-#: UI/GTK2/src/importDialog_glade.cc:69
+#: UI/GTK2/src/importDialog_glade.cc:68
 #: UI/GTK2/src/propertiesDialog_glade.cc:65
 msgid "Title:"
 msgstr "Titre:"
 
-#: UI/GTK2/src/importDialog_glade.cc:72 UI/GTK2/src/indexDialog_glade.cc:67
-msgid "Type:"
-msgstr "Type:"
-
-#: UI/GTK2/src/importDialog_glade.cc:74 UI/GTK2/src/indexDialog_glade.cc:64
-msgid "..."
-msgstr "..."
-
-#: UI/GTK2/src/importDialog_glade.cc:80
-msgid "Depth:"
-msgstr "Profondeur:"
-
-#: UI/GTK2/src/importDialog_glade.cc:81
-msgid "Symlinks:"
-msgstr "Liens:"
-
-#: UI/GTK2/src/importDialog_glade.cc:82
-msgid "Follow symlinks"
-msgstr "Suivre les liens symboliques"
-
-#: UI/GTK2/src/importDialog_glade.cc:85
+#: UI/GTK2/src/importDialog_glade.cc:71
 msgid "Apply label:"
 msgstr "Appliquer l'etiquette:"
 
-#: UI/GTK2/src/importDialog_glade.cc:90 UI/GTK2/src/mainWindow_glade.cc:213
+#: UI/GTK2/src/importDialog_glade.cc:77
 msgid "Import"
 msgstr "Importer"
 
-#: UI/GTK2/src/importDialog_glade.cc:199
-msgid "Import document"
-msgstr "Import de document"
+#: UI/GTK2/src/importDialog_glade.cc:148 UI/GTK2/src/mainWindow_glade.cc:213
+msgid "Import URL"
+msgstr "Importer une URL"
 
-#: UI/GTK2/src/indexDialog.cc:221
+#: UI/GTK2/src/indexDialog.cc:223
 msgid "Index location"
 msgstr "Chemin de l'index"
 
@@ -111,6 +74,14 @@
 msgid "Name:"
 msgstr "Nom:"
 
+#: UI/GTK2/src/indexDialog_glade.cc:64
+msgid "..."
+msgstr "..."
+
+#: UI/GTK2/src/indexDialog_glade.cc:67
+msgid "Type:"
+msgstr "Type:"
+
 #: UI/GTK2/src/indexDialog_glade.cc:69
 msgid "Port:"
 msgstr "Port:"
@@ -119,10 +90,14 @@
 msgid "External index"
 msgstr "Index externe"
 
-#: UI/GTK2/src/IndexTree.cpp:63 UI/GTK2/src/ResultsTree.cpp:121
+#: UI/GTK2/src/IndexTree.cpp:63 UI/GTK2/src/ResultsTree.cpp:131
 msgid "Title"
 msgstr "Titre"
 
+#: UI/GTK2/src/IndexTree.cpp:68 UI/GTK2/src/ResultsTree.cpp:141
+msgid "URL"
+msgstr "URL"
+
 #: UI/GTK2/src/IndexTree.cpp:73
 msgid "Timestamp"
 msgstr "Date"
@@ -139,214 +114,206 @@
 msgid "All labels"
 msgstr "Toutes les etiquettes"
 
-#: UI/GTK2/src/mainWindow.cc:169
+#: UI/GTK2/src/mainWindow.cc:131
 msgid "Query Name"
 msgstr "Nom de la Recherche"
 
-#: UI/GTK2/src/mainWindow.cc:174
+#: UI/GTK2/src/mainWindow.cc:136
 msgid "Last Run"
 msgstr "Derniere Utilisation"
 
-#: UI/GTK2/src/mainWindow.cc:179
+#: UI/GTK2/src/mainWindow.cc:141
 msgid "Summary"
 msgstr "Sommaire"
 
-#: UI/GTK2/src/mainWindow.cc:212
+#: UI/GTK2/src/mainWindow.cc:174
 msgid "Add index"
 msgstr "Ajouter un index"
 
-#: UI/GTK2/src/mainWindow.cc:213
+#: UI/GTK2/src/mainWindow.cc:175
 msgid "Remove index"
 msgstr "Enlever un index"
 
-#: UI/GTK2/src/mainWindow.cc:229
+#: UI/GTK2/src/mainWindow.cc:181
 msgid "Ready"
 msgstr "Pret"
 
-#: UI/GTK2/src/mainWindow.cc:273
+#: UI/GTK2/src/mainWindow.cc:227
 msgid "N/A"
 msgstr "Inconnue"
 
-#: UI/GTK2/src/mainWindow.cc:283
+#: UI/GTK2/src/mainWindow.cc:237
 msgid "<undefined>"
 msgstr "<inconnu>"
 
-#: UI/GTK2/src/mainWindow.cc:502
+#: UI/GTK2/src/mainWindow.cc:456
 msgid "Result location is"
 msgstr "Le chemin du resultat est"
 
-#: UI/GTK2/src/mainWindow.cc:583
+#: UI/GTK2/src/mainWindow.cc:543
 msgid "Document location is"
 msgstr "Le chemin du document is"
 
-#: UI/GTK2/src/mainWindow.cc:900
+#: UI/GTK2/src/mainWindow.cc:861
 msgid "Showing"
-msgstr "Listant"
+msgstr ""
 
-#: UI/GTK2/src/mainWindow.cc:905
-msgid "off"
+#: UI/GTK2/src/mainWindow.cc:866
+msgid "of"
 msgstr "documents,"
 
-#: UI/GTK2/src/mainWindow.cc:910
+#: UI/GTK2/src/mainWindow.cc:871
 msgid "documents, starting at"
 msgstr "au total, a partir de"
 
-#: UI/GTK2/src/mainWindow.cc:946
+#: UI/GTK2/src/mainWindow.cc:907
 msgid "Query"
 msgstr "La recherche"
 
-#: UI/GTK2/src/mainWindow.cc:950 UI/GTK2/src/mainWindow.cc:2929
+#: UI/GTK2/src/mainWindow.cc:911 UI/GTK2/src/mainWindow.cc:2849
 msgid "on"
 msgstr "sur"
 
-#: UI/GTK2/src/mainWindow.cc:954
+#: UI/GTK2/src/mainWindow.cc:915
 msgid "ended"
 msgstr "est terminee"
 
-#: UI/GTK2/src/mainWindow.cc:1032
+#: UI/GTK2/src/mainWindow.cc:1004
 msgid "More Like"
 msgstr "Similaire a"
 
-#: UI/GTK2/src/mainWindow.cc:1094
+#: UI/GTK2/src/mainWindow.cc:1065
 msgid "Updated label(s)"
 msgstr "Mis a jour l(es) etiquette(s)"
 
-#: UI/GTK2/src/mainWindow.cc:1175
+#: UI/GTK2/src/mainWindow.cc:1149
 msgid "Updated document"
 msgstr "Mis a jour le document"
 
-#: UI/GTK2/src/mainWindow.cc:1190
+#: UI/GTK2/src/mainWindow.cc:1162
 msgid "Indexed"
 msgstr "Indexe"
 
-#: UI/GTK2/src/mainWindow.cc:1242
+#: UI/GTK2/src/mainWindow.cc:1202
 msgid "Unindexed document(s)"
 msgstr "Desindexe le(s) document(s)"
 
-#: UI/GTK2/src/mainWindow.cc:1287
+#: UI/GTK2/src/mainWindow.cc:1243
 msgid "Updated document properties"
 msgstr "Mis a jour les proprietes du document"
 
-#: UI/GTK2/src/mainWindow.cc:1334
+#: UI/GTK2/src/mainWindow.cc:1290
 msgid "Couldn't rename index, name"
 msgstr "N'a pas pu renommer l'index, le nom"
 
-#: UI/GTK2/src/mainWindow.cc:1338 UI/GTK2/src/mainWindow.cc:2232
-#: UI/GTK2/src/mainWindow.cc:2763
+#: UI/GTK2/src/mainWindow.cc:1294 UI/GTK2/src/mainWindow.cc:2184
+#: UI/GTK2/src/mainWindow.cc:2683
 msgid "is already in use"
 msgstr "est deja utilise"
 
-#: UI/GTK2/src/mainWindow.cc:1351
+#: UI/GTK2/src/mainWindow.cc:1307
 msgid "Couldn't rename index"
 msgstr "N'a pas pu renommer l'index"
 
-#: UI/GTK2/src/mainWindow.cc:1364
+#: UI/GTK2/src/mainWindow.cc:1320
 msgid "Edited index"
 msgstr "Edite l'index"
 
-#: UI/GTK2/src/mainWindow.cc:1751 UI/GTK2/src/mainWindow.cc:2387
+#: UI/GTK2/src/mainWindow.cc:1689 UI/GTK2/src/mainWindow.cc:2341
 msgid "Live query"
 msgstr "Recherche"
 
-#: UI/GTK2/src/mainWindow.cc:1776
+#: UI/GTK2/src/mainWindow.cc:1715
 msgid "Couldn't find query"
-msgstr "N'a pas pu trouver la recherche"
+msgstr "N'a pas pu trouver"
 
-#: UI/GTK2/src/mainWindow.cc:1815 UI/GTK2/src/mainWindow.cc:1907
+#: UI/GTK2/src/mainWindow.cc:1759 UI/GTK2/src/mainWindow.cc:1851
 msgid "Please set a location for the index first"
 msgstr "Donnez un chemin a l'index"
 
-#: UI/GTK2/src/mainWindow.cc:1854
-msgid "Import Document(s)"
-msgstr "Import de Document(s)"
-
-#: UI/GTK2/src/mainWindow.cc:1980 UI/GTK2/src/WorkerThreads.cpp:425
-#: UI/GTK2/src/WorkerThreads.cpp:1172
+#: UI/GTK2/src/mainWindow.cc:1924 UI/GTK2/src/WorkerThreads.cpp:620
+#: UI/GTK2/src/WorkerThreads.cpp:1400
 msgid "Index"
 msgstr "L'index"
 
-#: UI/GTK2/src/mainWindow.cc:1984 UI/GTK2/src/WorkerThreads.cpp:429
-#: UI/GTK2/src/WorkerThreads.cpp:1176
+#: UI/GTK2/src/mainWindow.cc:1928 UI/GTK2/src/WorkerThreads.cpp:624
+#: UI/GTK2/src/WorkerThreads.cpp:1404
 msgid "doesn't exist"
 msgstr "n'existe pas"
 
-#: UI/GTK2/src/mainWindow.cc:2120
+#: UI/GTK2/src/mainWindow.cc:2072
 msgid "Remove this document from the index ?"
 msgstr "Enlever ce document de l'index ?"
 
-#: UI/GTK2/src/mainWindow.cc:2139
+#: UI/GTK2/src/mainWindow.cc:2091
 msgid "Remove these documents from the index ?"
 msgstr "Enlever ces documents de l'index ?"
 
-#: UI/GTK2/src/mainWindow.cc:2183
+#: UI/GTK2/src/mainWindow.cc:2135
 msgid "A metasearch tool for the Free Desktop"
 msgstr "Un outil de recherche pour le Bureau Libre"
 
-#: UI/GTK2/src/mainWindow.cc:2184
+#: UI/GTK2/src/mainWindow.cc:2136
 msgid "(C) 2005-2006 Fabrice Colin"
 msgstr "(C) 2005-2006 Fabrice Colin"
 
-#: UI/GTK2/src/mainWindow.cc:2228
+#: UI/GTK2/src/mainWindow.cc:2180
 msgid "Index name"
 msgstr "Nom de l'index"
 
-#: UI/GTK2/src/mainWindow.cc:2243
+#: UI/GTK2/src/mainWindow.cc:2195
 msgid "Couldn't add index"
 msgstr "N'a pas pu ajouter l'index"
 
-#: UI/GTK2/src/mainWindow.cc:2257
+#: UI/GTK2/src/mainWindow.cc:2209
 msgid "Added new index"
 msgstr "Ajoute un nouvel index"
 
-#: UI/GTK2/src/mainWindow.cc:2292
+#: UI/GTK2/src/mainWindow.cc:2244
 msgid "Couldn't remove index"
 msgstr "N'a pas pu enlever l'index"
 
-#: UI/GTK2/src/mainWindow.cc:2544
+#: UI/GTK2/src/mainWindow.cc:2498
 msgid "At least one task hasn't completed yet. Quit now ?"
 msgstr "Au moins une tache n'est pas terminee. Quitter maintenant ?"
 
-#: UI/GTK2/src/mainWindow.cc:2759
+#: UI/GTK2/src/mainWindow.cc:2679
 msgid "Query name"
 msgstr "Nom de la recherche"
 
-#: UI/GTK2/src/mainWindow.cc:2786
+#: UI/GTK2/src/mainWindow.cc:2706
 msgid "Couldn't update query"
 msgstr "N'a pas pu mettre a jour la recherche"
 
-#: UI/GTK2/src/mainWindow.cc:2794
+#: UI/GTK2/src/mainWindow.cc:2714
 msgid "Edited query"
 msgstr "Edite la recherche"
 
-#: UI/GTK2/src/mainWindow.cc:2801
+#: UI/GTK2/src/mainWindow.cc:2721
 msgid "Couldn't add query"
 msgstr "N'a pas pu ajouter la recherche"
 
-#: UI/GTK2/src/mainWindow.cc:2809
+#: UI/GTK2/src/mainWindow.cc:2729
 msgid "Added new query"
 msgstr "Ajoute une nouvelle recherche"
 
-#: UI/GTK2/src/mainWindow.cc:2823
+#: UI/GTK2/src/mainWindow.cc:2743
 msgid "Query is not set"
 msgstr "Recherche indefinie"
 
-#: UI/GTK2/src/mainWindow.cc:2834
+#: UI/GTK2/src/mainWindow.cc:2754
 msgid "No search engine selected"
 msgstr "Pas de moteur selectionne"
 
-#: UI/GTK2/src/mainWindow.cc:2916
+#: UI/GTK2/src/mainWindow.cc:2836
 msgid "Please set the Google API key first"
 msgstr "Configurez la clef de l'API Google "
 
-#: UI/GTK2/src/mainWindow.cc:2925
+#: UI/GTK2/src/mainWindow.cc:2845
 msgid "Running query"
 msgstr "Recherche en cours"
 
-#: UI/GTK2/src/mainWindow.cc:3049
-msgid "is already indexed or is being indexed"
-msgstr "est deja indexe ou est en cours d'indexation"
-
-#: UI/GTK2/src/mainWindow.cc:3147
+#: UI/GTK2/src/mainWindow.cc:3004
 msgid "No default application defined for type"
 msgstr "Pas d'application definie pour le type"
 
@@ -364,7 +331,7 @@
 
 #: UI/GTK2/src/mainWindow_glade.cc:177
 msgid "Search Engine"
-msgstr "Moteurs"
+msgstr "Moteur"
 
 #: UI/GTK2/src/mainWindow_glade.cc:180
 msgid "Host Name"
@@ -443,99 +410,95 @@
 msgid "Pinot"
 msgstr "Pinot"
 
-#: UI/GTK2/src/pinot.cc:156
+#: UI/GTK2/src/pinot.cc:164 UI/GTK2/src/pinot-dbus-daemon.cc:681
 msgid "Unknown"
 msgstr "Inconnu"
 
-#: UI/GTK2/src/pinot.cc:157
+#: UI/GTK2/src/pinot.cc:165 UI/GTK2/src/pinot-dbus-daemon.cc:682
 msgid "Danish"
 msgstr "Danois"
 
-#: UI/GTK2/src/pinot.cc:158
+#: UI/GTK2/src/pinot.cc:166 UI/GTK2/src/pinot-dbus-daemon.cc:683
 msgid "Dutch"
 msgstr "Hollandais"
 
-#: UI/GTK2/src/pinot.cc:159
+#: UI/GTK2/src/pinot.cc:167 UI/GTK2/src/pinot-dbus-daemon.cc:684
 msgid "English"
 msgstr "Anglais"
 
-#: UI/GTK2/src/pinot.cc:160
+#: UI/GTK2/src/pinot.cc:168 UI/GTK2/src/pinot-dbus-daemon.cc:685
 msgid "Finnish"
 msgstr "Finlandais"
 
-#: UI/GTK2/src/pinot.cc:161
+#: UI/GTK2/src/pinot.cc:169 UI/GTK2/src/pinot-dbus-daemon.cc:686
 msgid "French"
 msgstr "Francais"
 
-#: UI/GTK2/src/pinot.cc:162
+#: UI/GTK2/src/pinot.cc:170 UI/GTK2/src/pinot-dbus-daemon.cc:687
 msgid "German"
 msgstr "Allemand"
 
-#: UI/GTK2/src/pinot.cc:163
+#: UI/GTK2/src/pinot.cc:171 UI/GTK2/src/pinot-dbus-daemon.cc:688
 msgid "Italian"
 msgstr "Italien"
 
-#: UI/GTK2/src/pinot.cc:164
+#: UI/GTK2/src/pinot.cc:172 UI/GTK2/src/pinot-dbus-daemon.cc:689
 msgid "Norwegian"
 msgstr "Norvegien"
 
-#: UI/GTK2/src/pinot.cc:165
+#: UI/GTK2/src/pinot.cc:173 UI/GTK2/src/pinot-dbus-daemon.cc:690
 msgid "Portuguese"
 msgstr "Portugais"
 
-#: UI/GTK2/src/pinot.cc:166
+#: UI/GTK2/src/pinot.cc:174 UI/GTK2/src/pinot-dbus-daemon.cc:691
 msgid "Russian"
 msgstr "Russe"
 
-#: UI/GTK2/src/pinot.cc:167
+#: UI/GTK2/src/pinot.cc:175 UI/GTK2/src/pinot-dbus-daemon.cc:692
 msgid "Spanish"
 msgstr "Espagnol"
 
-#: UI/GTK2/src/pinot.cc:168
+#: UI/GTK2/src/pinot.cc:176 UI/GTK2/src/pinot-dbus-daemon.cc:693
 msgid "Swedish"
 msgstr "Suedois"
 
-#: UI/GTK2/src/pinot.cc:192 UI/GTK2/src/pinot.cc:200
-msgid "Couldn't open index"
-msgstr "N'a pas pu ouvrir l'index"
-
-#: UI/GTK2/src/pinot.cc:210
-msgid "Couldn't create history database"
-msgstr "N'a pas pu creer la base d'historiques"
-
-#: UI/GTK2/src/PinotSettings.cpp:222
+#: UI/GTK2/src/PinotSettings.cpp:236
 msgid "Important"
 msgstr "Important"
 
-#: UI/GTK2/src/PinotSettings.cpp:223
+#: UI/GTK2/src/PinotSettings.cpp:237
 msgid "New"
 msgstr "Nouveau"
 
-#: UI/GTK2/src/PinotSettings.cpp:224
+#: UI/GTK2/src/PinotSettings.cpp:238
 msgid "Personal"
 msgstr "Personnel"
 
-#: UI/GTK2/src/PinotSettings.cpp:852
+#: UI/GTK2/src/PinotSettings.cpp:911
 msgid "Unclassified"
 msgstr "Sans classification"
 
-#: UI/GTK2/src/prefsDialog.cc:60
+#: UI/GTK2/src/prefsDialog.cc:65
 msgid "Name"
 msgstr "Nom"
 
-#: UI/GTK2/src/prefsDialog.cc:68
+#: UI/GTK2/src/prefsDialog.cc:73
+msgid "Monitor"
+msgstr "Surveiller"
+
+#: UI/GTK2/src/prefsDialog.cc:74 UI/GTK2/src/prefsDialog.cc:82
 msgid "Location"
 msgstr "Chemin"
 
-#: UI/GTK2/src/prefsDialog.cc:69
-msgid "MIME Type"
-msgstr "Type MIME"
-
-#: UI/GTK2/src/prefsDialog.cc:266
+#: UI/GTK2/src/prefsDialog.cc:359
 msgid "New Label"
 msgstr "Nouvelle Etiquette"
 
-#: UI/GTK2/src/prefsDialog.cc:318 UI/GTK2/src/prefsDialog.cc:355
+#: UI/GTK2/src/prefsDialog.cc:411 UI/GTK2/src/prefsDialog.cc:442
+msgid "Directory to index"
+msgstr "Repertoire a indexer"
+
+#: UI/GTK2/src/prefsDialog.cc:487 UI/GTK2/src/prefsDialog.cc:522
 msgid "Mbox File Location"
 msgstr "Chemin du Fichier mbox"
 
@@ -572,6 +535,7 @@
 msgstr "Les etiquettes servent a classer les documents:"
 
 #: UI/GTK2/src/prefsDialog_glade.cc:82 UI/GTK2/src/prefsDialog_glade.cc:102
+#: UI/GTK2/src/prefsDialog_glade.cc:118
 msgid "Add"
 msgstr "Ajouter"
 
@@ -584,10 +548,18 @@
 msgstr "Etiquettes"
 
 #: UI/GTK2/src/prefsDialog_glade.cc:97
+msgid "These directories will be indexed and optionally monitored for changes:"
+msgstr "Ces repertoires seront indexes automatiquement:"
+
+#: UI/GTK2/src/prefsDialog_glade.cc:113
 msgid "Mail boxes of type mbox can be monitored and indexed:"
 msgstr "Les boites de type mbox peuvent etre indexees"
 
-#: UI/GTK2/src/prefsDialog_glade.cc:305
+#: UI/GTK2/src/prefsDialog_glade.cc:128
+msgid "My Email"
+msgstr "Mon Courrier"
+
+#: UI/GTK2/src/prefsDialog_glade.cc:377
 msgid "Preferences"
 msgstr "Preferences"
 
@@ -667,104 +639,72 @@
 msgid "Query parameters"
 msgstr "Parametres de la recherche"
 
-#: UI/GTK2/src/WorkerThreads.cpp:404
-msgid "Stopped browsing"
-msgstr "Arrete de parcourir l'index"
+#: UI/GTK2/src/ResultsTree.cpp:121
+msgid "Score"
+msgstr "Score"
 
-#: UI/GTK2/src/WorkerThreads.cpp:437 UI/GTK2/src/WorkerThreads.cpp:668
-#: UI/GTK2/src/WorkerThreads.cpp:677 UI/GTK2/src/WorkerThreads.cpp:865
-#: UI/GTK2/src/WorkerThreads.cpp:1065 UI/GTK2/src/WorkerThreads.cpp:1184
+#: UI/GTK2/src/WorkerThreads.cpp:633 UI/GTK2/src/WorkerThreads.cpp:909
+#: UI/GTK2/src/WorkerThreads.cpp:918 UI/GTK2/src/WorkerThreads.cpp:1084
+#: UI/GTK2/src/WorkerThreads.cpp:1289 UI/GTK2/src/WorkerThreads.cpp:1413
 msgid "Index error on"
 msgstr "Erreur sur l'index"
 
-#: UI/GTK2/src/WorkerThreads.cpp:560
-msgid "Stopped querying"
-msgstr "Arrete la recherche"
-
-#: UI/GTK2/src/WorkerThreads.cpp:572
+#: UI/GTK2/src/WorkerThreads.cpp:752 UI/GTK2/src/WorkerThreads.cpp:853
 msgid "Couldn't create search engine"
 msgstr "N'a pas pu creer le moteur"
 
-#: UI/GTK2/src/WorkerThreads.cpp:589
+#: UI/GTK2/src/WorkerThreads.cpp:764 UI/GTK2/src/WorkerThreads.cpp:867
 msgid "Couldn't run query on search engine"
 msgstr "N'a pas pu lancer la recherche sur le moteur"
 
-#: UI/GTK2/src/WorkerThreads.cpp:605
+#: UI/GTK2/src/WorkerThreads.cpp:780
 msgid "No title"
 msgstr "Pas de titre"
 
-#: UI/GTK2/src/WorkerThreads.cpp:659
-msgid "Stopped querying index labels"
-msgstr "Arrete la recherche d'etiquettes"
-
-#: UI/GTK2/src/WorkerThreads.cpp:736
-msgid "Stopped retrieval of"
-msgstr "Arrete le telechargement de"
-
-#: UI/GTK2/src/WorkerThreads.cpp:770
+#: UI/GTK2/src/WorkerThreads.cpp:997
 msgid "Couldn't obtain downloader for protocol"
 msgstr "N'a pas pu obtenir un brouteur pour"
 
-#: UI/GTK2/src/WorkerThreads.cpp:782
+#: UI/GTK2/src/WorkerThreads.cpp:1008
 msgid "Couldn't retrieve"
 msgstr "N'a pas pu telecharger"
 
-#: UI/GTK2/src/WorkerThreads.cpp:850
-msgid "Stopped indexing"
-msgstr "Arrete l'indexation"
-
-#: UI/GTK2/src/WorkerThreads.cpp:895
+#: UI/GTK2/src/WorkerThreads.cpp:1134
 msgid "Cannot index document type"
 msgstr "Impossible d'indexer ce type de documents"
 
-#: UI/GTK2/src/WorkerThreads.cpp:899
+#: UI/GTK2/src/WorkerThreads.cpp:1138
 msgid "at"
 msgstr "a"
 
-#: UI/GTK2/src/WorkerThreads.cpp:923
+#: UI/GTK2/src/WorkerThreads.cpp:1160
 msgid "Couldn't tokenize"
 msgstr "N'a pas pu extraire les termes de"
 
-#: UI/GTK2/src/WorkerThreads.cpp:943
+#: UI/GTK2/src/WorkerThreads.cpp:1180
 msgid "Robots META tag forbids indexing"
 msgstr "Le META tag Robots interdit d'indexer"
 
-#: UI/GTK2/src/WorkerThreads.cpp:998
+#: UI/GTK2/src/WorkerThreads.cpp:1219
 msgid "Couldn't index"
 msgstr "N'a pas pu indexer"
 
-#: UI/GTK2/src/WorkerThreads.cpp:1053
-msgid "Stopped unindexing document(s)"
-msgstr "Arrete d'indexer les document(s)"
-
-#: UI/GTK2/src/WorkerThreads.cpp:1072
+#: UI/GTK2/src/WorkerThreads.cpp:1300
 msgid "Couldn't unindex document(s)"
 msgstr "N'a pas pu desindexer le(s) document(s)"
 
-#: UI/GTK2/src/WorkerThreads.cpp:1157
-msgid "Stopped document update for"
-msgstr "Arrete la mise a jour pour"
-
-#: UI/GTK2/src/WorkerThreads.cpp:1192
+#: UI/GTK2/src/WorkerThreads.cpp:1425
 msgid "Couldn't update document"
 msgstr "N'a pas pu mettre a jour le document"
 
-#: UI/GTK2/src/WorkerThreads.cpp:1242
-msgid "Stopped monitoring"
-msgstr "Arrete la surveillance"
-
-#: UI/GTK2/src/WorkerThreads.cpp:1259
+#: UI/GTK2/src/WorkerThreads.cpp:1582
 msgid "No monitoring handler"
 msgstr "Pas de moniteur"
 
-#: UI/GTK2/src/WorkerThreads.cpp:1311
+#: UI/GTK2/src/WorkerThreads.cpp:1624
 msgid "Couldn't initialize file monitor"
 msgstr "N'a pas pu initializer le moniteur de fichiers"
 
-#: UI/GTK2/src/WorkerThreads.cpp:1425
-msgid "Stopped scanning"
-msgstr "Arrete de scanner"
-
-#: UI/GTK2/src/WorkerThreads.cpp:1583
+#: UI/GTK2/src/WorkerThreads.cpp:1900
 msgid "Couldn't open directory"
 msgstr "N'a pas pu ouvrir le repertoire"



From fabricecolin at mail.berlios.de  Mon Sep 25 14:42:16 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Mon, 25 Sep 2006 14:42:16 +0200
Subject: [Pinot-svn] r497 - trunk
Message-ID: <200609251242.k8PCgGqg030718@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-25 14:42:13 +0200 (Mon, 25 Sep 2006)
New Revision: 497

Modified:
   trunk/NEWS
   trunk/README
Log:
Corrected name of Deskbar plugin in README.
Updated NEWS with missing items, set release date to today.


Modified: trunk/NEWS
===================================================================
--- trunk/NEWS	2006-09-25 12:26:55 UTC (rev 496)
+++ trunk/NEWS	2006-09-25 12:42:13 UTC (rev 497)
@@ -1,4 +1,4 @@
-??? version_0_6_0
+2006/09/25 version_0_6_0
 Build :
  - modifications for building on Cygwin, contributed by Reini Urban
 Monitor :
@@ -18,6 +18,7 @@
  - fixed abstract generation with remote indexes, and queries with OR'ed terms !
  - brought MozDex plugin back
 UI :
+ - show results scores
  - fixed language shown in the properties box when language is unknown
   for one or more of the documents selected
  - better at queuing document indexing
@@ -30,6 +31,8 @@
  - recursively monitors these locations for changes and updates the index
  - provides a DBus interface suitable for querying and document inspection
  - no dependency on gtkmm
+Deskbar Applet :
+ - plugin for Deskbar Applet that searches documents indexed by the daemon
 
 2006/07/05 version_0_5_0
 Tokenize :

Modified: trunk/README
===================================================================
--- trunk/README	2006-09-25 12:26:55 UTC (rev 496)
+++ trunk/README	2006-09-25 12:42:13 UTC (rev 497)
@@ -219,7 +219,7 @@
   Deskbar Applet provides an omnipresent versatile search interface for Gnome.
   Searching documents indexed by Pinot with the applet is possible. Users
   of RPM-based systems may install the pinot-desbar RPM. Otherwise, the
-  file UI/pinot-deskbar.py can simply be copied into
+  file UI/pinot-live.py can simply be copied into
   $PREFIX/lib/deskbar-applet/handlers (or, on 64 bit systems,
   $PREFIX/lib64/deskbar-applet/handlers) for use by all users, or into
   ~/.gnome2/deskbar-applet/handlers for use only by the current user.



From fabricecolin at mail.berlios.de  Wed Sep 27 13:51:17 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Wed, 27 Sep 2006 13:51:17 +0200
Subject: [Pinot-svn] r498 - tags
Message-ID: <200609271151.k8RBpH5f032273@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-27 13:51:17 +0200 (Wed, 27 Sep 2006)
New Revision: 498

Added:
   tags/version_0_6_0/
Log:
Finalizing release of v0.60.


Copied: tags/version_0_6_0 (from rev 497, trunk)



From fabricecolin at mail.berlios.de  Sat Sep 30 05:56:39 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Sat, 30 Sep 2006 05:56:39 +0200
Subject: [Pinot-svn] r499 - trunk
Message-ID: <200609300356.k8U3udd3014779@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-30 05:56:39 +0200 (Sat, 30 Sep 2006)
New Revision: 499

Modified:
   trunk/pinot.spec.in
Log:
dbus-glib, not dbus, is required on Fedora, while on SuSE it's dbus-1-glib.


Modified: trunk/pinot.spec.in
===================================================================
--- trunk/pinot.spec.in	2006-09-27 11:51:17 UTC (rev 498)
+++ trunk/pinot.spec.in	2006-09-30 03:56:39 UTC (rev 499)
@@ -1,4 +1,14 @@
 # @configure_input@
+%if "%{_vendor}" == "suse"
+%define pftotext_pkg xpdf-tools
+%define dbus_pkg dbus-1-glib
+%define dbus_dev_pkg dbus-1-devel
+%else
+%define pftotext_pkg poppler-utils
+%define dbus_pkg dbus-glib
+%define dbus_dev_pkg dbus-devel
+%endif
+
 Summary: Metasearch tool
 Name: @PACKAGE@
 Version: @VERSION@
@@ -9,9 +19,9 @@
 URL: http://pinot.berlios.de/
 BuildRoot: %{_tmppath}/%{name}-%{version}-%{release}-root
 Requires: xapian-core-libs >= 0.9.4, libtextcat >= 2.2, sqlite >= 3.1.2, curl >= 7.13, gmime >= 2.1
-Requires: gtkmm24 >= 2.6, libxml++ >= 2.12, dbus >= 0.60, shared-mime-info
+Requires: gtkmm24 >= 2.6, libxml++ >= 2.12, %{dbus_pkg} >= 0.60, shared-mime-info
 BuildRequires: xapian-core-devel >= 0.9.4, libtextcat-devel >= 2.2, sqlite-devel >= 3.1.2, curl-devel >= 7.13, gmime-devel >= 2.1, boost-devel >= 1.32
-BuildRequires: gtkmm24-devel >= 2.6, libxml++-devel >= 2.12, dbus-devel >= 0.60, gettext-devel, desktop-file-utils
+BuildRequires: gtkmm24-devel >= 2.6, libxml++-devel >= 2.12, %{dbus_dev_pkg} >= 0.60, gettext-devel, desktop-file-utils
 BuildRequires: taglib-devel >= 1.4
 %if 0%{?_with_soap:1}
 BuildRequires: gsoap
@@ -26,12 +36,7 @@
 Summary: Tokenizers for Pinot that handle various text document formats
 Group: Applications/Internet
 Requires: %{name} = %{version}
-Requires: unzip, antiword, unrtf
-%if "%{_vendor}" == "suse"
-Requires: xpdf-tools
-%else
-Requires: poppler-utils
-%endif
+Requires: unzip, antiword, unrtf, %{pftotext_pkg}
 Obsoletes: pinot-pdf, pinot-word
 
 %description text-docs 



From fabricecolin at mail.berlios.de  Sat Sep 30 06:47:18 2006
From: fabricecolin at mail.berlios.de (fabricecolin at BerliOS)
Date: Sat, 30 Sep 2006 06:47:18 +0200
Subject: [Pinot-svn] r500 - trunk/Search
Message-ID: <200609300447.k8U4lIYW022662@sheep.berlios.de>

Author: fabricecolin
Date: 2006-09-30 06:47:17 +0200 (Sat, 30 Sep 2006)
New Revision: 500

Modified:
   trunk/Search/OpenSearchParser.cpp
   trunk/Search/OpenSearchParser.h
Log:
Allow mozSearch plugins too as they are similar to OpenSearch Description, even
though most, if not all, will return results in text/html !


Modified: trunk/Search/OpenSearchParser.cpp
===================================================================
--- trunk/Search/OpenSearchParser.cpp	2006-09-30 03:56:39 UTC (rev 499)
+++ trunk/Search/OpenSearchParser.cpp	2006-09-30 04:47:17 UTC (rev 500)
@@ -319,8 +319,10 @@
 			return NULL;
 		}
 		// Check the top-level element is what we expect
+		// MozSearch is very much like OpenSearch Description
 		ustring rootNodeName = pRootElem->get_name();
-		if (rootNodeName != "OpenSearchDescription")
+		if ((rootNodeName != "OpenSearchDescription") &&
+			(rootNodeName != "SearchPlugin"))
 		{
 #ifdef DEBUG
 			cout << "OpenSearchParser::parse: wrong root node " << rootNodeName << endl;

Modified: trunk/Search/OpenSearchParser.h
===================================================================
--- trunk/Search/OpenSearchParser.h	2006-09-30 03:56:39 UTC (rev 499)
+++ trunk/Search/OpenSearchParser.h	2006-09-30 04:47:17 UTC (rev 500)
@@ -45,6 +45,8 @@
   * A parser for OpenSearch Description and Query Syntax, version 1.1.
   * See http://opensearch.a9.com/spec/1.1/description/
   * and http://opensearch.a9.com/spec/1.1/querysyntax/
+  * It can also parse MozSearch plugins.
+  * See http://developer.mozilla.org/en/docs/Creating_MozSearch_plugins
   */
 class OpenSearchParser : public PluginParserInterface
 {



