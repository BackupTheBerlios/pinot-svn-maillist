From fabricecolin at berlios.de  Thu Jun  1 13:28:53 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Thu, 1 Jun 2006 13:28:53 +0200
Subject: [Pinot-svn] r284 - in trunk: Search Tokenize
Message-ID: <200606011128.k51BSrPG002734@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-01 13:28:51 +0200 (Thu, 01 Jun 2006)
New Revision: 284

Modified:
   trunk/Search/pinot-search.cpp
   trunk/Tokenize/XmlTokenizer.cpp
Log:
Fixed stupid bug in stripTags(). Use it on the extract in pinot-search.


Modified: trunk/Search/pinot-search.cpp
===================================================================
--- trunk/Search/pinot-search.cpp	2006-05-31 16:11:24 UTC (rev 283)
+++ trunk/Search/pinot-search.cpp	2006-06-01 11:28:51 UTC (rev 284)
@@ -21,9 +21,10 @@
 #include <string>
 #include <fstream>
 
+#include "Url.h"
+#include "XmlTokenizer.h"
 #include "SearchEngineFactory.h"
 #include "DownloaderFactory.h"
-#include "Url.h"
 #include "config.h"
 
 using namespace std;
@@ -128,7 +129,7 @@
 				cout << count << " Host     : " << thisUrl.getHost() << endl;
 				cout << count << " Location : " << thisUrl.getLocation() << "/" << thisUrl.getFile() << endl;
 				cout << count << " Title    : " << resultIter->getTitle() << endl;
-				cout << count << " Extract  : " << resultIter->getExtract() << endl;
+				cout << count << " Extract  : " << XmlTokenizer::stripTags(resultIter->getExtract()) << endl;
 				cout << count << " Score    : " << resultIter->getScore() << endl;
 				count++;
 

Modified: trunk/Tokenize/XmlTokenizer.cpp
===================================================================
--- trunk/Tokenize/XmlTokenizer.cpp	2006-05-31 16:11:24 UTC (rev 283)
+++ trunk/Tokenize/XmlTokenizer.cpp	2006-06-01 11:28:51 UTC (rev 284)
@@ -75,11 +75,13 @@
 	while (startPos != string::npos)
 	{
 		string::size_type endPos = stripped.find(">", startPos);
-		if (endPos != string::npos)
+		if (endPos == string::npos)
 		{
-			stripped.erase(startPos, endPos - startPos + 1);
+			break;
 		}
 
+		stripped.erase(startPos, endPos - startPos + 1);
+
 		// Next
 		startPos = stripped.find("<");
 	}



From fabricecolin at berlios.de  Fri Jun  2 15:57:09 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Fri, 2 Jun 2006 15:57:09 +0200
Subject: [Pinot-svn] r285 - trunk/Tokenize
Message-ID: <200606021357.k52Dv9iq023466@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-02 15:57:08 +0200 (Fri, 02 Jun 2006)
New Revision: 285

Modified:
   trunk/Tokenize/HtmlTokenizer.cpp
   trunk/Tokenize/HtmlTokenizer.h
   trunk/Tokenize/PdfTokenizer.cpp
   trunk/Tokenize/RtfTokenizer.cpp
   trunk/Tokenize/TokenizerFactory.cpp
Log:
Various fixes. HtmlTokenizer can do validation without content extraction.


Modified: trunk/Tokenize/HtmlTokenizer.cpp
===================================================================
--- trunk/Tokenize/HtmlTokenizer.cpp	2006-06-01 11:28:51 UTC (rev 284)
+++ trunk/Tokenize/HtmlTokenizer.cpp	2006-06-02 13:57:08 UTC (rev 285)
@@ -128,13 +128,17 @@
 			{
 				metaContent = pAttributes[attrNum + 1];
 			}
+			else if (strncasecmp(pAttributes[attrNum], "http-equiv", 10) == 0)
+			{
+				metaName = pAttributes[attrNum + 1];
+			}
 		}
 
 		if ((metaName.empty() == false) &&
 			(metaContent.empty() == false))
 		{
 			// Store this META tag
-			pState->m_metaTags[metaName] = metaContent;
+			pState->m_metaTags[StringManip::toLowerCase(metaName)] = metaContent;
 		}
 	}
 	else if ((pState->m_inHead == true) &&
@@ -169,7 +173,7 @@
 			// FIXME: get the NodeInfo to find out the position of this link
 			pState->m_currentLink.m_startPos = pState->m_textPos;
 #ifdef DEBUG
-			cout << "HtmlTokenizer::parseHTML: link starts at position " << pState->m_textPos << endl;
+			cout << "HtmlTokenizer::startHandler: link starts at position " << pState->m_textPos << endl;
 #endif
 
 			// Find abstract ?
@@ -255,7 +259,7 @@
 			// FIXME: get the NodeInfo to find out the position of this link
 			pState->m_currentLink.m_endPos = pState->m_textPos;
 #ifdef DEBUG
-			cout << "HtmlTokenizer::parseHTML: link ends at position " << pState->m_textPos << endl;
+			cout << "HtmlTokenizer::endHandler: link ends at position " << pState->m_textPos << endl;
 #endif
 				
 			// Store this link
@@ -379,6 +383,17 @@
 
 static void errorHandler(void *pData, const char *pMsg, ...)
 {
+	if (pData == NULL)
+	{
+		return;
+	}
+
+	HtmlTokenizer::ParserState *pState = (HtmlTokenizer::ParserState *)pData;
+	if (pState == NULL)
+	{
+		return;
+	}
+
 	va_list args;
 	char pErr[1000];
 
@@ -390,6 +405,8 @@
 
 	// Be lenient as much as possible
 	xmlResetLastError();
+	// ...but remember the document had errors
+	pState->m_isValid = false;
 }
 
 static void warningHandler(void *pData, const char *pMsg, ...)
@@ -446,6 +463,7 @@
 }
 
 HtmlTokenizer::ParserState::ParserState() :
+	m_isValid(true),
 	m_findAbstract(false),
 	m_textPos(0),
 	m_inHead(false),
@@ -461,44 +479,36 @@
 {
 }
 
-HtmlTokenizer::HtmlTokenizer(const Document *pDocument, bool findAbstract) :
+HtmlTokenizer::HtmlTokenizer(const Document *pDocument,
+	bool validateOnly, bool findAbstract) :
 	Tokenizer(NULL)
 {
-	if (pDocument != NULL)
+	if (validateOnly == true)
 	{
-		unsigned int length = 0;
-		const char *pData = pDocument->getData(length);
-
+		// This will ensure text is skipped
+		++m_state.m_skip;
+	}
+	else
+	{
 		// Attempt to find an abstract ?
 		m_state.m_findAbstract = findAbstract;
+	}
 
-		if ((pData != NULL) &&
-			(length > 0) &&
-			(parseHTML(pData) == true))
+	if (parseHTML(pDocument) == true)
+	{
+		// Did we find a title ?
+		if (m_state.m_title.empty() == true)
 		{
-			// Append META keywords, if any were found
-			m_state.m_text += getMetaTag("keywords");
+			m_state.m_title = pDocument->getTitle();
+		}
 
-			// Did we find a title ?
-			if (m_state.m_title.empty() == true)
-			{
-				m_state.m_title = pDocument->getTitle();
-			}
+		// Pass the result to the parent class
+		Document *pStrippedDoc = new Document(m_state.m_title,
+			pDocument->getLocation(), pDocument->getType(),
+			pDocument->getLanguage());
+		pStrippedDoc->setData(m_state.m_text.c_str(), m_state.m_text.length());
 
-			// The text after the last link might make a good abstract
-			if (m_state.m_findAbstract == true)
-			{
-				getInBetweenLinksText(&m_state, m_state.m_currentLink.m_index);
-			}
-
-			// Pass the result to the parent class
-			Document *pStrippedDoc = new Document(m_state.m_title,
-				pDocument->getLocation(), pDocument->getType(),
-				pDocument->getLanguage());
-			pStrippedDoc->setData(m_state.m_text.c_str(), m_state.m_text.length());
-
-			setDocument(pStrippedDoc);
-		}
+		setDocument(pStrippedDoc);
 	}
 }
 
@@ -506,18 +516,22 @@
 {
 	if (m_pDocument != NULL)
 	{
-		// This should have been set by setDocument(),
-		// called in initialize()
+		// This should have been set by setDocument()
 		delete m_pDocument;
 	}
 }
 
-bool HtmlTokenizer::parseHTML(const string &str)
+bool HtmlTokenizer::parseHTML(const Document *pDocument)
 {
-	string htmlChunk(str);
-	htmlSAXHandler saxHandler;
+	if (pDocument == NULL)
+	{
+		return false;
+	}
 
-	if (str.empty() == true)
+	unsigned int dataLength = 0;
+	const char *pData = pDocument->getData(dataLength);
+	if ((pData == NULL) ||
+		(dataLength == 0))
 	{
 #ifdef DEBUG
 		cout << "HtmlTokenizer::parseHTML: no input" << endl;
@@ -525,6 +539,9 @@
 		return false;
 	}
 
+	string htmlChunk(pData, dataLength);
+	htmlSAXHandler saxHandler;
+
 	xmlInitParser();
 
 	// Setup the SAX handler
@@ -554,20 +571,6 @@
 #endif
 	}
 
-	// Wrap input with a dummy tag to avoid the characters handler being called with twice the same text
-	htmlPos = htmlChunk.find("<HTML");
-	if (htmlPos == string::npos)
-	{
-		htmlPos = htmlChunk.find("<html");
-	}
-	if (htmlPos == string::npos)
-	{
-		string dummyHtml("<html>");
-		dummyHtml += htmlChunk;
-		dummyHtml += "</html>";
-		htmlChunk = dummyHtml;
-	}
-
 #ifndef _DONT_USE_PUSH_INTERFACE
 	htmlParserCtxtPtr pContext = htmlCreatePushParserCtxt(&saxHandler, (void*)&m_state,
 		htmlChunk.c_str(), (int)htmlChunk.length(), "", XML_CHAR_ENCODING_NONE);
@@ -593,9 +596,24 @@
 	}
 	xmlCleanupParser();
 
+	// The text after the last link might make a good abstract
+	if (m_state.m_findAbstract == true)
+	{
+		getInBetweenLinksText(&m_state, m_state.m_currentLink.m_index);
+	}
+
+	// Append META keywords, if any were found
+	m_state.m_text += getMetaTag("keywords");
+
 	return true;
 }
 
+/// Determines whether the document is properly formed.
+bool HtmlTokenizer::isDocumentValid(void) const
+{
+	return m_state.m_isValid;
+}
+
 /// Gets the specified META tag content.
 string HtmlTokenizer::getMetaTag(const string &name) const
 {
@@ -604,7 +622,7 @@
 		return "";
 	}
 
-	map<string, string>::const_iterator iter = m_state.m_metaTags.find(name);
+	map<string, string>::const_iterator iter = m_state.m_metaTags.find(StringManip::toLowerCase(name));
 	if (iter != m_state.m_metaTags.end())
 	{
 		return iter->second;

Modified: trunk/Tokenize/HtmlTokenizer.h
===================================================================
--- trunk/Tokenize/HtmlTokenizer.h	2006-06-01 11:28:51 UTC (rev 284)
+++ trunk/Tokenize/HtmlTokenizer.h	2006-06-02 13:57:08 UTC (rev 285)
@@ -47,9 +47,13 @@
 class HtmlTokenizer : public Tokenizer
 {
 	public:
-		HtmlTokenizer(const Document *pDocument, bool findAbstract = false);
+		HtmlTokenizer(const Document *pDocument,
+			bool validateOnly, bool findAbstract = false);
 		virtual ~HtmlTokenizer();
 
+		/// Determines whether the document is properly formed.
+		bool isDocumentValid(void) const;
+
 		/// Gets the specified META tag content; an empty string if it wasn't found.
 		std::string getMetaTag(const std::string &name) const;
 
@@ -65,6 +69,7 @@
 				ParserState();
 				~ParserState();
 
+				bool m_isValid;
 				bool m_findAbstract;
 				unsigned int m_textPos;
 				std::string m_lastHash;
@@ -85,8 +90,10 @@
 
 	protected:
 		ParserState m_state;
+		bool m_isFragment;
+		std::string m_charset;
 
-		bool parseHTML(const std::string &str);
+		bool parseHTML(const Document *pDocument);
 
 };
 

Modified: trunk/Tokenize/PdfTokenizer.cpp
===================================================================
--- trunk/Tokenize/PdfTokenizer.cpp	2006-06-01 11:28:51 UTC (rev 284)
+++ trunk/Tokenize/PdfTokenizer.cpp	2006-06-02 13:57:08 UTC (rev 285)
@@ -38,8 +38,24 @@
 }
 
 PdfTokenizer::PdfTokenizer(const Document *pDocument) :
-	HtmlTokenizer(runHelperProgram(pDocument, "pdftohtml -stdout"))
+	HtmlTokenizer(NULL, false)
 {
+	Document *pHtmlDocument = runHelperProgram(pDocument, "pdftohtml -stdout");
+	if (pHtmlDocument != NULL)
+	{
+		if (parseHTML(pHtmlDocument) == true)
+		{
+			// Pass the result to the parent class
+			Document *pStrippedDoc = new Document(pHtmlDocument->getTitle(),
+				pHtmlDocument->getLocation(), pHtmlDocument->getType(),
+				pHtmlDocument->getLanguage());
+			pStrippedDoc->setData(m_state.m_text.c_str(), m_state.m_text.length());
+
+			setDocument(pStrippedDoc);
+		}
+
+		delete pHtmlDocument;
+	}
 }
 
 PdfTokenizer::~PdfTokenizer()

Modified: trunk/Tokenize/RtfTokenizer.cpp
===================================================================
--- trunk/Tokenize/RtfTokenizer.cpp	2006-06-01 11:28:51 UTC (rev 284)
+++ trunk/Tokenize/RtfTokenizer.cpp	2006-06-02 13:57:08 UTC (rev 285)
@@ -39,8 +39,24 @@
 }
 
 RtfTokenizer::RtfTokenizer(const Document *pDocument) :
-	HtmlTokenizer(runHelperProgram(pDocument, "unrtf --nopict --html"))
+	HtmlTokenizer(NULL, false)
 {
+	Document *pHtmlDocument = runHelperProgram(pDocument, "unrtf --nopict --html");
+	if (pHtmlDocument != NULL)
+	{
+		if (parseHTML(pHtmlDocument) == true)
+		{
+			// Pass the result to the parent class
+			Document *pStrippedDoc = new Document(pHtmlDocument->getTitle(),
+				pHtmlDocument->getLocation(), pHtmlDocument->getType(),
+				pHtmlDocument->getLanguage());
+			pStrippedDoc->setData(m_state.m_text.c_str(), m_state.m_text.length());
+
+			setDocument(pStrippedDoc);
+		}
+
+		delete pHtmlDocument;
+	}
 }
 
 RtfTokenizer::~RtfTokenizer()

Modified: trunk/Tokenize/TokenizerFactory.cpp
===================================================================
--- trunk/Tokenize/TokenizerFactory.cpp	2006-06-01 11:28:51 UTC (rev 284)
+++ trunk/Tokenize/TokenizerFactory.cpp	2006-06-02 13:57:08 UTC (rev 285)
@@ -240,7 +240,7 @@
 
 	if (typeOnly == "text/html")
 	{
-		return new HtmlTokenizer(pDocument);
+		return new HtmlTokenizer(pDocument, false);
 	}
 	else if (typeOnly == "text/plain")
 	{



From fabricecolin at berlios.de  Fri Jun  2 15:59:50 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Fri, 2 Jun 2006 15:59:50 +0200
Subject: [Pinot-svn] r286 - in trunk: Collect UI/GTK2/src
Message-ID: <200606021359.k52Dxoeu024133@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-02 15:59:47 +0200 (Fri, 02 Jun 2006)
New Revision: 286

Modified:
   trunk/Collect/CurlDownloader.cpp
   trunk/Collect/DownloaderInterface.cpp
   trunk/Collect/FileCollector.cpp
   trunk/UI/GTK2/src/EnginesTree.cpp
   trunk/UI/GTK2/src/IndexPage.cpp
   trunk/UI/GTK2/src/IndexTree.cpp
   trunk/UI/GTK2/src/ResultsTree.cpp
Log:
Removed unnecessary include.


Modified: trunk/Collect/CurlDownloader.cpp
===================================================================
--- trunk/Collect/CurlDownloader.cpp	2006-06-02 13:57:08 UTC (rev 285)
+++ trunk/Collect/CurlDownloader.cpp	2006-06-02 13:59:47 UTC (rev 286)
@@ -21,7 +21,6 @@
 
 #include <curl/curl.h>
 
-#include "HtmlTokenizer.h"
 #include "Url.h"
 #include "CurlDownloader.h"
 

Modified: trunk/Collect/DownloaderInterface.cpp
===================================================================
--- trunk/Collect/DownloaderInterface.cpp	2006-06-02 13:57:08 UTC (rev 285)
+++ trunk/Collect/DownloaderInterface.cpp	2006-06-02 13:59:47 UTC (rev 286)
@@ -19,7 +19,6 @@
 
 #include <openssl/crypto.h>
 
-#include "HtmlTokenizer.h"
 #include "DownloaderInterface.h"
 
 using namespace std;

Modified: trunk/Collect/FileCollector.cpp
===================================================================
--- trunk/Collect/FileCollector.cpp	2006-06-02 13:57:08 UTC (rev 285)
+++ trunk/Collect/FileCollector.cpp	2006-06-02 13:59:47 UTC (rev 286)
@@ -17,7 +17,6 @@
 #include <iostream>
 #include <algorithm>
 
-#include "HtmlTokenizer.h"
 #include "MIMEScanner.h"
 #include "Url.h"
 #include "FileCollector.h"

Modified: trunk/UI/GTK2/src/EnginesTree.cpp
===================================================================
--- trunk/UI/GTK2/src/EnginesTree.cpp	2006-06-02 13:57:08 UTC (rev 285)
+++ trunk/UI/GTK2/src/EnginesTree.cpp	2006-06-02 13:59:47 UTC (rev 286)
@@ -23,7 +23,6 @@
 #include <gtkmm/stock.h>
 #include <gtkmm/textbuffer.h>
 
-#include "HtmlTokenizer.h"
 #include "Url.h"
 #include "QueryHistory.h"
 #include "ViewHistory.h"

Modified: trunk/UI/GTK2/src/IndexPage.cpp
===================================================================
--- trunk/UI/GTK2/src/IndexPage.cpp	2006-06-02 13:57:08 UTC (rev 285)
+++ trunk/UI/GTK2/src/IndexPage.cpp	2006-06-02 13:59:47 UTC (rev 286)
@@ -20,7 +20,6 @@
 #include <gtkmm/stock.h>
 #include <gtkmm/textbuffer.h>
 
-#include "HtmlTokenizer.h"
 #include "QueryHistory.h"
 #include "ViewHistory.h"
 #include "config.h"

Modified: trunk/UI/GTK2/src/IndexTree.cpp
===================================================================
--- trunk/UI/GTK2/src/IndexTree.cpp	2006-06-02 13:57:08 UTC (rev 285)
+++ trunk/UI/GTK2/src/IndexTree.cpp	2006-06-02 13:59:47 UTC (rev 286)
@@ -18,7 +18,6 @@
 #include <gtkmm/stock.h>
 #include <gtkmm/textbuffer.h>
 
-#include "HtmlTokenizer.h"
 #include "QueryHistory.h"
 #include "ViewHistory.h"
 #include "config.h"

Modified: trunk/UI/GTK2/src/ResultsTree.cpp
===================================================================
--- trunk/UI/GTK2/src/ResultsTree.cpp	2006-06-02 13:57:08 UTC (rev 285)
+++ trunk/UI/GTK2/src/ResultsTree.cpp	2006-06-02 13:59:47 UTC (rev 286)
@@ -24,7 +24,6 @@
 #include <gtkmm/stock.h>
 #include <gtkmm/textbuffer.h>
 
-#include "HtmlTokenizer.h"
 #include "StringManip.h"
 #include "Url.h"
 #include "QueryHistory.h"



From fabricecolin at berlios.de  Fri Jun  2 16:05:28 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Fri, 2 Jun 2006 16:05:28 +0200
Subject: [Pinot-svn] r287 - trunk/Search
Message-ID: <200606021405.k52E5SKN028117@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-02 16:04:47 +0200 (Fri, 02 Jun 2006)
New Revision: 287

Modified:
   trunk/Search/SherlockParser.cpp
   trunk/Search/WebEngine.cpp
   trunk/Search/WebEngine.h
Log:
If necessary, WebEngine looks for a http-equiv META tag for Content-Type
to determine a page's charset.
SherlockParser wraps chunks to make them look like full-blown documents.


Modified: trunk/Search/SherlockParser.cpp
===================================================================
--- trunk/Search/SherlockParser.cpp	2006-06-02 13:59:47 UTC (rev 286)
+++ trunk/Search/SherlockParser.cpp	2006-06-02 14:04:47 UTC (rev 287)
@@ -322,8 +322,43 @@
 		if (strncasecmp(contentType.c_str(), "text/html", 9) == 0)
 		{
 			Document chunkDoc("", "", contentType, "");
-			chunkDoc.setData(resultItem.c_str(), resultItem.length());
-			HtmlTokenizer chunkTokens(&chunkDoc, true);
+			string htmlChunk(resultItem);
+
+			// The chunk may contain truncated tags, get rid of them !
+			string::size_type firstOpen = htmlChunk.find('<');
+			string::size_type firstClose = htmlChunk.find('>');
+			if (firstClose != string::npos)
+			{
+				if ((firstOpen == string::npos) ||
+					(firstClose < firstOpen))
+				{
+					htmlChunk.erase(0, firstClose + 1);
+				}
+			}
+			string::size_type lastClose = htmlChunk.find_last_of(">");
+			string::size_type lastOpen = htmlChunk.find_last_of("<");
+			if (lastOpen != string::npos)
+			{
+				if ((lastClose == string::npos) ||
+					(lastOpen > lastClose))
+				{
+					htmlChunk.erase(lastOpen);
+				}
+			}
+
+			// Wrap input
+			string dummyHtml("<html><head><meta HTTP-EQUIV=\"content-type\" CONTENT=\"");
+			dummyHtml += pResponseDoc->getType();
+			dummyHtml += "\"></head><body>";
+			dummyHtml += htmlChunk;
+			dummyHtml += "</body></html>";
+#ifdef DEBUG
+			cout << "SherlockResponseParser::parse: wrapped chunk \""
+				<< dummyHtml << "\"" << endl;
+#endif
+			chunkDoc.setData(dummyHtml.c_str(), dummyHtml.length());
+
+			HtmlTokenizer chunkTokens(&chunkDoc, false, true);
 			set<Link> &chunkLinks = chunkTokens.getLinks();
 			unsigned int endOfFirstLink = 0, startOfSecondLink = 0, endOfSecondLink = 0, startOfThirdLink = 0;
 
@@ -351,6 +386,7 @@
 				}
 			}
 
+			// Any extract ?
 			extract = chunkTokens.getAbstract();
 			if (extract.empty() == true)
 			{

Modified: trunk/Search/WebEngine.cpp
===================================================================
--- trunk/Search/WebEngine.cpp	2006-06-02 13:59:47 UTC (rev 286)
+++ trunk/Search/WebEngine.cpp	2006-06-02 14:04:47 UTC (rev 287)
@@ -17,15 +17,31 @@
 #include <string.h>
 #include <sys/types.h>
 #include <regex.h>
-#include <iostream>
-#include <algorithm>
+#include <string>
 
-#include "HtmlTokenizer.h"
 #include "StringManip.h"
 #include "Url.h"
+#include "HtmlTokenizer.h"
 #include "DownloaderFactory.h"
 #include "WebEngine.h"
 
+using std::string;
+
+static string getCharset(const string &contentType)
+{
+	if (contentType.empty() == false)
+	{
+		// Is a charset specified ?
+		string::size_type pos = contentType.find("charset=");
+		if (pos != string::npos)
+		{
+			return StringManip::removeQuotes(contentType.substr(pos + 8));
+		}
+	}
+
+	return "";
+}
+
 WebEngine::WebEngine() :
 	SearchEngineInterface()
 {
@@ -41,25 +57,34 @@
 	m_charset.clear();
 
 	// Any type of downloader will do...
-	DownloaderInterface *myDownloader = DownloaderFactory::getDownloader("http");
-	if (myDownloader == NULL)
+	DownloaderInterface *pDownloader = DownloaderFactory::getDownloader("http");
+	if (pDownloader == NULL)
 	{
 		return NULL;
 	}
 
-	Document *urlDoc = myDownloader->retrieveUrl(docInfo);
-	if (urlDoc != NULL)
+	Document *pDoc = pDownloader->retrieveUrl(docInfo);
+	if (pDoc != NULL)
 	{
-		string contentType = urlDoc->getType();
+		string contentType(pDoc->getType());
 
-		// Was a charset specified ?
-		string::size_type pos = contentType.find("charset=");
-		if (pos != string::npos)
+		// Found a charset ?
+		m_charset = getCharset(contentType);
+		if (m_charset.empty() == true)
 		{
-			m_charset = StringManip::removeQuotes(contentType.substr(pos + 8));
+			HtmlTokenizer tokens(pDoc, true);
+
+			// Content-Type might be specified as a META tag 
+			contentType = tokens.getMetaTag("Content-Type");
+			m_charset = getCharset(contentType);
+			if (m_charset.empty() == false)
+			{
+				// Reset the document's type
+				pDoc->setType(contentType);
+			}
 		}
 	}
-	delete myDownloader;
+	delete pDownloader;
 
-	return urlDoc;
+	return pDoc;
 }

Modified: trunk/Search/WebEngine.h
===================================================================
--- trunk/Search/WebEngine.h	2006-06-02 13:59:47 UTC (rev 286)
+++ trunk/Search/WebEngine.h	2006-06-02 14:04:47 UTC (rev 287)
@@ -18,13 +18,10 @@
 #define _WEB_ENGINE_H
 
 #include <string>
-#include <set>
 
 #include "SearchEngineInterface.h"
 #include "Document.h"
 
-using namespace std;
-
 class WebEngine : public SearchEngineInterface
 {
 	public:
@@ -32,8 +29,8 @@
 		virtual ~WebEngine();
 
 	protected:
-		string m_hostFilter;
-		string m_fileFilter;
+		std::string m_hostFilter;
+		std::string m_fileFilter;
 
 		Document *downloadPage(const DocumentInfo &docInfo);
 



From fabricecolin at berlios.de  Fri Jun  2 17:46:52 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Fri, 2 Jun 2006 17:46:52 +0200
Subject: [Pinot-svn] r288 - in trunk: Tokenize Utils
Message-ID: <200606021546.k52Fkq4A016492@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-02 17:46:51 +0200 (Fri, 02 Jun 2006)
New Revision: 288

Modified:
   trunk/Tokenize/HtmlTokenizer.cpp
   trunk/Utils/StringManip.cpp
Log:
Some fixes for results title and abstract, including a fairly stupid bug in
trimSpaces().


Modified: trunk/Tokenize/HtmlTokenizer.cpp
===================================================================
--- trunk/Tokenize/HtmlTokenizer.cpp	2006-06-02 14:04:47 UTC (rev 287)
+++ trunk/Tokenize/HtmlTokenizer.cpp	2006-06-02 15:46:51 UTC (rev 288)
@@ -43,8 +43,11 @@
 	if ((pState->m_links.empty() == true) ||
 		(pState->m_currentLink.m_index == 0))
 	{
-		pState->m_abstract = pState->m_text;
+		string abstract(pState->m_text);
 
+		StringManip::trimSpaces(abstract);
+		pState->m_abstract = abstract;
+
 		return true;
 	}
 
@@ -173,7 +176,8 @@
 			// FIXME: get the NodeInfo to find out the position of this link
 			pState->m_currentLink.m_startPos = pState->m_textPos;
 #ifdef DEBUG
-			cout << "HtmlTokenizer::startHandler: link starts at position " << pState->m_textPos << endl;
+			cout << "HtmlTokenizer::endHandler: link " << pState->m_currentLink.m_index
+				<< " starts at position " << pState->m_textPos << endl;
 #endif
 
 			// Find abstract ?
@@ -242,7 +246,7 @@
 	}
 	else if (tagName == "title")
 	{
-		StringManip::removeCharacters(pState->m_title, "\t\r\n");
+		StringManip::trimSpaces(pState->m_title);
 #ifdef DEBUG
 		cout << "HtmlTokenizer::endHandler: title is " << pState->m_title << endl;
 #endif
@@ -256,12 +260,13 @@
 	{
 		if (pState->m_currentLink.m_url.empty() == false)
 		{
-			// FIXME: get the NodeInfo to find out the position of this link
+			StringManip::trimSpaces(pState->m_currentLink.m_name);
 			pState->m_currentLink.m_endPos = pState->m_textPos;
 #ifdef DEBUG
-			cout << "HtmlTokenizer::endHandler: link ends at position " << pState->m_textPos << endl;
+			cout << "HtmlTokenizer::endHandler: link " << pState->m_currentLink.m_index
+				<< " ends at position " << pState->m_textPos << endl;
 #endif
-				
+
 			// Store this link
 			pState->m_links.insert(pState->m_currentLink);
 			++pState->m_currentLink.m_index;

Modified: trunk/Utils/StringManip.cpp
===================================================================
--- trunk/Utils/StringManip.cpp	2006-06-02 14:04:47 UTC (rev 287)
+++ trunk/Utils/StringManip.cpp	2006-06-02 15:46:51 UTC (rev 288)
@@ -198,17 +198,18 @@
 /// Trims spaces at the start and end of a string.
 unsigned int StringManip::trimSpaces(string &str)
 {
+	unsigned int pos = 0;
 	unsigned int count = 0;
 
-	for (unsigned int pos = 0;
-		(str.empty() == false) && (pos < str.length()); ++pos)
+	while ((str.empty() == false) && (pos < str.length()))
 	{
 		if (isspace(str[pos]) == 0)
 		{
+			++pos;
 			break;
 		}
 
-		str.erase(pos);
+		str.erase(pos, 1);
 		++count;
 	}
 
@@ -220,7 +221,7 @@
 			break;
 		}
 
-		str.erase(pos);
+		str.erase(pos, 1);
 		++count;
 	}
 



From fabricecolin at berlios.de  Mon Jun  5 16:32:59 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Mon, 5 Jun 2006 16:32:59 +0200
Subject: [Pinot-svn] r289 - trunk/UI/GTK2/src
Message-ID: <200606051432.k55EWx7M003371@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-05 16:32:58 +0200 (Mon, 05 Jun 2006)
New Revision: 289

Modified:
   trunk/UI/GTK2/src/PinotUtils.cpp
   trunk/UI/GTK2/src/ResultsTree.cpp
   trunk/UI/GTK2/src/WorkerThreads.cpp
Log:
Some fixes for charset conversions.


Modified: trunk/UI/GTK2/src/PinotUtils.cpp
===================================================================
--- trunk/UI/GTK2/src/PinotUtils.cpp	2006-06-02 15:46:51 UTC (rev 288)
+++ trunk/UI/GTK2/src/PinotUtils.cpp	2006-06-05 14:32:58 UTC (rev 289)
@@ -215,7 +215,7 @@
 	{
 		if (charset.empty() == false)
 		{
-			return convert_with_fallback(text, "UTF-8", charset);
+			return convert_with_fallback(text, "UTF-8", charset, " ");
 		}
 		else
 		{
@@ -224,6 +224,13 @@
 	}
 	catch (ConvertError &ce)
 	{
+#ifdef DEBUG
+		cout << "to_utf8: cannot convert from " << charset << ": " << ce.what() << endl;
+#endif
+		if (charset.empty() == false)
+		{
+			return to_utf8(text);
+		}
 	}
 
 	return "";
@@ -238,6 +245,9 @@
 	}
 	catch (ConvertError &ce)
 	{
+#ifdef DEBUG
+		cout << "from_utf8: " << ce.what() << endl;
+#endif
 	}
 
 	return "";

Modified: trunk/UI/GTK2/src/ResultsTree.cpp
===================================================================
--- trunk/UI/GTK2/src/ResultsTree.cpp	2006-06-02 15:46:51 UTC (rev 288)
+++ trunk/UI/GTK2/src/ResultsTree.cpp	2006-06-05 14:32:58 UTC (rev 289)
@@ -512,9 +512,9 @@
 	for (vector<Result>::const_iterator resultIter = resultsList.begin();
 		resultIter != resultsList.end(); ++resultIter)
 	{
-		string title(resultIter->getTitle());
-		string location(resultIter->getLocation());
-		string extract(resultIter->getExtract());
+		ustring title(to_utf8(resultIter->getTitle(), charset));
+		ustring location(to_utf8(resultIter->getLocation(), charset));
+		ustring extract(to_utf8(resultIter->getExtract(), charset));
 		float currentScore = resultIter->getScore();
 		string score;
 		int rankDiff = 0;
@@ -546,14 +546,14 @@
 			{
 				// Update this result whatever the current and previous rankings were
 				history.updateItem(queryName, registeredEngineName, location,
-					title, to_utf8(extract, charset).c_str(), language, currentScore);
+					title, extract, language, currentScore);
 				rankDiff = (int)(currentScore - previousScore);
 			}
 			else
 			{
 				// No, this is a new result
 				history.insertItem(queryName, registeredEngineName, location,
-					resultIter->getTitle(), to_utf8(extract, charset).c_str(), language, currentScore);
+					resultIter->getTitle(), extract, language, currentScore);
 				// New results are displayed as such only if the query has already been run on the engine
 				if (isNewQuery == false)
 				{
@@ -563,9 +563,8 @@
 			}
 
 			++count;
-			if (appendResult(to_utf8(title, charset), to_utf8(location, charset),
-				currentScore, language, rankDiff, queryName, engineId, indexId,
-				titleIter, &(*groupIter), true) == true)
+			if (appendResult(title, location, currentScore, language, rankDiff,
+				queryName, engineId, indexId, titleIter, &(*groupIter), true) == true)
 			{
 #ifdef DEBUG
 				cout << "ResultsTree::addResults: added row for result " << count << endl;

Modified: trunk/UI/GTK2/src/WorkerThreads.cpp
===================================================================
--- trunk/UI/GTK2/src/WorkerThreads.cpp	2006-06-02 15:46:51 UTC (rev 288)
+++ trunk/UI/GTK2/src/WorkerThreads.cpp	2006-06-05 14:32:58 UTC (rev 289)
@@ -530,7 +530,7 @@
 {
 	charset = m_resultsCharset;
 #ifdef DEBUG
-	cout << "QueryingThread::getResults: charset is " << charset << endl;
+	cout << "QueryingThread::getResults: charset for " << m_engineDisplayableName << " is " << charset << endl;
 #endif
 
 	return m_resultsList;



From fabricecolin at berlios.de  Mon Jun  5 16:36:59 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Mon, 5 Jun 2006 16:36:59 +0200
Subject: [Pinot-svn] r290 - trunk/UI/GTK2/src
Message-ID: <200606051436.k55EaxIM004913@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-05 16:36:58 +0200 (Mon, 05 Jun 2006)
New Revision: 290

Modified:
   trunk/UI/GTK2/src/importDialog.cc
Log:
If import failed, set the progress bar's text to the error message.


Modified: trunk/UI/GTK2/src/importDialog.cc
===================================================================
--- trunk/UI/GTK2/src/importDialog.cc	2006-06-05 14:32:58 UTC (rev 289)
+++ trunk/UI/GTK2/src/importDialog.cc	2006-06-05 14:36:58 UTC (rev 290)
@@ -227,10 +227,11 @@
 	}
 
 	// Did the thread fail ?
-	if (pThread->getStatus().empty() == false)
+	status = pThread->getStatus();
+	if (status.empty() == false)
 	{
 #ifdef DEBUG
-		cout << "importDialog::on_thread_end: " << pThread->getStatus() << endl;
+		cout << "importDialog::on_thread_end: " << status << endl;
 #endif
 		success = false;
 	}
@@ -274,7 +275,7 @@
 
 		if (success == false)
 		{
-			// FIXME: there are better ways to show what happened :-)
+			importProgressbar->set_text(status);
 			fractionFilled = 0.0;
 		}
 		importProgressbar->set_fraction(fractionFilled);



From fabricecolin at berlios.de  Tue Jun  6 14:30:27 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Tue, 6 Jun 2006 14:30:27 +0200
Subject: [Pinot-svn] r291 - trunk/UI/GTK2/src
Message-ID: <200606061230.k56CURK6005690@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-06 14:30:11 +0200 (Tue, 06 Jun 2006)
New Revision: 291

Modified:
   trunk/UI/GTK2/src/IndexTree.cpp
Log:
Don't truncate titles.


Modified: trunk/UI/GTK2/src/IndexTree.cpp
===================================================================
--- trunk/UI/GTK2/src/IndexTree.cpp	2006-06-05 14:36:58 UTC (rev 290)
+++ trunk/UI/GTK2/src/IndexTree.cpp	2006-06-06 12:30:11 UTC (rev 291)
@@ -163,16 +163,8 @@
 {
 	TreeModel::iterator newRowIter = m_refStore->append();
 	TreeModel::Row childRow = *newRowIter;
-	string title = docInfo.getTitle();
 
-	if (title.length() > 50)
-	{
-		string truncatedTitle = title.substr(0, 47);
-		truncatedTitle += "...";
-		title = truncatedTitle;
-	}
-
-	childRow[m_indexColumns.m_text] = to_utf8(title);
+	childRow[m_indexColumns.m_text] = to_utf8(docInfo.getTitle());
 	childRow[m_indexColumns.m_url] = to_utf8(docInfo.getLocation());
 	childRow[m_indexColumns.m_liveUrl] = to_utf8(docInfo.getOriginalLocation());
 	childRow[m_indexColumns.m_type] = to_utf8(docInfo.getType());



From fabricecolin at berlios.de  Tue Jun  6 14:33:58 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Tue, 6 Jun 2006 14:33:58 +0200
Subject: [Pinot-svn] r292 - trunk/UI/GTK2/src
Message-ID: <200606061233.k56CXwYX006420@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-06 14:33:51 +0200 (Tue, 06 Jun 2006)
New Revision: 292

Modified:
   trunk/UI/GTK2/src/mainWindow.cc
   trunk/UI/GTK2/src/mainWindow.hh
Log:
The main window on_delete_event handler disconnects the page switch signal to
avoid segfaults when the page being shown at exit time is the View page.


Modified: trunk/UI/GTK2/src/mainWindow.cc
===================================================================
--- trunk/UI/GTK2/src/mainWindow.cc	2006-06-06 12:30:11 UTC (rev 291)
+++ trunk/UI/GTK2/src/mainWindow.cc	2006-06-06 12:33:51 UTC (rev 292)
@@ -190,7 +190,7 @@
 	m_pNotebook->set_tab_pos(Gtk::POS_TOP);
 	m_pNotebook->set_scrollable(false);
 	rightVbox->pack_start(*m_pNotebook, Gtk::PACK_EXPAND_WIDGET, 4);
-	m_pNotebook->signal_switch_page().connect(
+	m_pageSwitchConnection = m_pNotebook->signal_switch_page().connect(
 		SigC::slot(*this, &mainWindow::on_switch_page), false);
 
 	// Create an HTML renderer
@@ -683,11 +683,10 @@
 #endif
 	}
 
-	show_global_menuitems(showResultsMenuitems);
-
 	// Did the page change ?
 	if (m_state.m_currentPage != p1)
 	{
+		show_global_menuitems(showResultsMenuitems);
 		show_selectionbased_menuitems(false);
 	}
 	m_state.m_currentPage = (int)p1;
@@ -2365,9 +2364,14 @@
 		m_state.disconnect();
 		m_state.stop_threads();
 	}
-	// Disconnect the threads' finished signal
-	m_state.disconnect();
+	else
+	{
+		m_state.disconnect();
+	}
 
+	// Disconnect UI signals
+	m_pageSwitchConnection.disconnect();
+
 	// Save the window's position and dimensions now
 	// Don't worry about the gravity, it hasn't been changed
 	get_position(m_settings.m_xPos, m_settings.m_yPos);

Modified: trunk/UI/GTK2/src/mainWindow.hh
===================================================================
--- trunk/UI/GTK2/src/mainWindow.hh	2006-06-06 12:30:11 UTC (rev 291)
+++ trunk/UI/GTK2/src/mainWindow.hh	2006-06-06 12:33:51 UTC (rev 292)
@@ -164,6 +164,8 @@
 	HtmlView *m_pHtmlView;
 	// Tooltips
 	Gtk::Tooltips m_tooltips;
+	// Page switching
+	SigC::Connection m_pageSwitchConnection;
 	// Activity timeout
 	SigC::Connection m_timeoutConnection;
 	// Internal state



From fabricecolin at berlios.de  Wed Jun  7 13:09:42 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Wed, 7 Jun 2006 13:09:42 +0200
Subject: [Pinot-svn] r293 - in trunk/UI/GTK2: . src
Message-ID: <200606071109.k57B9goh004904@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-07 13:08:40 +0200 (Wed, 07 Jun 2006)
New Revision: 293

Modified:
   trunk/UI/GTK2/metase-gtk2.glade
   trunk/UI/GTK2/src/mainWindow_glade.cc
Log:
Assigned decent defaults to mainWindow's dimensions.


Modified: trunk/UI/GTK2/metase-gtk2.glade
===================================================================
--- trunk/UI/GTK2/metase-gtk2.glade	2006-06-06 12:33:51 UTC (rev 292)
+++ trunk/UI/GTK2/metase-gtk2.glade	2006-06-07 11:08:40 UTC (rev 293)
@@ -10,7 +10,8 @@
   <property name="type">GTK_WINDOW_TOPLEVEL</property>
   <property name="window_position">GTK_WIN_POS_NONE</property>
   <property name="modal">False</property>
-  <property name="default_width">400</property>
+  <property name="default_width">680</property>
+  <property name="default_height">500</property>
   <property name="resizable">True</property>
   <property name="destroy_with_parent">False</property>
   <property name="decorated">True</property>
@@ -411,7 +412,7 @@
 	  <property agent="glademm" name="cxx_visibility">protected</property>
 	  <property name="visible">True</property>
 	  <property name="can_focus">True</property>
-	  <property name="position">105</property>
+	  <property name="position">200</property>
 
 	  <child>
 	    <widget class="GtkVBox" id="leftVbox">

Modified: trunk/UI/GTK2/src/mainWindow_glade.cc
===================================================================
--- trunk/UI/GTK2/src/mainWindow_glade.cc	2006-06-06 12:33:51 UTC (rev 292)
+++ trunk/UI/GTK2/src/mainWindow_glade.cc	2006-06-07 11:08:40 UTC (rev 293)
@@ -352,7 +352,7 @@
    rightVbox->pack_start(*liveQueryHbox, Gtk::PACK_SHRINK, 0);
    rightVbox->pack_start(*queryExpander, Gtk::PACK_SHRINK, 0);
    mainHpaned->set_flags(Gtk::CAN_FOCUS);
-   mainHpaned->set_position(105);
+   mainHpaned->set_position(200);
    mainHpaned->pack1(*leftVbox, Gtk::SHRINK);
    mainHpaned->pack2(*rightVbox, Gtk::EXPAND|Gtk::SHRINK);
    mainHbox->pack_start(*mainProgressbar, Gtk::PACK_SHRINK, 0);
@@ -362,7 +362,7 @@
    vbox1->pack_start(*mainHbox, Gtk::PACK_SHRINK, 0);
    mainWindow->set_events(Gdk::BUTTON_PRESS_MASK);
    mainWindow->set_title(_("Pinot"));
-   mainWindow->set_default_size(400,-1);
+   mainWindow->set_default_size(680,500);
    mainWindow->set_modal(false);
    mainWindow->property_window_position().set_value(Gtk::WIN_POS_NONE);
    mainWindow->set_resizable(true);



From fabricecolin at berlios.de  Wed Jun  7 13:24:11 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Wed, 7 Jun 2006 13:24:11 +0200
Subject: [Pinot-svn] r294 - in trunk: Collect Search UI/GTK2/src Utils
Message-ID: <200606071124.k57BOBlA010401@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-07 13:24:05 +0200 (Wed, 07 Jun 2006)
New Revision: 294

Modified:
   trunk/Collect/pinot-collect.cpp
   trunk/Search/pinot-search.cpp
   trunk/UI/GTK2/src/pinot.cc
   trunk/Utils/MIMEScanner.cpp
   trunk/Utils/MIMEScanner.h
Log:
MIMEScanner has to be initialized and shut down. When initialized, it parses
shared-mime-info's default applications file and gets the Exec line out of
the corresponding .desktop files, When shutdown, it shuts down xdgmime.
Hopefully, this will allow to view most documents properly soon instead of
blindly relying on the internal viewer.


Modified: trunk/Collect/pinot-collect.cpp
===================================================================
--- trunk/Collect/pinot-collect.cpp	2006-06-07 11:08:40 UTC (rev 293)
+++ trunk/Collect/pinot-collect.cpp	2006-06-07 11:24:05 UTC (rev 294)
@@ -21,6 +21,7 @@
 #include <iostream>
 #include <fstream>
 
+#include "MIMEScanner.h"
 #include "Url.h"
 #include "DownloaderFactory.h"
 #include "config.h"
@@ -75,6 +76,7 @@
 		return EXIT_FAILURE;
 	}
 
+	MIMEScanner::initialize();
 	DownloaderInterface::initialize();
 
 	string url(argv[1]);
@@ -91,8 +93,11 @@
 	DownloaderInterface *myDownloader = DownloaderFactory::getDownloader(thisUrl.getProtocol());
 	if (myDownloader == NULL)
 	{
+		cerr << "Couldn't obtain downloader for protocol " << thisUrl.getProtocol() << endl;
+
 		DownloaderInterface::shutdown();
-		cerr << "Couldn't obtain downloader for protocol " << thisUrl.getProtocol() << endl;
+		MIMEScanner::shutdown();
+
 		return EXIT_FAILURE;
 	}
 
@@ -139,6 +144,7 @@
 	delete myDownloader;
 
 	DownloaderInterface::shutdown();
+	MIMEScanner::shutdown();
 
 	return EXIT_SUCCESS;
 }

Modified: trunk/Search/pinot-search.cpp
===================================================================
--- trunk/Search/pinot-search.cpp	2006-06-07 11:08:40 UTC (rev 293)
+++ trunk/Search/pinot-search.cpp	2006-06-07 11:24:05 UTC (rev 294)
@@ -21,6 +21,7 @@
 #include <string>
 #include <fstream>
 
+#include "MIMEScanner.h"
 #include "Url.h"
 #include "XmlTokenizer.h"
 #include "SearchEngineFactory.h"
@@ -91,6 +92,9 @@
 		return EXIT_FAILURE;
 	}
 
+	MIMEScanner::initialize();
+	DownloaderInterface::initialize();
+
 	// Which SearchEngine ?
 	type = argv[1];
 	option = argv[2];
@@ -98,6 +102,10 @@
 	if (myEngine == NULL)
 	{
 		cerr << "Couldn't obtain search engine instance" << endl;
+
+		DownloaderInterface::shutdown();
+		MIMEScanner::shutdown();
+
 		return EXIT_FAILURE;
 	}
 
@@ -149,5 +157,8 @@
 
 	delete myEngine;
 
+	DownloaderInterface::shutdown();
+	MIMEScanner::shutdown();
+
 	return EXIT_SUCCESS;
 }

Modified: trunk/UI/GTK2/src/pinot.cc
===================================================================
--- trunk/UI/GTK2/src/pinot.cc	2006-06-07 11:08:40 UTC (rev 293)
+++ trunk/UI/GTK2/src/pinot.cc	2006-06-07 11:24:05 UTC (rev 294)
@@ -29,6 +29,7 @@
 
 #include "TokenizerFactory.h"
 #include "Languages.h"
+#include "MIMEScanner.h"
 #include "XapianDatabase.h"
 #include "XapianDatabaseFactory.h"
 #include "QueryHistory.h"
@@ -81,6 +82,7 @@
 
 	MozillaRenderer::shutdown();
 	DownloaderInterface::shutdown();
+	MIMEScanner::shutdown();
 }
 
 static void quitAll(int sigNum)
@@ -132,6 +134,7 @@
 	textdomain(GETTEXT_PACKAGE);
 #endif //ENABLE_NLS
 
+	MIMEScanner::initialize();
 	DownloaderInterface::initialize();
 	MozillaRenderer::initialize();
 	Glib::thread_init();

Modified: trunk/Utils/MIMEScanner.cpp
===================================================================
--- trunk/Utils/MIMEScanner.cpp	2006-06-07 11:08:40 UTC (rev 293)
+++ trunk/Utils/MIMEScanner.cpp	2006-06-07 11:24:05 UTC (rev 294)
@@ -15,24 +15,199 @@
  */
 
 #include <strings.h>
-#include <utility>
+#include <glib.h>
 #include <iostream>
 
+#include "config.h"
 #include "xdgmime/xdgmime.h"
 
 #include "MIMEScanner.h"
 #include "StringManip.h"
 #include "Url.h"
 
+// FIXME: or should it be defaults.list ?
+#define MIME_DEFAULTS_FILE "mimeinfo.cache"
+// FIXME: "Default Applications" here ?
+#define MIME_DEFAULTS_SECTION "MIME Cache"
+
 using std::cout;
 using std::endl;
 using std::string;
-using std::min;
+using std::map;
 
+static MIMEAction getTypeAction(const string &desktopFile)
+{
+	MIMEAction typeAction;
+	GKeyFile *pDesktopFile = g_key_file_new();
+	GError *pError = NULL;
+
+	if (pDesktopFile == NULL)
+	{
+		return typeAction;
+	}
+
+	g_key_file_load_from_file(pDesktopFile, (const gchar *)desktopFile.c_str(),
+		G_KEY_FILE_NONE, &pError);
+	if (pError == NULL)
+	{
+		gchar *pExecKey = g_key_file_get_string(pDesktopFile,
+			"Desktop Entry", "Exec", &pError);
+
+		if (pError == NULL)
+		{
+			if (pExecKey != NULL)
+			{
+				typeAction.m_exec = pExecKey;
+
+				// Does it support URLs as parameter, as described here ?
+				// http://standards.freedesktop.org/desktop-entry-spec/latest/ar01s06.html
+				if ((typeAction.m_exec.find("%u") != string::npos) ||
+					(typeAction.m_exec.find("%U") != string::npos))
+				{
+					// It does, therefore it's not exclusively local
+					typeAction.m_localOnly = false;
+				}
+
+				g_free(pExecKey);
+			}
+		}
+		else
+		{
+			g_error_free(pError);
+		}
+	}
+	else
+	{
+		g_error_free(pError);
+	}
+
+	g_key_file_free(pDesktopFile);
+
+	return typeAction;
+}
+
+MIMEAction::MIMEAction() :
+	m_localOnly(true)
+{
+}
+
+MIMEAction::MIMEAction(const MIMEAction &other) :
+	m_localOnly(other.m_localOnly),
+	m_exec(other.m_exec)
+{
+}
+
+MIMEAction::~MIMEAction()
+{
+}
+
+MIMEAction &MIMEAction::operator=(const MIMEAction &other)
+{
+	m_localOnly = other.m_localOnly;
+	m_exec = other.m_exec;
+
+	return *this;
+}
+
+map<string, MIMEAction> MIMEScanner::m_defaultActions;
+
 MIMEScanner::MIMEScanner()
 {
 }
 
+MIMEScanner::~MIMEScanner()
+{
+}
+
+void MIMEScanner::initialize(void)
+{
+	GError *pError = NULL;
+
+	GKeyFile *pDefaults = g_key_file_new();
+	if (pDefaults == NULL)
+	{
+		return;
+	}
+
+	string desktopFilesDirectory(PREFIX);
+	desktopFilesDirectory += "/share/applications/";
+
+	string defaultsFile(desktopFilesDirectory);
+	defaultsFile += MIME_DEFAULTS_FILE;
+
+	g_key_file_load_from_file(pDefaults, (const gchar *)defaultsFile.c_str(),
+		G_KEY_FILE_NONE, &pError);
+	if (pError == NULL)
+	{
+		gchar **pMimeTypes = g_key_file_get_keys(pDefaults, MIME_DEFAULTS_SECTION,
+			NULL, &pError);
+
+		if (pMimeTypes != NULL)
+		{
+			if (pError == NULL)
+			{
+				for (unsigned int i = 0; pMimeTypes[i] != NULL; ++i)
+				{
+					gchar **pDesktopFiles = g_key_file_get_string_list(pDefaults,
+						MIME_DEFAULTS_SECTION, pMimeTypes[i], NULL, &pError);
+					unsigned int defaultApp = 0;
+
+					if (pDesktopFiles == NULL)
+					{
+						continue;
+					}
+					if (pError != NULL)
+					{
+						g_error_free(pError);
+						continue;
+					}
+
+					for (unsigned int j = 0; pDesktopFiles[j] != NULL; ++j)
+					{
+						defaultApp = j;
+					}
+
+					// Register the last application
+					if (pDesktopFiles[defaultApp] != NULL)
+					{
+						MIMEAction typeAction(getTypeAction(desktopFilesDirectory + string(pDesktopFiles[defaultApp])));
+
+						if (typeAction.m_exec.empty() == false)
+						{
+#ifdef DEBUG
+							cout << "MIMEScanner::initialize: default for " << pMimeTypes[i]
+								<< " is " << typeAction.m_exec << endl;
+#endif
+							m_defaultActions[pMimeTypes[i]] = typeAction;
+						}
+					}
+
+					g_strfreev(pDesktopFiles);
+				}
+			}
+			else
+			{
+				g_error_free(pError);
+			}
+
+			g_strfreev(pMimeTypes);
+		}
+	}
+	else
+	{
+		g_error_free(pError);
+	}
+
+	g_key_file_free(pDefaults);
+
+	// xdg_mime_init() is called automatically when needed
+}
+
+void MIMEScanner::shutdown(void)
+{
+	xdg_mime_shutdown();
+}
+
 string MIMEScanner::scanFileType(const string &fileName)
 {
 	if (fileName.empty() == true)
@@ -41,9 +216,9 @@
 	}
 
 	// Does it have an obvious extension ?
-	const char  *pType = xdg_mime_get_mime_type_from_file_name(fileName.c_str());
+	const char *pType = xdg_mime_get_mime_type_from_file_name(fileName.c_str());
 	if ((pType == NULL) ||
-		(strncasecmp(pType, xdg_mime_type_unknown, min(strlen(pType), strlen(xdg_mime_type_unknown))) == 0))
+		(strncasecmp(pType, xdg_mime_type_unknown, strlen(pType)) == 0))
 	{
 #ifdef DEBUG
 		cout << "MIMEScanner::scanFileType: couldn't determine type of " << fileName << endl;
@@ -62,13 +237,14 @@
 		return "";
 	}
 
-	string mimeType = scanFileType(fileName);
+	string mimeType(scanFileType(fileName));
+
 	if (mimeType.empty() == true)
 	{
 		// Have a peek at the file
 		const char *pType = xdg_mime_get_mime_type_for_file(fileName.c_str(), NULL);
 		if ((pType != NULL) &&
-			(strncasecmp(pType, xdg_mime_type_unknown, min(strlen(pType), strlen(xdg_mime_type_unknown))) != 0))
+			(strncasecmp(pType, xdg_mime_type_unknown, strlen(pType)) != 0))
 		{
 			return pType;
 		}
@@ -88,7 +264,8 @@
 /// Finds out the given URL's MIME type.
 string MIMEScanner::scanUrl(const Url &urlObj)
 {
-	string mimeType = scanFileType(urlObj.getFile());
+	string mimeType(scanFileType(urlObj.getFile()));
+
 	if (mimeType.empty() == true)
 	{
 		// Is it a local file ?
@@ -116,3 +293,18 @@
 
 	return mimeType;
 }
+
+/// Determines the default action for the given type.
+bool MIMEScanner::getDefaultAction(const string &mimeType, MIMEAction &typeAction)
+{
+	map<string, MIMEAction>::const_iterator actionIter = m_defaultActions.find(mimeType);
+
+	if (actionIter != m_defaultActions.end())
+	{
+		typeAction = actionIter->second;
+
+		return true;
+	}
+
+	return false;
+}

Modified: trunk/Utils/MIMEScanner.h
===================================================================
--- trunk/Utils/MIMEScanner.h	2006-06-07 11:08:40 UTC (rev 293)
+++ trunk/Utils/MIMEScanner.h	2006-06-07 11:24:05 UTC (rev 294)
@@ -18,19 +18,47 @@
 #define _MIME_SCANNER_H
 
 #include <string>
+#include <map>
 
 #include "Url.h"
 
+class MIMEAction
+{
+	public:
+		MIMEAction();
+		MIMEAction(const MIMEAction &other);
+		virtual ~MIMEAction();
+
+		MIMEAction &operator=(const MIMEAction &other);
+
+		bool m_localOnly;
+		std::string m_exec;
+
+};
+
 class MIMEScanner
 {
 	public:
+		~MIMEScanner();
+
+		/// Initializes the MIME system.
+		static void initialize(void);
+
+		/// Shutdowns the MIME system.
+		static void shutdown(void);
+
 		/// Finds out the given file's MIME type.
 		static std::string scanFile(const std::string &fileName);
 
 		/// Finds out the given URL's MIME type.
 		static std::string scanUrl(const Url &urlObj);
 
+		/// Determines the default action for the given type.
+		static bool getDefaultAction(const std::string &mimeType, MIMEAction &typeAction);
+
 	protected:
+		static std::map<std::string, MIMEAction> m_defaultActions;
+
 		MIMEScanner();
 
 		static std::string scanFileType(const std::string &fileName);



From fabricecolin at berlios.de  Wed Jun  7 15:33:55 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Wed, 7 Jun 2006 15:33:55 +0200
Subject: [Pinot-svn] r295 - in trunk: . Collect Search Utils
Message-ID: <200606071333.k57DXtl7016037@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-07 15:33:52 +0200 (Wed, 07 Jun 2006)
New Revision: 295

Added:
   trunk/Utils/CommandLine.cpp
   trunk/Utils/CommandLine.h
Modified:
   trunk/Collect/Makefile.am
   trunk/Search/Makefile.am
   trunk/Utils/MIMEScanner.cpp
   trunk/Utils/MIMEScanner.h
   trunk/Utils/Makefile.am
   trunk/configure.in
Log:
Extended MIMEAction, added CommandLine: it runs commands asynchronously after
having expanded parameters. Since this makes use of glibmm, check for it
explictely in configure.


Modified: trunk/Collect/Makefile.am
===================================================================
--- trunk/Collect/Makefile.am	2006-06-07 11:24:05 UTC (rev 294)
+++ trunk/Collect/Makefile.am	2006-06-07 13:33:52 UTC (rev 295)
@@ -12,13 +12,6 @@
 
 bin_PROGRAMS = pinot-collect
 
-pinot_collect_SOURCES = \
-	pinot-collect.cpp
-
-pinot_collect_LDADD = -L../Utils -L../Tokenize \
-	-lCollect -lTokenize -lUtils \
-	@INDEX_LIBS@ @XML_LIBS@ @MIME_LIBS@ @HTTP_LIBS@ @MISC_LIBS@
-
 libCollect_la_SOURCES = \
 	@HTTP_DOWNLOADER at .cpp \
 	DownloaderFactory.cpp \
@@ -27,6 +20,13 @@
 	MboxCollector.cpp \
 	XapianCollector.cpp
 
+pinot_collect_SOURCES = \
+	pinot-collect.cpp
+
+pinot_collect_LDADD = -L../Utils -L../Tokenize \
+	-lCollect -lTokenize -lUtils \
+	@GLIBMM_LIBS@ @INDEX_LIBS@ @XML_LIBS@ @MIME_LIBS@ @HTTP_LIBS@ @MISC_LIBS@
+
 AM_CXXFLAGS = -I../Utils -I../Tokenize \
-	@INDEX_CFLAGS@ @XML_CFLAGS@ @HTTP_CFLAGS@ @MIME_CFLAGS@
+	@INDEX_CFLAGS@ @XML_CFLAGS@ @HTTP_CFLAGS@ @MIME_CFLAGS@ @GLIBMM_CFLAGS@
 

Modified: trunk/Search/Makefile.am
===================================================================
--- trunk/Search/Makefile.am	2006-06-07 11:24:05 UTC (rev 294)
+++ trunk/Search/Makefile.am	2006-06-07 13:33:52 UTC (rev 295)
@@ -43,11 +43,11 @@
 
 pinot_search_LDADD = -L../Utils -L../Tokenize -L../Collect -LGoogle \
 	@SEARCH_LIBS@ -lCollect -lTokenize -lUtils \
-	@INDEX_LIBS@ @SOAP_LIBS@ @XML_LIBS@ @MIME_LIBS@ @HTTP_LIBS@ @MISC_LIBS@
+	@GLIBMM_LIBS@ @INDEX_LIBS@ @SOAP_LIBS@ @XML_LIBS@ @MIME_LIBS@ @HTTP_LIBS@ @MISC_LIBS@
 
 SOAPEnvC.cpp : SOAPEnv.h
 	soapcpp2 -pSOAPEnv SOAPEnv.h
 
 AM_CXXFLAGS = -I../Utils -I../Tokenize -I../Collect -IGoogle \
-	@HTTP_CFLAGS@ @XML_CFLAGS@ @INDEX_CFLAGS@ @SOAP_CFLAGS@ @MIME_CFLAGS@
+	@HTTP_CFLAGS@ @XML_CFLAGS@ @INDEX_CFLAGS@ @SOAP_CFLAGS@ @MIME_CFLAGS@ @GLIBMM_CFLAGS@
 

Added: trunk/Utils/CommandLine.cpp
===================================================================
--- trunk/Utils/CommandLine.cpp	2006-06-07 11:24:05 UTC (rev 294)
+++ trunk/Utils/CommandLine.cpp	2006-06-07 13:33:52 UTC (rev 295)
@@ -0,0 +1,183 @@
+/*
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2 of the License, or
+ *  (at your option) any later version.
+ *
+ *  This program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU Library General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with this program; if not, write to the Free Software
+ *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
+ */
+
+#include <strings.h>
+#include <glibmm/shell.h>
+#include <glibmm/spawn.h>
+#include <iostream>
+
+#include "CommandLine.h"
+#include "Url.h"
+
+using std::cout;
+using std::endl;
+using std::string;
+using std::vector;
+
+CommandLine::CommandLine()
+{
+}
+
+CommandLine::~CommandLine()
+{
+}
+
+/// Runs a command asynchronously.
+bool CommandLine::runAsync(const MIMEAction &action, const vector<string> &arguments)
+{
+	string commandLine(action.m_exec);
+
+	if (commandLine.empty() == true)
+	{
+		return false;
+	}
+
+	if (arguments.empty() == false)
+	{
+		vector<string>::const_iterator firstArg = arguments.begin();
+		Url firstUrl(*firstArg);
+		bool foundParam = false;
+
+		// Expand parameters
+		// We assume that arguments are URLs
+		string::size_type paramPos = commandLine.find('%');
+		while ((paramPos != string::npos) &&
+				(paramPos + 1 < commandLine.length()))
+		{
+			string replacement;
+
+			foundParam = true;
+			switch (commandLine[paramPos + 1])
+			{
+				// Single parameter arguments
+				case 'u':
+					replacement = *firstArg;
+					break;
+				case 'f':
+					if (firstUrl.isLocal() == true)
+					{
+						replacement = firstUrl.getLocation();
+						replacement += "/";
+						replacement += firstUrl.getFile();
+					}
+					break;
+				case 'd':
+					if (firstUrl.isLocal() == true)
+					{
+						replacement = firstUrl.getLocation();
+					}
+					break;
+				case 'n':
+					if (firstUrl.isLocal() == true)
+					{
+						replacement = firstUrl.getFile();
+					}
+				// Multiple parameters arguments
+				case 'U':
+					for (vector<string>::const_iterator argIter = firstArg; argIter != arguments.end(); ++argIter)
+					{
+						if (replacement.empty() == false)
+						{
+							replacement += " ";
+						}
+						replacement += *argIter;
+					}
+					break;
+				case 'F':
+					for (vector<string>::const_iterator argIter = firstArg; argIter != arguments.end(); ++argIter)
+					{
+						Url argUrl(*argIter);
+
+						if (argUrl.isLocal() == true)
+						{
+							if (replacement.empty() == false)
+							{
+								replacement += " ";
+							}
+							replacement += argUrl.getLocation();
+							replacement += "/";
+							replacement += argUrl.getFile();
+						}
+					}
+					break;
+				case 'D':
+					for (vector<string>::const_iterator argIter = firstArg; argIter != arguments.end(); ++argIter)
+					{
+						Url argUrl(*argIter);
+
+						if (argUrl.isLocal() == true)
+						{
+							if (replacement.empty() == false)
+							{
+								replacement += " ";
+							}
+							replacement += argUrl.getLocation();
+						}
+					}
+					break;
+				case 'N':
+					for (vector<string>::const_iterator argIter = firstArg; argIter != arguments.end(); ++argIter)
+					{
+						Url argUrl(*argIter);
+
+						if (argUrl.isLocal() == true)
+						{
+							if (replacement.empty() == false)
+							{
+								replacement += " ";
+							}
+							replacement += argUrl.getFile();
+						}
+					}
+					break;
+				// Other parameters
+				case 'i':
+					replacement = action.m_icon;
+					break;
+				case 'c':
+					// FIXME: this should be the "translated name"
+					replacement = action.m_name;
+					break;
+				case 'k':
+					replacement = action.m_location;
+					break;
+				case 'v':
+					replacement = action.m_device;
+					break;
+				default:
+					break;
+			}
+
+			commandLine.replace(paramPos, 2, Glib::shell_quote(replacement));
+
+			// Next
+			paramPos = commandLine.find('%', paramPos + 1);
+		}
+
+		if (foundParam == false)
+		{
+			// If no parameter was found, assume %f
+			commandLine += *firstArg;
+		}
+	}
+#ifdef DEBUG
+		cout << "CommandLine::runAsync: spawning '" << commandLine << "'" << endl;
+#endif
+
+	Glib::spawn_command_line_async(commandLine);
+
+	return true;
+}

Added: trunk/Utils/CommandLine.h
===================================================================
--- trunk/Utils/CommandLine.h	2006-06-07 11:24:05 UTC (rev 294)
+++ trunk/Utils/CommandLine.h	2006-06-07 13:33:52 UTC (rev 295)
@@ -0,0 +1,42 @@
+/*
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2 of the License, or
+ *  (at your option) any later version.
+ *
+ *  This program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU Library General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with this program; if not, write to the Free Software
+ *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
+ */
+
+#ifndef _COMMAND_LINE_H
+#define _COMMAND_LINE_H
+
+#include <string>
+#include <vector>
+
+#include "MIMEScanner.h"
+
+class CommandLine
+{
+	public:
+		~CommandLine();
+
+		/// Runs a command asynchronously.
+		static bool runAsync(const MIMEAction &action, const std::vector<std::string> &arguments);
+
+	protected:
+		CommandLine();
+
+	private:
+		CommandLine(const CommandLine &other);
+		CommandLine& operator=(const CommandLine& other);
+
+};
+
+#endif // _COMMAND_LINE_H

Modified: trunk/Utils/MIMEScanner.cpp
===================================================================
--- trunk/Utils/MIMEScanner.cpp	2006-06-07 11:24:05 UTC (rev 294)
+++ trunk/Utils/MIMEScanner.cpp	2006-06-07 13:33:52 UTC (rev 295)
@@ -34,64 +34,94 @@
 using std::endl;
 using std::string;
 using std::map;
+using std::pair;
 
-static MIMEAction getTypeAction(const string &desktopFile)
+static string getKeyValue(GKeyFile *pDesktopFile, const string &key)
 {
-	MIMEAction typeAction;
-	GKeyFile *pDesktopFile = g_key_file_new();
-	GError *pError = NULL;
+	string value;
 
-	if (pDesktopFile == NULL)
+	if ((pDesktopFile == NULL) ||
+		(key.empty() == true))
 	{
-		return typeAction;
+		return "";
 	}
 
-	g_key_file_load_from_file(pDesktopFile, (const gchar *)desktopFile.c_str(),
-		G_KEY_FILE_NONE, &pError);
+	GError *pError = NULL;
+	gchar *pKeyValue = g_key_file_get_string(pDesktopFile,
+		"Desktop Entry", key.c_str(), &pError);
+
 	if (pError == NULL)
 	{
-		gchar *pExecKey = g_key_file_get_string(pDesktopFile,
-			"Desktop Entry", "Exec", &pError);
-
-		if (pError == NULL)
+		if (pKeyValue != NULL)
 		{
-			if (pExecKey != NULL)
-			{
-				typeAction.m_exec = pExecKey;
+			value = pKeyValue;
 
-				// Does it support URLs as parameter, as described here ?
-				// http://standards.freedesktop.org/desktop-entry-spec/latest/ar01s06.html
-				if ((typeAction.m_exec.find("%u") != string::npos) ||
-					(typeAction.m_exec.find("%U") != string::npos))
-				{
-					// It does, therefore it's not exclusively local
-					typeAction.m_localOnly = false;
-				}
-
-				g_free(pExecKey);
-			}
+			g_free(pKeyValue);
 		}
-		else
-		{
-			g_error_free(pError);
-		}
 	}
 	else
 	{
 		g_error_free(pError);
 	}
 
-	g_key_file_free(pDesktopFile);
-
-	return typeAction;
+	return value;
 }
 
 MIMEAction::MIMEAction() :
+	m_multipleArgs(false),
 	m_localOnly(true)
 {
 }
 
+MIMEAction::MIMEAction(const string &desktopFile) :
+	m_multipleArgs(false),
+	m_localOnly(true),
+	m_location(desktopFile)
+{
+	GKeyFile *pDesktopFile = g_key_file_new();
+	GError *pError = NULL;
+
+	if (pDesktopFile != NULL)
+	{
+		g_key_file_load_from_file(pDesktopFile, (const gchar *)desktopFile.c_str(),
+			G_KEY_FILE_NONE, &pError);
+		if (pError == NULL)
+		{
+			m_name = getKeyValue(pDesktopFile, "Name");
+			// This may contain parameters described here :
+			// http://standards.freedesktop.org/desktop-entry-spec/latest/ar01s06.html
+			m_exec = getKeyValue(pDesktopFile, "Exec");
+			m_icon = getKeyValue(pDesktopFile, "Icon");
+			m_device = getKeyValue(pDesktopFile, "Device");
+
+			// Does it support multiple arguments ?
+			if ((m_exec.find("%U") != string::npos) ||
+				(m_exec.find("%F") != string::npos) ||
+				(m_exec.find("%D") != string::npos) ||
+				(m_exec.find("%N") != string::npos))
+			{
+				// Yes, it does
+				m_multipleArgs = true;
+			}
+			// What about URLs as parameters ?
+			if ((m_exec.find("%u") != string::npos) ||
+				(m_exec.find("%U") != string::npos))
+			{
+				// It does, therefore it's not exclusively local
+				m_localOnly = false;
+			}
+		}
+		else
+		{
+			g_error_free(pError);
+		}
+
+		g_key_file_free(pDesktopFile);
+	}
+}
+
 MIMEAction::MIMEAction(const MIMEAction &other) :
+	m_multipleArgs(other.m_multipleArgs),
 	m_localOnly(other.m_localOnly),
 	m_exec(other.m_exec)
 {
@@ -103,6 +133,7 @@
 
 MIMEAction &MIMEAction::operator=(const MIMEAction &other)
 {
+	m_multipleArgs = other.m_multipleArgs;
 	m_localOnly = other.m_localOnly;
 	m_exec = other.m_exec;
 
@@ -170,15 +201,11 @@
 					// Register the last application
 					if (pDesktopFiles[defaultApp] != NULL)
 					{
-						MIMEAction typeAction(getTypeAction(desktopFilesDirectory + string(pDesktopFiles[defaultApp])));
+						MIMEAction typeAction(desktopFilesDirectory + string(pDesktopFiles[defaultApp]));
 
 						if (typeAction.m_exec.empty() == false)
 						{
-#ifdef DEBUG
-							cout << "MIMEScanner::initialize: default for " << pMimeTypes[i]
-								<< " is " << typeAction.m_exec << endl;
-#endif
-							m_defaultActions[pMimeTypes[i]] = typeAction;
+							m_defaultActions.insert(pair<string, MIMEAction>(pMimeTypes[i], typeAction));
 						}
 					}
 

Modified: trunk/Utils/MIMEScanner.h
===================================================================
--- trunk/Utils/MIMEScanner.h	2006-06-07 11:24:05 UTC (rev 294)
+++ trunk/Utils/MIMEScanner.h	2006-06-07 13:33:52 UTC (rev 295)
@@ -26,13 +26,19 @@
 {
 	public:
 		MIMEAction();
+		MIMEAction(const std::string &desktopFile);
 		MIMEAction(const MIMEAction &other);
 		virtual ~MIMEAction();
 
 		MIMEAction &operator=(const MIMEAction &other);
 
+		bool m_multipleArgs;
 		bool m_localOnly;
+		std::string m_name;
+		std::string m_location;
 		std::string m_exec;
+		std::string m_icon;
+		std::string m_device;
 
 };
 

Modified: trunk/Utils/Makefile.am
===================================================================
--- trunk/Utils/Makefile.am	2006-06-07 11:24:05 UTC (rev 294)
+++ trunk/Utils/Makefile.am	2006-06-07 13:33:52 UTC (rev 295)
@@ -1,6 +1,7 @@
 # Process this file with automake to produce Makefile.in
 
 noinst_HEADERS = \
+	CommandLine.h \
 	Document.h \
 	Languages.h \
 	MIMEScanner.h \
@@ -26,6 +27,7 @@
 noinst_LTLIBRARIES = libUtils.la
 
 libUtils_la_SOURCES = \
+	CommandLine.cpp \
 	Document.cpp \
 	Languages.cpp \
 	MIMEScanner.cpp \
@@ -48,5 +50,5 @@
 	xdgmime/xdgmimeparent.c
 
 AM_CFLAGS = -fPIC -DXDG_PREFIX=pinot_xdg
-AM_CXXFLAGS = -fPIC @HTTP_CFLAGS@ @INDEX_CFLAGS@ @MIME_CFLAGS@ -DXDG_PREFIX=pinot_xdg
+AM_CXXFLAGS = -fPIC @HTTP_CFLAGS@ @INDEX_CFLAGS@ @MIME_CFLAGS@ @GLIBMM_CFLAGS@ -DXDG_PREFIX=pinot_xdg
 

Modified: trunk/configure.in
===================================================================
--- trunk/configure.in	2006-06-07 11:24:05 UTC (rev 294)
+++ trunk/configure.in	2006-06-07 13:33:52 UTC (rev 295)
@@ -191,6 +191,9 @@
 PKG_CHECK_MODULES(SIGCPP, sigc++-2.0 >= 2.0 )
 AC_SUBST(SIGCPP_CFLAGS)
 AC_SUBST(SIGCPP_LIBS)
+PKG_CHECK_MODULES(GLIBMM, glibmm-2.4 >= 2.6 )
+AC_SUBST(GLIBMM_CFLAGS)
+AC_SUBST(GLIBMM_LIBS)
 PKG_CHECK_MODULES(UI, gtkmm-2.4 >= 2.6 )
 UI_CFLAGS="$MOZILLANS_CFLAGS -D$MOZILLA_NS_DIR $GECKO_CFLAGS $UI_CFLAGS"
 UI_LIBS="-lpthread -L$MOZILLA_LIB_DIR -Xlinker -rpath -Xlinker $MOZILLA_LIB_DIR $GECKO_LIBS $MOZILLANS_LIBS $UI_LIBS"



From fabricecolin at berlios.de  Wed Jun  7 15:57:06 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Wed, 7 Jun 2006 15:57:06 +0200
Subject: [Pinot-svn] r296 - in trunk/UI/GTK2: . src
Message-ID: <200606071357.k57Dv6Vm003515@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-07 15:57:03 +0200 (Wed, 07 Jun 2006)
New Revision: 296

Modified:
   trunk/UI/GTK2/metase-gtk2.glade
   trunk/UI/GTK2/src/PinotSettings.cpp
   trunk/UI/GTK2/src/PinotSettings.h
   trunk/UI/GTK2/src/prefsDialog.cc
   trunk/UI/GTK2/src/prefsDialog.hh
   trunk/UI/GTK2/src/prefsDialog_glade.cc
   trunk/UI/GTK2/src/prefsDialog_glade.hh
Log:
Removed documents view mode and browser selection from the preferences as pinot
can now launch other applications.


Modified: trunk/UI/GTK2/metase-gtk2.glade
===================================================================
--- trunk/UI/GTK2/metase-gtk2.glade	2006-06-07 13:33:52 UTC (rev 295)
+++ trunk/UI/GTK2/metase-gtk2.glade	2006-06-07 13:57:03 UTC (rev 296)
@@ -965,7 +965,7 @@
 	  <child>
 	    <widget class="GtkTable" id="generalTable">
 	      <property name="visible">True</property>
-	      <property name="n_rows">6</property>
+	      <property name="n_rows">4</property>
 	      <property name="n_columns">2</property>
 	      <property name="homogeneous">False</property>
 	      <property name="row_spacing">0</property>
@@ -1000,62 +1000,6 @@
 	      </child>
 
 	      <child>
-		<widget class="GtkLabel" id="viewLabel">
-		  <property name="visible">True</property>
-		  <property name="label" translatable="yes">View documents:</property>
-		  <property name="use_underline">False</property>
-		  <property name="use_markup">False</property>
-		  <property name="justify">GTK_JUSTIFY_LEFT</property>
-		  <property name="wrap">False</property>
-		  <property name="selectable">False</property>
-		  <property name="xalign">0</property>
-		  <property name="yalign">0.5</property>
-		  <property name="xpad">4</property>
-		  <property name="ypad">4</property>
-		  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
-		  <property name="width_chars">-1</property>
-		  <property name="single_line_mode">False</property>
-		  <property name="angle">0</property>
-		</widget>
-		<packing>
-		  <property name="left_attach">0</property>
-		  <property name="right_attach">1</property>
-		  <property name="top_attach">1</property>
-		  <property name="bottom_attach">2</property>
-		  <property name="x_options">fill</property>
-		  <property name="y_options">fill</property>
-		</packing>
-	      </child>
-
-	      <child>
-		<widget class="GtkLabel" id="browserLabel">
-		  <property name="visible">True</property>
-		  <property name="label" translatable="yes">Browser:</property>
-		  <property name="use_underline">False</property>
-		  <property name="use_markup">False</property>
-		  <property name="justify">GTK_JUSTIFY_LEFT</property>
-		  <property name="wrap">False</property>
-		  <property name="selectable">False</property>
-		  <property name="xalign">0</property>
-		  <property name="yalign">0.5</property>
-		  <property name="xpad">4</property>
-		  <property name="ypad">4</property>
-		  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
-		  <property name="width_chars">-1</property>
-		  <property name="single_line_mode">False</property>
-		  <property name="angle">0</property>
-		</widget>
-		<packing>
-		  <property name="left_attach">0</property>
-		  <property name="right_attach">1</property>
-		  <property name="top_attach">2</property>
-		  <property name="bottom_attach">3</property>
-		  <property name="x_options">fill</property>
-		  <property name="y_options">fill</property>
-		</packing>
-	      </child>
-
-	      <child>
 		<widget class="GtkLabel" id="apiKeyLabel">
 		  <property agent="glademm" name="cxx_visibility">protected</property>
 		  <property name="visible">True</property>
@@ -1077,8 +1021,8 @@
 		<packing>
 		  <property name="left_attach">0</property>
 		  <property name="right_attach">1</property>
-		  <property name="top_attach">5</property>
-		  <property name="bottom_attach">6</property>
+		  <property name="top_attach">3</property>
+		  <property name="bottom_attach">4</property>
 		  <property name="x_options">fill</property>
 		  <property name="y_options">fill</property>
 		</packing>
@@ -1100,8 +1044,8 @@
 		<packing>
 		  <property name="left_attach">1</property>
 		  <property name="right_attach">2</property>
-		  <property name="top_attach">5</property>
-		  <property name="bottom_attach">6</property>
+		  <property name="top_attach">3</property>
+		  <property name="bottom_attach">4</property>
 		  <property name="x_padding">4</property>
 		  <property name="y_padding">4</property>
 		  <property name="y_options">fill</property>
@@ -1109,25 +1053,6 @@
 	      </child>
 
 	      <child>
-		<widget class="GtkComboBox" id="viewCombobox">
-		  <property agent="glademm" name="cxx_visibility">protected</property>
-		  <property name="visible">True</property>
-		  <property name="add_tearoffs">False</property>
-		  <property name="focus_on_click">True</property>
-		  <signal name="changed" handler="on_viewCombobox_changed" last_modification_time="Sun, 17 Apr 2005 05:53:46 GMT"/>
-		</widget>
-		<packing>
-		  <property name="left_attach">1</property>
-		  <property name="right_attach">2</property>
-		  <property name="top_attach">1</property>
-		  <property name="bottom_attach">2</property>
-		  <property name="x_padding">4</property>
-		  <property name="y_padding">4</property>
-		  <property name="y_options">fill</property>
-		</packing>
-	      </child>
-
-	      <child>
 		<widget class="GtkCheckButton" id="ignoreRobotsCheckbutton">
 		  <property agent="glademm" name="cxx_visibility">protected</property>
 		  <property name="visible">True</property>
@@ -1152,62 +1077,6 @@
 	      </child>
 
 	      <child>
-		<widget class="GtkHBox" id="browserHbox">
-		  <property name="visible">True</property>
-		  <property name="homogeneous">False</property>
-		  <property name="spacing">4</property>
-
-		  <child>
-		    <widget class="GtkEntry" id="browserEntry">
-		      <property agent="glademm" name="cxx_visibility">protected</property>
-		      <property name="visible">True</property>
-		      <property name="can_focus">True</property>
-		      <property name="editable">True</property>
-		      <property name="visibility">True</property>
-		      <property name="max_length">0</property>
-		      <property name="text" translatable="yes"></property>
-		      <property name="has_frame">True</property>
-		      <property name="invisible_char">*</property>
-		      <property name="activates_default">False</property>
-		    </widget>
-		    <packing>
-		      <property name="padding">0</property>
-		      <property name="expand">True</property>
-		      <property name="fill">True</property>
-		    </packing>
-		  </child>
-
-		  <child>
-		    <widget class="GtkButton" id="browserButton">
-		      <property agent="glademm" name="cxx_visibility">protected</property>
-		      <property name="visible">True</property>
-		      <property name="can_default">True</property>
-		      <property name="can_focus">True</property>
-		      <property name="label" translatable="yes">...</property>
-		      <property name="use_underline">True</property>
-		      <property name="relief">GTK_RELIEF_NORMAL</property>
-		      <property name="focus_on_click">True</property>
-		      <signal name="clicked" handler="on_browserButton_clicked" last_modification_time="Sun, 10 Aug 2003 10:20:18 GMT"/>
-		    </widget>
-		    <packing>
-		      <property name="padding">0</property>
-		      <property name="expand">False</property>
-		      <property name="fill">False</property>
-		    </packing>
-		  </child>
-		</widget>
-		<packing>
-		  <property name="left_attach">1</property>
-		  <property name="right_attach">2</property>
-		  <property name="top_attach">2</property>
-		  <property name="bottom_attach">3</property>
-		  <property name="x_padding">4</property>
-		  <property name="y_padding">4</property>
-		  <property name="y_options">fill</property>
-		</packing>
-	      </child>
-
-	      <child>
 		<widget class="GtkLabel" id="newResultsLabel">
 		  <property name="visible">True</property>
 		  <property name="label" translatable="yes">New results:</property>
@@ -1228,8 +1097,8 @@
 		<packing>
 		  <property name="left_attach">0</property>
 		  <property name="right_attach">1</property>
-		  <property name="top_attach">3</property>
-		  <property name="bottom_attach">4</property>
+		  <property name="top_attach">1</property>
+		  <property name="bottom_attach">2</property>
 		  <property name="x_options">fill</property>
 		  <property name="y_options">fill</property>
 		</packing>
@@ -1256,8 +1125,8 @@
 		<packing>
 		  <property name="left_attach">0</property>
 		  <property name="right_attach">1</property>
-		  <property name="top_attach">4</property>
-		  <property name="bottom_attach">5</property>
+		  <property name="top_attach">2</property>
+		  <property name="bottom_attach">3</property>
 		  <property name="x_options">fill</property>
 		  <property name="y_options">fill</property>
 		</packing>
@@ -1279,8 +1148,8 @@
 		<packing>
 		  <property name="left_attach">1</property>
 		  <property name="right_attach">2</property>
-		  <property name="top_attach">4</property>
-		  <property name="bottom_attach">5</property>
+		  <property name="top_attach">2</property>
+		  <property name="bottom_attach">3</property>
 		  <property name="x_padding">4</property>
 		  <property name="y_padding">4</property>
 		  <property name="y_options">fill</property>
@@ -1298,8 +1167,8 @@
 		<packing>
 		  <property name="left_attach">1</property>
 		  <property name="right_attach">2</property>
-		  <property name="top_attach">3</property>
-		  <property name="bottom_attach">4</property>
+		  <property name="top_attach">1</property>
+		  <property name="bottom_attach">2</property>
 		  <property name="x_padding">4</property>
 		  <property name="y_padding">4</property>
 		  <property name="y_options">fill</property>

Modified: trunk/UI/GTK2/src/PinotSettings.cpp
===================================================================
--- trunk/UI/GTK2/src/PinotSettings.cpp	2006-06-07 13:33:52 UTC (rev 295)
+++ trunk/UI/GTK2/src/PinotSettings.cpp	2006-06-07 13:57:03 UTC (rev 296)
@@ -82,7 +82,6 @@
 PinotSettings PinotSettings::m_instance;
 
 PinotSettings::PinotSettings() :
-	m_browseResults(false),
 	m_xPos(0),
 	m_yPos(0),
 	m_width(0),
@@ -300,10 +299,6 @@
 				{
 					loadQueries(pElem);
 				}
-				else if (nodeName == "results")
-				{
-					loadResults(pElem);
-				}
 				else if (nodeName == "label")
 				{
 					loadLabels(pElem);
@@ -577,50 +572,6 @@
 	return true;
 }
 
-bool PinotSettings::loadResults(const Element *pElem)
-{
-	if (pElem == NULL)
-	{
-		return false;
-	}
-
-	Node::NodeList childNodes = pElem->get_children();
-	if (childNodes.empty() == true)
-	{
-		return false;
-	}
-
-	for (Node::NodeList::iterator iter = childNodes.begin(); iter != childNodes.end(); ++iter)
-	{
-		Node *pNode = (*iter);
-		Element *pElem = dynamic_cast<Element*>(pNode);
-		if (pElem == NULL)
-		{
-			continue;
-		}
-
-		string nodeName = pElem->get_name();
-		string nodeContent = getElementContent(pElem);
-		if (nodeName == "viewmode")
-		{
-			if (nodeContent == "SOURCE")
-			{
-				m_browseResults = false;
-			}
-			else
-			{
-				m_browseResults = true;
-			}
-		}
-		else if (nodeName == "browser")
-		{
-			m_browserCommand = nodeContent;
-		}
-	}
-
-	return true;
-}
-
 bool PinotSettings::loadLabels(const Element *pElem)
 {
 	if (pElem == NULL)
@@ -900,14 +851,6 @@
 		addChildElement(pElem, "index", (queryIter->second.getIndexResults() ? "ALL" : "NONE"));
 		addChildElement(pElem, "label", queryIter->second.getLabelName());
 	}
-	pElem = pRootElem->add_child("results");
-	if (pElem == NULL)
-	{
-		return false;
-	}
-	// Results view options
-	addChildElement(pElem, "viewmode", (m_browseResults ? "BROWSE" : "SOURCE"));
-	addChildElement(pElem, "browser", m_browserCommand);
 	// Labels
 	for (set<string>::iterator labelIter = m_labels.begin(); labelIter != m_labels.end(); ++labelIter)
 	{

Modified: trunk/UI/GTK2/src/PinotSettings.h
===================================================================
--- trunk/UI/GTK2/src/PinotSettings.h	2006-06-07 13:33:52 UTC (rev 295)
+++ trunk/UI/GTK2/src/PinotSettings.h	2006-06-07 13:57:03 UTC (rev 296)
@@ -141,8 +141,6 @@
 		Glib::ustring m_indexLocation;
 		Glib::ustring m_mailIndexLocation;
 		Glib::ustring m_historyDatabase;
-		bool m_browseResults;
-		Glib::ustring m_browserCommand;
 		int m_xPos;
 		int m_yPos;
 		int m_width;
@@ -170,7 +168,6 @@
 		bool loadIndexes(const xmlpp::Element *pElem);
 		bool loadEngineChannels(const xmlpp::Element *pElem);
 		bool loadQueries(const xmlpp::Element *pElem);
-		bool loadResults(const xmlpp::Element *pElem);
 		bool loadLabels(const xmlpp::Element *pElem);
 		bool loadColour(const xmlpp::Element *pElem);
 		bool loadMailAccounts(const xmlpp::Element *pElem);

Modified: trunk/UI/GTK2/src/prefsDialog.cc
===================================================================
--- trunk/UI/GTK2/src/prefsDialog.cc	2006-06-07 13:33:52 UTC (rev 295)
+++ trunk/UI/GTK2/src/prefsDialog.cc	2006-06-07 13:57:03 UTC (rev 296)
@@ -41,28 +41,14 @@
 	prefsDialog_glade(),
 	m_settings(PinotSettings::getInstance())
 {
-	// Associate the columns model to the view combo
-	m_refViewTree = ListStore::create(m_viewColumns);
-	viewCombobox->set_model(m_refViewTree);
-	viewCombobox->pack_start(m_viewColumns.m_name);
-	// Populate
-	populate_comboboxes();
-
 	// Initialize widgets
 	// Ignore robots directives
 	ignoreRobotsCheckbutton->set_active(m_settings.m_ignoreRobotsDirectives);
+	// Google API key
 	if (m_settings.m_googleAPIKey.empty() == false)
 	{
 		apiKeyEntry->set_text(m_settings.m_googleAPIKey);
 	}
-	// Browser command
-	if (m_settings.m_browserCommand.empty() == false)
-	{
-		browserEntry->set_text(m_settings.m_browserCommand);
-	}
-	// Browser entry field and button
-	browserEntry->set_sensitive(m_settings.m_browseResults);
-	browserButton->set_sensitive(m_settings.m_browseResults);
 	// New results colour
 	newResultsColorbutton->set_color(m_settings.m_newResultsColour);
 	// Enable terms suggestion
@@ -112,25 +98,6 @@
 	return m_deletedMail;
 }
 
-void prefsDialog::populate_comboboxes()
-{
-	TreeModel::iterator iter = m_refViewTree->append();
-	TreeModel::Row row = *iter;
-	row[m_viewColumns.m_name] = _("In internal viewer");
-	iter = m_refViewTree->append();
-	row = *iter;
-	row[m_viewColumns.m_name] = _("In browser");
-	// Default results view
-	if (m_settings.m_browseResults == false)
-	{
-		viewCombobox->set_active(0);
-	}
-	else
-	{
-		viewCombobox->set_active(1);
-	}
-}
-
 void prefsDialog::populate_labelsTreeview()
 {
 	TreeModel::iterator iter;
@@ -282,19 +249,6 @@
 {
 	// Synchronise widgets with settings
 	m_settings.m_ignoreRobotsDirectives = ignoreRobotsCheckbutton->get_active();
-	// Default results view mode
-	int viewMode = viewCombobox->get_active_row_number();
-	if (viewMode == 0)
-	{
-		// Source
-		m_settings.m_browseResults = false;
-	}
-	else
-	{
-		// Browser
-		m_settings.m_browseResults = true;
-	}
-	m_settings.m_browserCommand = browserEntry->get_text();
 	m_settings.m_newResultsColour = newResultsColorbutton->get_color();
 	m_settings.m_suggestQueryTerms = enableCompletionCheckbutton->get_active();
 	m_settings.m_googleAPIKey = apiKeyEntry->get_text();
@@ -304,29 +258,6 @@
 	save_mailTreeview();
 }
 
-void prefsDialog::on_viewCombobox_changed()
-{
-	bool browseResults = true;
-
-	// Enable the browser entry field and button only if browsing is enabled
-	if (viewCombobox->get_active_row_number() == 0)
-	{
-		browseResults = false;
-	}
-
-	browserEntry->set_sensitive(browseResults);
-	browserButton->set_sensitive(browseResults);
-}
-
-void prefsDialog::on_browserButton_clicked()
-{
-	ustring browserCmd = browserEntry->get_text();
-	if (select_file_name(*this, _("Browser location"), browserCmd, true) == true)
-	{
-		browserEntry->set_text(browserCmd);
-	}
-}
-
 void prefsDialog::on_addLabelButton_clicked()
 {
 	// Now create a new entry in the labels list

Modified: trunk/UI/GTK2/src/prefsDialog.hh
===================================================================
--- trunk/UI/GTK2/src/prefsDialog.hh	2006-06-07 13:33:52 UTC (rev 295)
+++ trunk/UI/GTK2/src/prefsDialog.hh	2006-06-07 13:57:03 UTC (rev 296)
@@ -42,8 +42,6 @@
 
 protected:
 	virtual void on_prefsOkbutton_clicked();
-	virtual void on_viewCombobox_changed();
-	virtual void on_browserButton_clicked();
 	virtual void on_addLabelButton_clicked();
 	virtual void on_removeLabelButton_clicked();
 	virtual bool on_mailTreeview_button_press_event(GdkEventButton *ev);
@@ -51,7 +49,6 @@
 	virtual void on_editAccountButton_clicked();
 	virtual void on_removeAccountButton_clicked();
 
-	void populate_comboboxes();
 	void populate_labelsTreeview();
 	bool save_labelsTreeview();
 	void populate_mailTreeview();

Modified: trunk/UI/GTK2/src/prefsDialog_glade.cc
===================================================================
--- trunk/UI/GTK2/src/prefsDialog_glade.cc	2006-06-07 13:33:52 UTC (rev 295)
+++ trunk/UI/GTK2/src/prefsDialog_glade.cc	2006-06-07 13:57:03 UTC (rev 296)
@@ -1,9 +1,9 @@
-// generated 2006/3/18 19:48:01 SGT by fabrice at amra.dyndns.org.(none)
-// using glademm V2.6.0
+// generated 2006/6/7 21:55:30 SGT by fabrice at amra.dyndns.org.(none)
+// using glademm V2.12.1
 //
 // DO NOT EDIT THIS FILE ! It was created using
 // glade-- /home/fabrice/Projects/MetaSE/pinot/UI/GTK2/metase-gtk2.glade
-// for gtk 2.6.10 and gtkmm 2.6.2
+// for gtk 2.8.17 and gtkmm 2.8.3
 //
 // Please modify the corresponding derived classes in ./src/prefsDialog.cc
 
@@ -25,18 +25,11 @@
 #  else
 #    define N_(String) (String)
 #  endif
-#else
-#  define textdomain(String) (String)
-#  define gettext(String) (String)
-#  define dgettext(Domain,Message) (Message)
-#  define dcgettext(Domain,Message,Type) (Message)
-#  define bindtextdomain(Domain,Directory) (Domain)
-#  define _(String) (String)
-#  define N_(String) (String)
 #endif
 #include <gtkmmconfig.h>
 #if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
 #include <sigc++/compatibility.h>
+#include <sigc++/bind.h>
 #define GMM_GTKMM_22_24(a,b) b
 #else //gtkmm 2.2
 #define GMM_GTKMM_22_24(a,b) a
@@ -46,12 +39,22 @@
 #include <gtkmm/accelgroup.h>
 #include <gtkmm/buttonbox.h>
 #include <gtkmm/label.h>
-#include <gtkmm/box.h>
 #include <gtkmm/table.h>
 #include <gtkmm/scrolledwindow.h>
 #include <gtkmm/image.h>
+#include <gtkmm/box.h>
 #include <gtkmm/alignment.h>
+#ifndef ENABLE_NLS
+#  define textdomain(String) (String)
+#  define gettext(String) (String)
+#  define dgettext(Domain,Message) (Message)
+#  define dcgettext(Domain,Message,Type) (Message)
+#  define bindtextdomain(Domain,Directory) (Domain)
+#  define _(String) (String)
+#  define N_(String) (String)
+#endif
 
+
 prefsDialog_glade::prefsDialog_glade(
 )
 {  prefsDialog = this;
@@ -60,16 +63,10 @@
    prefsOkbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-ok")));
    
    Gtk::Label *robotsLabel = Gtk::manage(new class Gtk::Label(_("HTTP crawling:")));
-   Gtk::Label *viewLabel = Gtk::manage(new class Gtk::Label(_("View documents:")));
-   Gtk::Label *browserLabel = Gtk::manage(new class Gtk::Label(_("Browser:")));
    apiKeyLabel = Gtk::manage(new class Gtk::Label(_("Google API key:")));
    apiKeyEntry = Gtk::manage(new class Gtk::Entry());
-   viewCombobox = Gtk::manage(new class Gtk::ComboBox());
    ignoreRobotsCheckbutton = Gtk::manage(new class Gtk::CheckButton(_("Ignore robots.txt and Robots META tag")));
-   browserEntry = Gtk::manage(new class Gtk::Entry());
-   browserButton = Gtk::manage(new class Gtk::Button(_("...")));
    
-   Gtk::HBox *browserHbox = Gtk::manage(new class Gtk::HBox(false, 4));
    Gtk::Label *newResultsLabel = Gtk::manage(new class Gtk::Label(_("New results:")));
    Gtk::Label *queriesLabel = Gtk::manage(new class Gtk::Label(_("Queries:")));
    enableCompletionCheckbutton = Gtk::manage(new class Gtk::CheckButton(_("Enable search terms suggestion")));
@@ -127,18 +124,6 @@
    robotsLabel->set_line_wrap(false);
    robotsLabel->set_use_markup(false);
    robotsLabel->set_selectable(false);
-   viewLabel->set_alignment(0,0.5);
-   viewLabel->set_padding(4,4);
-   viewLabel->set_justify(Gtk::JUSTIFY_LEFT);
-   viewLabel->set_line_wrap(false);
-   viewLabel->set_use_markup(false);
-   viewLabel->set_selectable(false);
-   browserLabel->set_alignment(0,0.5);
-   browserLabel->set_padding(4,4);
-   browserLabel->set_justify(Gtk::JUSTIFY_LEFT);
-   browserLabel->set_line_wrap(false);
-   browserLabel->set_use_markup(false);
-   browserLabel->set_selectable(false);
    apiKeyLabel->set_alignment(0,0.5);
    apiKeyLabel->set_padding(4,4);
    apiKeyLabel->set_justify(Gtk::JUSTIFY_LEFT);
@@ -155,17 +140,6 @@
    ignoreRobotsCheckbutton->set_relief(Gtk::RELIEF_NORMAL);
    ignoreRobotsCheckbutton->set_mode(true);
    ignoreRobotsCheckbutton->set_active(false);
-   browserEntry->set_flags(Gtk::CAN_FOCUS);
-   browserEntry->set_visibility(true);
-   browserEntry->set_editable(true);
-   browserEntry->set_max_length(0);
-   browserEntry->set_has_frame(true);
-   browserEntry->set_activates_default(false);
-   browserButton->set_flags(Gtk::CAN_FOCUS);
-   browserButton->set_flags(Gtk::CAN_DEFAULT);
-   browserButton->set_relief(Gtk::RELIEF_NORMAL);
-   browserHbox->pack_start(*browserEntry);
-   browserHbox->pack_start(*browserButton, Gtk::PACK_SHRINK, 0);
    newResultsLabel->set_alignment(0,0.5);
    newResultsLabel->set_padding(4,4);
    newResultsLabel->set_justify(Gtk::JUSTIFY_LEFT);
@@ -186,17 +160,13 @@
    generalTable->set_row_spacings(0);
    generalTable->set_col_spacings(0);
    generalTable->attach(*robotsLabel, 0, 1, 0, 1, Gtk::FILL, Gtk::FILL, 0, 0);
-   generalTable->attach(*viewLabel, 0, 1, 1, 2, Gtk::FILL, Gtk::FILL, 0, 0);
-   generalTable->attach(*browserLabel, 0, 1, 2, 3, Gtk::FILL, Gtk::FILL, 0, 0);
-   generalTable->attach(*apiKeyLabel, 0, 1, 5, 6, Gtk::FILL, Gtk::FILL, 0, 0);
-   generalTable->attach(*apiKeyEntry, 1, 2, 5, 6, Gtk::EXPAND|Gtk::FILL, Gtk::FILL, 4, 4);
-   generalTable->attach(*viewCombobox, 1, 2, 1, 2, Gtk::EXPAND|Gtk::FILL, Gtk::FILL, 4, 4);
+   generalTable->attach(*apiKeyLabel, 0, 1, 3, 4, Gtk::FILL, Gtk::FILL, 0, 0);
+   generalTable->attach(*apiKeyEntry, 1, 2, 3, 4, Gtk::EXPAND|Gtk::FILL, Gtk::FILL, 4, 4);
    generalTable->attach(*ignoreRobotsCheckbutton, 1, 2, 0, 1, Gtk::EXPAND|Gtk::FILL, Gtk::FILL, 4, 4);
-   generalTable->attach(*browserHbox, 1, 2, 2, 3, Gtk::EXPAND|Gtk::FILL, Gtk::FILL, 4, 4);
-   generalTable->attach(*newResultsLabel, 0, 1, 3, 4, Gtk::FILL, Gtk::FILL, 0, 0);
-   generalTable->attach(*queriesLabel, 0, 1, 4, 5, Gtk::FILL, Gtk::FILL, 0, 0);
-   generalTable->attach(*enableCompletionCheckbutton, 1, 2, 4, 5, Gtk::EXPAND|Gtk::FILL, Gtk::FILL, 4, 4);
-   generalTable->attach(*newResultsColorbutton, 1, 2, 3, 4, Gtk::EXPAND|Gtk::FILL, Gtk::FILL, 4, 4);
+   generalTable->attach(*newResultsLabel, 0, 1, 1, 2, Gtk::FILL, Gtk::FILL, 0, 0);
+   generalTable->attach(*queriesLabel, 0, 1, 2, 3, Gtk::FILL, Gtk::FILL, 0, 0);
+   generalTable->attach(*enableCompletionCheckbutton, 1, 2, 2, 3, Gtk::EXPAND|Gtk::FILL, Gtk::FILL, 4, 4);
+   generalTable->attach(*newResultsColorbutton, 1, 2, 1, 2, Gtk::EXPAND|Gtk::FILL, Gtk::FILL, 4, 4);
    generalLabel->set_alignment(0.5,0.5);
    generalLabel->set_padding(0,0);
    generalLabel->set_justify(Gtk::JUSTIFY_LEFT);
@@ -343,15 +313,9 @@
    prefsCancelbutton->show();
    prefsOkbutton->show();
    robotsLabel->show();
-   viewLabel->show();
-   browserLabel->show();
    apiKeyLabel->show();
    apiKeyEntry->show();
-   viewCombobox->show();
    ignoreRobotsCheckbutton->show();
-   browserEntry->show();
-   browserButton->show();
-   browserHbox->show();
    newResultsLabel->show();
    queriesLabel->show();
    enableCompletionCheckbutton->show();
@@ -392,8 +356,6 @@
    prefsNotebook->show();
    prefsDialog->show();
    prefsOkbutton->signal_clicked().connect(SigC::slot(*this, &prefsDialog_glade::on_prefsOkbutton_clicked), false);
-   viewCombobox->signal_changed().connect(SigC::slot(*this, &prefsDialog_glade::on_viewCombobox_changed), false);
-   browserButton->signal_clicked().connect(SigC::slot(*this, &prefsDialog_glade::on_browserButton_clicked), false);
    addLabelButton->signal_clicked().connect(SigC::slot(*this, &prefsDialog_glade::on_addLabelButton_clicked), false);
    removeLabelButton->signal_clicked().connect(SigC::slot(*this, &prefsDialog_glade::on_removeLabelButton_clicked), false);
    mailTreeview->signal_button_press_event().connect(SigC::slot(*this, &prefsDialog_glade::on_mailTreeview_button_press_event), false);

Modified: trunk/UI/GTK2/src/prefsDialog_glade.hh
===================================================================
--- trunk/UI/GTK2/src/prefsDialog_glade.hh	2006-06-07 13:33:52 UTC (rev 295)
+++ trunk/UI/GTK2/src/prefsDialog_glade.hh	2006-06-07 13:57:03 UTC (rev 296)
@@ -1,9 +1,9 @@
-// generated 2006/3/18 19:48:01 SGT by fabrice at amra.dyndns.org.(none)
-// using glademm V2.6.0
+// generated 2006/6/7 21:55:30 SGT by fabrice at amra.dyndns.org.(none)
+// using glademm V2.12.1
 //
 // DO NOT EDIT THIS FILE ! It was created using
 // glade-- /home/fabrice/Projects/MetaSE/pinot/UI/GTK2/metase-gtk2.glade
-// for gtk 2.6.10 and gtkmm 2.6.2
+// for gtk 2.8.17 and gtkmm 2.8.3
 //
 // Please modify the corresponding derived classes in ./src/prefsDialog.hh and./src/prefsDialog.cc
 
@@ -35,7 +35,6 @@
 #include <gtkmm/button.h>
 #include <gtkmm/label.h>
 #include <gtkmm/entry.h>
-#include <gtkmm/combobox.h>
 #include <gtkmm/checkbutton.h>
 #include <gtkmm/colorbutton.h>
 #include <gtkmm/treeview.h>
@@ -52,10 +51,7 @@
         class Gtk::Button * prefsOkbutton;
         class Gtk::Label * apiKeyLabel;
         class Gtk::Entry * apiKeyEntry;
-        class Gtk::ComboBox * viewCombobox;
         class Gtk::CheckButton * ignoreRobotsCheckbutton;
-        class Gtk::Entry * browserEntry;
-        class Gtk::Button * browserButton;
         class Gtk::CheckButton * enableCompletionCheckbutton;
         class Gtk::ColorButton * newResultsColorbutton;
         class Gtk::TreeView * labelsTreeview;
@@ -72,8 +68,6 @@
         ~prefsDialog_glade();
 private:
         virtual void on_prefsOkbutton_clicked() = 0;
-        virtual void on_viewCombobox_changed() = 0;
-        virtual void on_browserButton_clicked() = 0;
         virtual void on_addLabelButton_clicked() = 0;
         virtual void on_removeLabelButton_clicked() = 0;
         virtual bool on_mailTreeview_button_press_event(GdkEventButton *ev) = 0;



From fabricecolin at berlios.de  Wed Jun  7 16:00:45 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Wed, 7 Jun 2006 16:00:45 +0200
Subject: [Pinot-svn] r297 - trunk/UI/GTK2/src
Message-ID: <200606071400.k57E0j6k004253@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-07 16:00:12 +0200 (Wed, 07 Jun 2006)
New Revision: 297

Modified:
   trunk/UI/GTK2/src/mainWindow.cc
Log:
Removed code relative to the external browser setting.
HTML documents are viewed with the internal viewer; for others, use
MIMEScanner::getDefaultAction() and CommandLine::runAsync() to launch
the type's default application.


Modified: trunk/UI/GTK2/src/mainWindow.cc
===================================================================
--- trunk/UI/GTK2/src/mainWindow.cc	2006-06-07 13:57:03 UTC (rev 296)
+++ trunk/UI/GTK2/src/mainWindow.cc	2006-06-07 14:00:12 UTC (rev 297)
@@ -32,9 +32,11 @@
 #include <gtkmm/clipboard.h>
 #include <gtkmm/main.h>
 
+#include "CommandLine.h"
 #include "HtmlTokenizer.h"
 #include "IndexedDocument.h"
 #include "TimeConverter.h"
+#include "MIMEScanner.h"
 #include "Url.h"
 #include "TokenizerFactory.h"
 #include "QueryHistory.h"
@@ -195,16 +197,12 @@
 
 	// Create an HTML renderer
 	m_pHtmlView = new HtmlView(NULL);
-	if (m_settings.m_browseResults == false)
-	{
-		string startPage("file://");
-		startPage += PREFIX;
-		startPage += "/share/pinot/index.html";
-		DocumentInfo docInfo("", startPage, "", "");
+	string startPage("file://");
+	startPage += PREFIX;
+	startPage += "/share/pinot/index.html";
+	DocumentInfo docInfo("", startPage, "", "");
+	view_document(docInfo, true);
 
-		view_document(docInfo, true);
-	}
-
 	// Gray out menu items
 	editQueryButton->set_sensitive(false);
 	removeQueryButton->set_sensitive(false);
@@ -475,13 +473,10 @@
 
 		// Enable these menu items
 		viewresults1->set_sensitive(isViewable);
-		if (m_settings.m_browseResults == false)
+		if ((protocol == "http") ||
+			(protocol == "https"))
 		{
-			if ((protocol == "http") ||
-				(protocol == "https"))
-			{
-				isCached = true;
-			}
+			isCached = true;
 		}
 		viewcache1->set_sensitive(isCached);
 		indexresults1->set_sensitive(isIndexable);
@@ -522,19 +517,13 @@
 		(pIndexTree->getSelection(documentsList) == true))
 	{
 		bool isDocumentsIndex = true;
-		bool canViewDocument = true;
 
 		// Enable these menu items, unless the index is not the documents index
 		if (indexName != _("My Documents"))
 		{
 			isDocumentsIndex = false;
 		}
-		if ((indexName == _("My Email")) &&
-			(m_settings.m_browseResults == true))
-		{
-			canViewDocument = false;
-		}
-		viewfromindex1->set_sensitive(canViewDocument);
+		viewfromindex1->set_sensitive(true);
 		refreshindex1->set_sensitive(isDocumentsIndex);
 		unindex1->set_sensitive(isDocumentsIndex);
 		showfromindex1->set_sensitive(true);
@@ -951,31 +940,27 @@
 			if ((pData != NULL) &&
 				(dataLength > 0))
 			{
-				// Make sure settings haven't changed in the meantime
-				if (m_settings.m_browseResults == false)
+				ustring viewName = _("View");
+
+				// Is there still a view page ?
+				ViewPage *pViewPage = dynamic_cast<ViewPage*>(get_page(viewName, NotebookPageBox::VIEW_PAGE));
+				if (pViewPage != NULL)
 				{
-					ustring viewName = _("View");
+					// The page may be hidden
+					pViewPage->show();
+				}
 
-					// Is there still a view page ?
-					ViewPage *pViewPage = dynamic_cast<ViewPage*>(get_page(viewName, NotebookPageBox::VIEW_PAGE));
-					if (pViewPage != NULL)
+				int pageNum = get_page_number(viewName, NotebookPageBox::VIEW_PAGE);
+				if (pageNum >= 0)
+				{
+					// Display the URL in the View tab
+					if (m_pHtmlView->renderData(pData, dataLength, url) == true)
 					{
-						// The page may be hidden
-						pViewPage->show();
+						//viewstop1->set_sensitive(true);
+						set_status(to_utf8(url));
 					}
 
-					int pageNum = get_page_number(viewName, NotebookPageBox::VIEW_PAGE);
-					if (pageNum >= 0)
-					{
-						// Display the URL in the View tab
-						if (m_pHtmlView->renderData(pData, dataLength, url) == true)
-						{
-							//viewstop1->set_sensitive(true);
-							set_status(to_utf8(url));
-						}
-
-						m_pNotebook->set_current_page(pageNum);
-					}
+					m_pNotebook->set_current_page(pageNum);
 				}
 			}
 		}
@@ -1240,8 +1225,6 @@
 //
 void mainWindow::on_configure_activate()
 {
-	bool useExternalBrowser = m_settings.m_browseResults;
-
 	prefsDialog prefsBox;
 	prefsBox.show();
 	if (prefsBox.run() != RESPONSE_OK)
@@ -1285,26 +1268,6 @@
 		viewcache1->show();
 	}
 
-	// Do the changes affect the View tab ?
-	if (useExternalBrowser != m_settings.m_browseResults)
-	{
-		if (m_settings.m_browseResults == true)
-		{
-			// Close the existing view page
-			on_close_page(_("View"), NotebookPageBox::VIEW_PAGE);
-		}
-		else
-		{
-			string startPage("file://");
-			startPage += PREFIX;
-			startPage += "/share/pinot/index.html";
-			DocumentInfo docInfo("", startPage, "", "");
-
-			// Reopen the start page
-			view_document(docInfo, true);
-		}
-	}
-
 	// Any labels to delete or rename ?
 	const set<string> &labelsToDelete = prefsBox.getLabelsToDelete();
 	const std::map<string, string> &labelsToRename = prefsBox.getLabelsToRename();
@@ -2862,6 +2825,7 @@
 bool mainWindow::view_document(const DocumentInfo &docInfo, bool internalViewerOnly)
 {
 	string url(docInfo.getLocation());
+	string mimeType(docInfo.getType());
 
 	if (url.empty() == true)
 	{
@@ -2869,92 +2833,99 @@
 		return false;
 	}
 
-	// Is browsing enabled ?
-	if ((internalViewerOnly == false) &&
-		(m_settings.m_browseResults == true))
+	if (mimeType.empty() == true)
 	{
-		// Point user-defined browser to that URL
-		if (m_settings.m_browserCommand.empty() == true)
-		{
-			set_status(_("No browser configured to view results"));
-			return false;
-		}
+		Url docUrl(url);
 
-		string shellCommand = from_utf8(m_settings.m_browserCommand);
-		// FIXME: do substitutions
-		shellCommand += " \"";
-		shellCommand += url;
-		shellCommand += "\" &";
-		if ((url.empty() == true) ||
-			(system(shellCommand.c_str()) == -1))
-		{
-			ustring status = _("Couldn't browse URL:");
-			status += " ";
-			status += Glib::strerror(errno);
-			set_status(status);
-		}
+		// Scan for the MIME type
+		mimeType = MIMEScanner::scanUrl(docUrl);
 	}
-	else
+
+	Url urlObj(url);
+
+	// FIXME: there should be a way to know which protocols can be viewed/indexed
+	if (urlObj.getProtocol() == "mailbox")
 	{
-		Url urlObj(url);
+		// Get that message
+		start_thread(new DownloadingThread(docInfo, false));
+	}
+	else if ((internalViewerOnly == true) ||
+		(mimeType.find("/html") != string::npos))
+	{
+		ViewPage *pViewPage = NULL;
+		ustring viewName = _("View");
+		int pageNum = -1;
 
-		// FIXME: there should be a way to know which protocols can be viewed/indexed
-		if (urlObj.getProtocol() == "mailbox")
+		// Is there already a view page ?
+		pViewPage = dynamic_cast<ViewPage*>(get_page(viewName, NotebookPageBox::VIEW_PAGE));
+		if (pViewPage != NULL)
 		{
-			// Get that message
-			start_thread(new DownloadingThread(docInfo, false));
+			pageNum = get_page_number(viewName, NotebookPageBox::VIEW_PAGE);
+			// The page may be hidden
+			pViewPage->show();
+			// FIXME: reorder pages
 		}
 		else
 		{
-			ViewPage *pViewPage = NULL;
-			ustring viewName = _("View");
-			int pageNum = -1;
+			NotebookTabBox *pTab = manage(new NotebookTabBox(viewName,
+				NotebookPageBox::VIEW_PAGE));
+			pTab->getCloseSignal().connect(
+				SigC::slot(*this, &mainWindow::on_close_page));
 
-			// Is there already a view page ?
-			pViewPage = dynamic_cast<ViewPage*>(get_page(viewName, NotebookPageBox::VIEW_PAGE));
-			if (pViewPage != NULL)
+			// Position everything
+			pViewPage = manage(new ViewPage(viewName, m_pHtmlView, m_settings));
+
+			// Append the page
+			if (m_state.write_lock_lists(11) == true)
 			{
-				pageNum = get_page_number(viewName, NotebookPageBox::VIEW_PAGE);
-				// The page may be hidden
-				pViewPage->show();
-				// FIXME: reorder pages
-			}
-			else
-			{
-				NotebookTabBox *pTab = manage(new NotebookTabBox(viewName,
-					NotebookPageBox::VIEW_PAGE));
-				pTab->getCloseSignal().connect(
-					SigC::slot(*this, &mainWindow::on_close_page));
+				pageNum = m_pNotebook->append_page(*pViewPage, *pTab);
+				m_pNotebook->pages().back().set_tab_label_packing(false, true, Gtk::PACK_START);
 
-				// Position everything
-				pViewPage = manage(new ViewPage(viewName, m_pHtmlView, m_settings));
-
-				// Append the page
-				if (m_state.write_lock_lists(11) == true)
-				{
-					pageNum = m_pNotebook->append_page(*pViewPage, *pTab);
-					m_pNotebook->pages().back().set_tab_label_packing(false, true, Gtk::PACK_START);
-
-					m_state.unlock_lists();
-				}
+				m_state.unlock_lists();
 			}
+		}
 
-			if (pageNum >= 0)
+		if (pageNum >= 0)
+		{
+			// Display the URL
+			m_pNotebook->set_current_page(pageNum);
+			if (m_pHtmlView->renderUrl(url) == true)
 			{
-				// Display the URL
-				m_pNotebook->set_current_page(pageNum);
-				if (m_pHtmlView->renderUrl(url) == true)
-				{
-					//viewstop1->set_sensitive(true);
-				}
-				ustring status = _("Viewing");
-				status += " ";
-				status += to_utf8(m_pHtmlView->getLocation());
-				set_status(status);
+				//viewstop1->set_sensitive(true);
 			}
+			ustring status = _("Viewing");
+			status += " ";
+			status += to_utf8(m_pHtmlView->getLocation());
+			set_status(status);
 		}
 	}
+	else
+	{
+		vector<string> arguments;
+		MIMEAction action;
 
+		if (MIMEScanner::getDefaultAction(mimeType, action) == false)
+		{
+			ustring status = _("No application defined for type ");
+			status += " ";
+			status += mimeType;
+			set_status(status);
+			return false;
+		}
+
+		arguments.push_back(url);
+
+		// Run the default program for this type
+		if (CommandLine::runAsync(action, arguments) == false)
+		{
+			ustring status = _("Couldn't view ");
+			status += " ";
+			status += url;
+			set_status(status);
+			return false;
+		}
+	}
+
 	// Record this into the history
 	ViewHistory viewHistory(m_settings.m_historyDatabase);
 	if (viewHistory.hasItem(url) == false)



From fabricecolin at berlios.de  Wed Jun  7 16:07:32 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Wed, 7 Jun 2006 16:07:32 +0200
Subject: [Pinot-svn] r298 - trunk
Message-ID: <200606071407.k57E7WqY005387@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-07 16:06:21 +0200 (Wed, 07 Jun 2006)
New Revision: 298

Modified:
   trunk/NEWS
   trunk/TODO
   trunk/configure.in
Log:
Being optimistic and preparing for next release :-)


Modified: trunk/NEWS
===================================================================
--- trunk/NEWS	2006-06-07 14:00:12 UTC (rev 297)
+++ trunk/NEWS	2006-06-07 14:06:21 UTC (rev 298)
@@ -1,3 +1,15 @@
+??? version_0_4_9
+General :
+ - able to find the default application for a given MIME type
+Tokenize :
+ - better HTML tokenizer
+UI :
+ - fixed exit time crash when View is the tab being shown
+ - titles in documents lists are no longer truncated
+ - if import fails, the progress bar displays the error message
+ - the internal viewer is used only for HTML; for all other types, the default
+  application is launched
+
 2006/05/25 version_0_4_8
 Monitor :
  - replaced FAM/Gamin with inotify

Modified: trunk/TODO
===================================================================
--- trunk/TODO	2006-06-07 14:00:12 UTC (rev 297)
+++ trunk/TODO	2006-06-07 14:06:21 UTC (rev 298)
@@ -3,11 +3,9 @@
 - Get rid of dead code/classes/methods...
 - Advertise service via Rendezvous
 - Check for leaks with valgrind (eg --tool=memcheck -v --leak-check=yes --show-reachable=yes ...)
-- Don't use system(), fork and exec, especially for the external browser
-- Find out how to determine what application to use for a given MIME type and drop internal browser
-  Consult the applications/types mappings in /usr/share/applications/defaults.list mimeinfo.cache
+- Replace calls to system() with CommandLine::runAsync()
+- Drop internal browser
 - MIMEScanner should also return parent types so that we don't filter out types unnecessarily
-- Make sure everything works with URLs/path names that include spaces or unusual characters
 - Distribute pinot.pot
 - Add link to this to explain why FC5 version is linked against mozilla, not firefox
   https://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=149828
@@ -15,10 +13,9 @@
 Tokenize
 - Allow to cache documents that had to be converted ? eg PDF, MS Word
 - PDF tokenizer with poppler
-- HTML tokenizer with libtidy or libxml2
 - WordPerfect tokenizer with libwpd
 - Spin tokenizers into separate project, a la libextractor
-- Check whether pdftohtml flatens text in PDF documents that have columns.
+- Check whether pdftohtml flattens text in PDF documents that have columns.
   Using "pdftops | ps2ascii" may work (seems to work slightly better than
   "pdf2ps ..." !)
 
@@ -58,7 +55,7 @@
 - Xapian Query objects will become serializable at some point, this will be useful
   for stored queries
 - Think about indexing archives (parent documents) and their contents (child documents)
-- Add a "More Like This" menuitem to results from an index to get related documents
+- Find documents similar to a given one, "More Like This" style
 
 Browser plugin
 - Write Firefox extension that searches Pinot indexes and indexes the cache
@@ -97,12 +94,10 @@
 - Prefer ustring to string whenever possible
 - Closing when threads are running gives the impression Pinot has crashed; how do we tell the user
   we are waiting for something to finish ?
-- Try sizing the window optimally on the first startup
 - Use libnotify to show a popup when a new result is available ?
 - Replace labels with tags (Leaftag, http://www.chipx86.com/wiki/Leaftag). Enable to import
   all the documents that match a specific tag
 - Double click on a word in the extract field adds it to the live query field
-- On update, update documents title if different
 - When switching back and forth between results tabs and another tab, why does the
   result list get shifted right to the Title column ?
 

Modified: trunk/configure.in
===================================================================
--- trunk/configure.in	2006-06-07 14:00:12 UTC (rev 297)
+++ trunk/configure.in	2006-06-07 14:06:21 UTC (rev 298)
@@ -2,7 +2,7 @@
 # using glademm V2.6.0
 
 AC_PREREQ(2.50)
-AC_INIT(pinot, 0.48,[fabricecolin at users.berlios.de])
+AC_INIT(pinot, 0.49,[fabricecolin at users.berlios.de])
 AM_INIT_AUTOMAKE
 AC_CONFIG_HEADERS(config.h)
 



From fabricecolin at berlios.de  Thu Jun  8 16:55:54 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Thu, 8 Jun 2006 16:55:54 +0200
Subject: [Pinot-svn] r299 - trunk/Tokenize
Message-ID: <200606081455.k58Ets36003285@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-08 16:55:53 +0200 (Thu, 08 Jun 2006)
New Revision: 299

Modified:
   trunk/Tokenize/HtmlTokenizer.cpp
Log:
Bug fix on attributes parsing.


Modified: trunk/Tokenize/HtmlTokenizer.cpp
===================================================================
--- trunk/Tokenize/HtmlTokenizer.cpp	2006-06-07 14:06:21 UTC (rev 298)
+++ trunk/Tokenize/HtmlTokenizer.cpp	2006-06-08 14:55:53 UTC (rev 299)
@@ -46,6 +46,7 @@
 		string abstract(pState->m_text);
 
 		StringManip::trimSpaces(abstract);
+
 		pState->m_abstract = abstract;
 
 		return true;
@@ -115,7 +116,8 @@
 		pState->m_foundHead = true;
 	}
 	else if ((pState->m_inHead == true) &&
-		(tagName == "meta"))
+		(tagName == "meta") &&
+		(pAttributes != NULL))
 	{
 		string metaName, metaContent;
 
@@ -155,7 +157,8 @@
 		// Index text
 		pState->m_appendToText = true;
 	}
-	else if (tagName == "a")
+	else if ((tagName == "a") &&
+		(pAttributes != NULL))
 	{
 		pState->m_currentLink.m_url.clear();
 		pState->m_currentLink.m_name.clear();
@@ -190,7 +193,8 @@
 			pState->m_appendToLink = true;
 		}
 	}
-	else if (tagName == "frame")
+	else if ((tagName == "frame") &&
+		(pAttributes != NULL))
 	{
 		Link frame;
 
@@ -247,6 +251,7 @@
 	else if (tagName == "title")
 	{
 		StringManip::trimSpaces(pState->m_title);
+		StringManip::removeCharacters(pState->m_title, "\r\n");
 #ifdef DEBUG
 		cout << "HtmlTokenizer::endHandler: title is " << pState->m_title << endl;
 #endif
@@ -261,6 +266,8 @@
 		if (pState->m_currentLink.m_url.empty() == false)
 		{
 			StringManip::trimSpaces(pState->m_currentLink.m_name);
+			StringManip::removeCharacters(pState->m_currentLink.m_name, "\r\n");
+
 			pState->m_currentLink.m_endPos = pState->m_textPos;
 #ifdef DEBUG
 			cout << "HtmlTokenizer::endHandler: link " << pState->m_currentLink.m_index



From fabricecolin at berlios.de  Fri Jun  9 13:18:02 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Fri, 9 Jun 2006 13:18:02 +0200
Subject: [Pinot-svn] r300 - trunk/Utils
Message-ID: <200606091118.k59BI2YC007736@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-09 13:18:00 +0200 (Fri, 09 Jun 2006)
New Revision: 300

Modified:
   trunk/Utils/CommandLine.cpp
   trunk/Utils/MIMEScanner.cpp
Log:
MIMEScanner registers the first valid application (ie the first one with a
.desktop file) as the default for a given type.
CommandLine spawns the same process as many times as necessary if it doesn't
support multiple arguments.
All of MIMEAction wasn't copied. Some other fixes.


Modified: trunk/Utils/CommandLine.cpp
===================================================================
--- trunk/Utils/CommandLine.cpp	2006-06-08 14:55:53 UTC (rev 299)
+++ trunk/Utils/CommandLine.cpp	2006-06-09 11:18:00 UTC (rev 300)
@@ -44,15 +44,22 @@
 	{
 		return false;
 	}
+#ifdef DEBUG
+	cout << "CommandLine::runAsync: " << arguments.size() << " arguments for application '"
+		<< action.m_exec << "'" << endl;
+#endif
 
-	if (arguments.empty() == false)
+	// We may have to spawn several copies of the same program if it doesn't support multiple arguments
+	vector<string>::const_iterator firstArg = arguments.begin();
+	while (firstArg != arguments.end())
 	{
-		vector<string>::const_iterator firstArg = arguments.begin();
 		Url firstUrl(*firstArg);
 		bool foundParam = false;
+		bool noArgument = true;
+		bool oneArgumentOnly = true;
 
 		// Expand parameters
-		// We assume that arguments are URLs
+		// We assume that all arguments are full-blown URLs
 		string::size_type paramPos = commandLine.find('%');
 		while ((paramPos != string::npos) &&
 				(paramPos + 1 < commandLine.length()))
@@ -65,26 +72,31 @@
 				// Single parameter arguments
 				case 'u':
 					replacement = *firstArg;
+					noArgument = false;
 					break;
 				case 'f':
-					if (firstUrl.isLocal() == true)
+					if (firstUrl.getProtocol() != "file")
 					{
 						replacement = firstUrl.getLocation();
 						replacement += "/";
 						replacement += firstUrl.getFile();
 					}
+					noArgument = false;
 					break;
 				case 'd':
-					if (firstUrl.isLocal() == true)
+					if (firstUrl.getProtocol() != "file")
 					{
 						replacement = firstUrl.getLocation();
 					}
+					noArgument = false;
 					break;
 				case 'n':
-					if (firstUrl.isLocal() == true)
+					if (firstUrl.getProtocol() != "file")
 					{
 						replacement = firstUrl.getFile();
 					}
+					noArgument = false;
+					break;
 				// Multiple parameters arguments
 				case 'U':
 					for (vector<string>::const_iterator argIter = firstArg; argIter != arguments.end(); ++argIter)
@@ -95,6 +107,7 @@
 						}
 						replacement += *argIter;
 					}
+					noArgument = oneArgumentOnly = false;
 					break;
 				case 'F':
 					for (vector<string>::const_iterator argIter = firstArg; argIter != arguments.end(); ++argIter)
@@ -112,6 +125,7 @@
 							replacement += argUrl.getFile();
 						}
 					}
+					noArgument = oneArgumentOnly = false;
 					break;
 				case 'D':
 					for (vector<string>::const_iterator argIter = firstArg; argIter != arguments.end(); ++argIter)
@@ -127,6 +141,7 @@
 							replacement += argUrl.getLocation();
 						}
 					}
+					noArgument = oneArgumentOnly = false;
 					break;
 				case 'N':
 					for (vector<string>::const_iterator argIter = firstArg; argIter != arguments.end(); ++argIter)
@@ -142,6 +157,7 @@
 							replacement += argUrl.getFile();
 						}
 					}
+					noArgument = oneArgumentOnly = false;
 					break;
 				// Other parameters
 				case 'i':
@@ -170,14 +186,33 @@
 		if (foundParam == false)
 		{
 			// If no parameter was found, assume %f
-			commandLine += *firstArg;
+			if (firstUrl.getProtocol() != "file")
+			{
+				commandLine += firstUrl.getLocation();
+				commandLine += "/";
+				commandLine += firstUrl.getFile();
+			}
 		}
-	}
+
 #ifdef DEBUG
 		cout << "CommandLine::runAsync: spawning '" << commandLine << "'" << endl;
 #endif
+		Glib::spawn_command_line_async(commandLine);
 
-	Glib::spawn_command_line_async(commandLine);
+		if ((noArgument == true) ||
+			(oneArgumentOnly == false))
+		{
+			// No or all arguments were processed
+			break;
+		}
+		else
+		{
+			// Only the first argument was processed
+			commandLine = action.m_exec;
+			++firstArg;
+		}
 
+	}
+
 	return true;
 }

Modified: trunk/Utils/MIMEScanner.cpp
===================================================================
--- trunk/Utils/MIMEScanner.cpp	2006-06-08 14:55:53 UTC (rev 299)
+++ trunk/Utils/MIMEScanner.cpp	2006-06-09 11:18:00 UTC (rev 300)
@@ -123,7 +123,11 @@
 MIMEAction::MIMEAction(const MIMEAction &other) :
 	m_multipleArgs(other.m_multipleArgs),
 	m_localOnly(other.m_localOnly),
-	m_exec(other.m_exec)
+	m_name(other.m_name),
+	m_location(other.m_location),
+	m_exec(other.m_exec),
+	m_icon(other.m_icon),
+	m_device(other.m_device)
 {
 }
 
@@ -135,7 +139,11 @@
 {
 	m_multipleArgs = other.m_multipleArgs;
 	m_localOnly = other.m_localOnly;
+	m_name = other.m_name;
+	m_location = other.m_location;
 	m_exec = other.m_exec;
+	m_icon = other.m_icon;
+	m_device = other.m_device;
 
 	return *this;
 }
@@ -181,7 +189,6 @@
 				{
 					gchar **pDesktopFiles = g_key_file_get_string_list(pDefaults,
 						MIME_DEFAULTS_SECTION, pMimeTypes[i], NULL, &pError);
-					unsigned int defaultApp = 0;
 
 					if (pDesktopFiles == NULL)
 					{
@@ -195,17 +202,13 @@
 
 					for (unsigned int j = 0; pDesktopFiles[j] != NULL; ++j)
 					{
-						defaultApp = j;
-					}
+						MIMEAction typeAction(desktopFilesDirectory + string(pDesktopFiles[j]));
 
-					// Register the last application
-					if (pDesktopFiles[defaultApp] != NULL)
-					{
-						MIMEAction typeAction(desktopFilesDirectory + string(pDesktopFiles[defaultApp]));
-
+						// Register the first application
 						if (typeAction.m_exec.empty() == false)
 						{
 							m_defaultActions.insert(pair<string, MIMEAction>(pMimeTypes[i], typeAction));
+							break;
 						}
 					}
 



From fabricecolin at berlios.de  Fri Jun  9 13:19:03 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Fri, 9 Jun 2006 13:19:03 +0200
Subject: [Pinot-svn] r301 - in trunk/UI/GTK2: . src
Message-ID: <200606091119.k59BJ3Fh008185@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-09 13:19:00 +0200 (Fri, 09 Jun 2006)
New Revision: 301

Modified:
   trunk/UI/GTK2/metase-gtk2.glade
   trunk/UI/GTK2/src/mainWindow_glade.cc
Log:
Expand queryExpander.


Modified: trunk/UI/GTK2/metase-gtk2.glade
===================================================================
--- trunk/UI/GTK2/metase-gtk2.glade	2006-06-09 11:18:00 UTC (rev 300)
+++ trunk/UI/GTK2/metase-gtk2.glade	2006-06-09 11:19:00 UTC (rev 301)
@@ -614,7 +614,7 @@
 		  <property agent="glademm" name="cxx_visibility">protected</property>
 		  <property name="visible">True</property>
 		  <property name="can_focus">True</property>
-		  <property name="expanded">False</property>
+		  <property name="expanded">True</property>
 		  <property name="spacing">0</property>
 
 		  <child>

Modified: trunk/UI/GTK2/src/mainWindow_glade.cc
===================================================================
--- trunk/UI/GTK2/src/mainWindow_glade.cc	2006-06-09 11:18:00 UTC (rev 300)
+++ trunk/UI/GTK2/src/mainWindow_glade.cc	2006-06-09 11:19:00 UTC (rev 301)
@@ -342,7 +342,7 @@
    queryLabel->set_selectable(false);
    queryExpander->set_flags(Gtk::CAN_FOCUS);
 #if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>=3
-   queryExpander->set_expanded(false);
+   queryExpander->set_expanded(true);
    queryExpander->set_spacing(0);
 #endif //
    queryExpander->add(*queryHbox);



From fabricecolin at berlios.de  Fri Jun  9 13:21:11 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Fri, 9 Jun 2006 13:21:11 +0200
Subject: [Pinot-svn] r302 - trunk/UI/GTK2/src
Message-ID: <200606091121.k59BLB4t008777@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-09 13:20:55 +0200 (Fri, 09 Jun 2006)
New Revision: 302

Modified:
   trunk/UI/GTK2/src/IndexTree.cpp
   trunk/UI/GTK2/src/IndexTree.h
   trunk/UI/GTK2/src/ResultsTree.cpp
   trunk/UI/GTK2/src/ResultsTree.h
Log:
Both of these trees return the selected items as a DocumentInfo list.
ResultsTree::setSelectionViewedState() replaces setFirstSelectionViewedState().


Modified: trunk/UI/GTK2/src/IndexTree.cpp
===================================================================
--- trunk/UI/GTK2/src/IndexTree.cpp	2006-06-09 11:19:00 UTC (rev 301)
+++ trunk/UI/GTK2/src/IndexTree.cpp	2006-06-09 11:20:55 UTC (rev 302)
@@ -252,6 +252,36 @@
 //
 // Gets a list of selected items.
 //
+bool IndexTree::getSelection(std::vector<DocumentInfo> &documentsList)
+{
+	list<TreeModel::Path> selectedItems = get_selection()->get_selected_rows();
+	if (selectedItems.empty() == true)
+	{
+		return false;
+	}
+
+	// Go through selected items
+	for (list<TreeModel::Path>::iterator itemPath = selectedItems.begin();
+		itemPath != selectedItems.end(); ++itemPath)
+	{
+		TreeModel::iterator iter = m_refStore->get_iter(*itemPath);
+		TreeModel::Row row = *iter;
+
+		documentsList.push_back(DocumentInfo(from_utf8(row[m_indexColumns.m_text]),
+			from_utf8(row[m_indexColumns.m_liveUrl]),
+			from_utf8(row[m_indexColumns.m_type]),
+			from_utf8(row[m_indexColumns.m_language])));
+	}
+#ifdef DEBUG
+	cout << "IndexTree::getSelection: " << documentsList.size() << " documents selected" << endl;
+#endif
+
+	return true;
+}
+
+//
+// Gets a list of selected items.
+//
 bool IndexTree::getSelection(std::vector<IndexedDocument> &documentsList)
 {
 	list<TreeModel::Path> selectedItems = get_selection()->get_selected_rows();

Modified: trunk/UI/GTK2/src/IndexTree.h
===================================================================
--- trunk/UI/GTK2/src/IndexTree.h	2006-06-09 11:19:00 UTC (rev 301)
+++ trunk/UI/GTK2/src/IndexTree.h	2006-06-09 11:20:55 UTC (rev 302)
@@ -58,6 +58,9 @@
 		IndexedDocument getFirstSelection(void);
 
 		/// Gets a list of selected items.
+		bool getSelection(std::vector<DocumentInfo> &documentsList);
+
+		/// Gets a list of selected items.
 		bool getSelection(std::vector<IndexedDocument> &documentsList);
 
 		/// Updates a document's properties.

Modified: trunk/UI/GTK2/src/ResultsTree.cpp
===================================================================
--- trunk/UI/GTK2/src/ResultsTree.cpp	2006-06-09 11:19:00 UTC (rev 301)
+++ trunk/UI/GTK2/src/ResultsTree.cpp	2006-06-09 11:20:55 UTC (rev 302)
@@ -857,7 +857,7 @@
 //
 // Gets a list of selected items.
 //
-bool ResultsTree::getSelection(vector<Result> &resultsList)
+bool ResultsTree::getSelection(vector<DocumentInfo> &resultsList)
 {
 	list<TreeModel::Path> selectedItems = get_selection()->get_selected_rows();
 	if (selectedItems.empty() == true)
@@ -872,8 +872,8 @@
 		TreeModel::iterator iter = m_refStore->get_iter(*itemPath);
 		TreeModel::Row row = *iter;
 
-		resultsList.push_back(Result(from_utf8(row[m_resultsColumns.m_url]),
-			from_utf8(row[m_resultsColumns.m_text]),
+		resultsList.push_back(DocumentInfo(from_utf8(row[m_resultsColumns.m_text]),
+			from_utf8(row[m_resultsColumns.m_url]),
 			"", from_utf8(row[m_resultsColumns.m_language])));
 	}
 #ifdef DEBUG
@@ -884,9 +884,9 @@
 }
 
 //
-// Sets the first selected item's viewed state.
+// Sets the selected items' viewed state.
 //
-void ResultsTree::setFirstSelectionViewedState(bool viewed)
+void ResultsTree::setSelectionViewedState(bool viewed)
 {
 	list<TreeModel::Path> selectedItems = get_selection()->get_selected_rows();
 	if (selectedItems.empty() == true)
@@ -894,10 +894,15 @@
 		return;
 	}
 
-	list<TreeModel::Path>::iterator itemPath = selectedItems.begin();
-	TreeModel::iterator iter = m_refStore->get_iter(*itemPath);
-	TreeModel::Row row = *iter;
-	row[m_resultsColumns.m_viewed] = viewed;
+	// Go through selected items
+	for (list<TreeModel::Path>::iterator itemPath = selectedItems.begin();
+		itemPath != selectedItems.end(); ++itemPath)
+	{
+		TreeModel::iterator iter = m_refStore->get_iter(*itemPath);
+		TreeModel::Row row = *iter;
+
+		row[m_resultsColumns.m_viewed] = viewed;
+	}
 }
 
 //

Modified: trunk/UI/GTK2/src/ResultsTree.h
===================================================================
--- trunk/UI/GTK2/src/ResultsTree.h	2006-06-09 11:19:00 UTC (rev 301)
+++ trunk/UI/GTK2/src/ResultsTree.h	2006-06-09 11:20:55 UTC (rev 302)
@@ -69,10 +69,10 @@
 		Result getFirstSelection(void);
 
 		/// Gets a list of selected items.
-		bool getSelection(std::vector<Result> &resultsList);
+		bool getSelection(std::vector<DocumentInfo> &resultsList);
 
-		/// Sets the first selected item's viewed state.
-		void setFirstSelectionViewedState(bool viewed);
+		/// Sets the selected items' viewed state.
+		void setSelectionViewedState(bool viewed);
 
 		/**
 		  * Deletes the current selection.



From fabricecolin at berlios.de  Fri Jun  9 13:28:09 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Fri, 9 Jun 2006 13:28:09 +0200
Subject: [Pinot-svn] r303 - trunk/UI/GTK2/src
Message-ID: <200606091128.k59BS9ox011899@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-09 13:28:00 +0200 (Fri, 09 Jun 2006)
New Revision: 303

Modified:
   trunk/UI/GTK2/src/mainWindow.cc
   trunk/UI/GTK2/src/mainWindow.hh
Log:
Dropped internal viewer completely. Always use default applications. For those
documents that have to be downloaded first, save them into a temporary file.
Several changes related to trees selection.
When the IndexBrowser thread finishes, don't blindly return if the page isn't
there anymore, make sure the progress bar is stopped.


Modified: trunk/UI/GTK2/src/mainWindow.cc
===================================================================
--- trunk/UI/GTK2/src/mainWindow.cc	2006-06-09 11:20:55 UTC (rev 302)
+++ trunk/UI/GTK2/src/mainWindow.cc	2006-06-09 11:28:00 UTC (rev 303)
@@ -123,7 +123,6 @@
 	m_pNotebook(NULL),
 	m_pIndexMenu(NULL),
 	m_pLabelsMenu(NULL),
-	m_pHtmlView(NULL),
 	m_state(this)
 {
 	// Reposition and resize the window
@@ -195,14 +194,6 @@
 	m_pageSwitchConnection = m_pNotebook->signal_switch_page().connect(
 		SigC::slot(*this, &mainWindow::on_switch_page), false);
 
-	// Create an HTML renderer
-	m_pHtmlView = new HtmlView(NULL);
-	string startPage("file://");
-	startPage += PREFIX;
-	startPage += "/share/pinot/index.html";
-	DocumentInfo docInfo("", startPage, "", "");
-	view_document(docInfo, true);
-
 	// Gray out menu items
 	editQueryButton->set_sensitive(false);
 	removeQueryButton->set_sensitive(false);
@@ -240,6 +231,9 @@
 	set_status(_("Ready"));
 	m_pNotebook->show();
 	show();
+
+	// Browse the index
+	on_index_changed(_("My Documents"));
 }
 
 //
@@ -252,14 +246,6 @@
 
 	// Save queries
 	save_queryTreeview();
-
-	// Stop in case we were loading a page
-	NotebookPageBox *pNotebookPage = get_page(_("View"), NotebookPageBox::VIEW_PAGE);
-	if (pNotebookPage != NULL)
-	{
-		m_pHtmlView->stop();
-	}
-	delete m_pHtmlView;
 }
 
 //
@@ -504,8 +490,6 @@
 //
 void mainWindow::on_indexTreeviewSelection_changed(ustring indexName)
 {
-	vector<IndexedDocument> documentsList;
-
 	IndexPage *pIndexPage = dynamic_cast<IndexPage*>(get_page(indexName, NotebookPageBox::INDEX_PAGE));
 	if (pIndexPage == NULL)
 	{
@@ -513,26 +497,30 @@
 	}
 
 	IndexTree *pIndexTree = pIndexPage->getTree();
-	if ((pIndexTree != NULL) &&
-		(pIndexTree->getSelection(documentsList) == true))
+	if (pIndexTree != NULL)
 	{
-		bool isDocumentsIndex = true;
+		string url(pIndexTree->getFirstSelectionURL());
 
-		// Enable these menu items, unless the index is not the documents index
-		if (indexName != _("My Documents"))
+		if (url.empty() == false)
 		{
-			isDocumentsIndex = false;
-		}
-		viewfromindex1->set_sensitive(true);
-		refreshindex1->set_sensitive(isDocumentsIndex);
-		unindex1->set_sensitive(isDocumentsIndex);
-		showfromindex1->set_sensitive(true);
+			bool isDocumentsIndex = true;
 
-		// Show the URL in the status bar
-		ustring statusText = _("Document location is");
-		statusText += " ";
-		statusText += pIndexTree->getFirstSelectionURL();
-		set_status(statusText, true);
+			// Enable these menu items, unless the index is not the documents index
+			if (indexName != _("My Documents"))
+			{
+				isDocumentsIndex = false;
+			}
+			viewfromindex1->set_sensitive(true);
+			refreshindex1->set_sensitive(isDocumentsIndex);
+			unindex1->set_sensitive(isDocumentsIndex);
+			showfromindex1->set_sensitive(true);
+
+			// Show the URL in the status bar
+			ustring statusText = _("Document location is");
+			statusText += " ";
+			statusText += pIndexTree->getFirstSelectionURL();
+			set_status(statusText, true);
+		}
 	}
 	else
 	{
@@ -694,21 +682,8 @@
 	int pageNum = get_page_number(title, type);
 	if (pageNum >= 0)
 	{
-		if (type == NotebookPageBox::VIEW_PAGE)
+		if (m_state.write_lock_lists(2) == true)
 		{
-			// Stop rendering
-			m_pHtmlView->stop();
-
-			// Hide, don't close the page
-			Widget *pPage = m_pNotebook->get_nth_page(pageNum);
-			if (pPage != NULL)
-			{
-				pPage->hide();
-				pageDecrement = 1;
-			}
-		}
-		else if (m_state.write_lock_lists(2) == true)
-		{
 			// Remove the page
 			m_pNotebook->remove_page(pageNum);
 
@@ -770,43 +745,40 @@
 		ustring labelName = to_utf8(pBrowseThread->getLabelName());
 
 		// Find the page for this index
+		// It may have been closed by the user
 		pIndexPage = dynamic_cast<IndexPage*>(get_page(indexName, NotebookPageBox::INDEX_PAGE));
-		if (pIndexPage == NULL)
+		if (pIndexPage != NULL)
 		{
-			// It's probably been closed by the user
-			return;
-		}
-		pIndexTree = pIndexPage->getTree();
-		if (pIndexTree == NULL)
-		{
-			return;
-		}
+			pIndexTree = pIndexPage->getTree();
+			if (pIndexTree != NULL)
+			{
+				pIndexPage->setDocumentsCount(pBrowseThread->getDocumentsCount());
+				pIndexPage->updateButtonsState(m_maxDocsCount);
 
-		pIndexPage->setDocumentsCount(pBrowseThread->getDocumentsCount());
-		pIndexPage->updateButtonsState(m_maxDocsCount);
+				status = _("Showing");
+				status += " ";
+				snprintf(docsCountStr, 64, "%u", pIndexTree->getRowsCount());
+				status += docsCountStr;
+				status += " ";
+				status += _("off");
+				status += " ";
+				snprintf(docsCountStr, 64, "%u", pIndexPage->getDocumentsCount());
+				status += docsCountStr;
+				status += " ";
+				status += _("documents, starting at");
+				status += " ";
+				snprintf(docsCountStr, 64, "%u", pIndexPage->getFirstDocument());
+				status += docsCountStr;
+				set_status(status);
 
-		status = _("Showing");
-		status += " ";
-		snprintf(docsCountStr, 64, "%u", pIndexTree->getRowsCount());
-		status += docsCountStr;
-		status += " ";
-		status += _("off");
-		status += " ";
-		snprintf(docsCountStr, 64, "%u", pIndexPage->getDocumentsCount());
-		status += docsCountStr;
-		status += " ";
-		status += _("documents, starting at");
-		status += " ";
-		snprintf(docsCountStr, 64, "%u", pIndexPage->getFirstDocument());
-		status += docsCountStr;
-		set_status(status);
-
-		if (pIndexPage->getDocumentsCount() > 0)
-		{
-			// Refresh the tree
-			pIndexTree->refresh();
+				if (pIndexPage->getDocumentsCount() > 0)
+				{
+					// Refresh the tree
+					pIndexTree->refresh();
+				}
+				m_state.m_browsingIndex = false;
+			}
 		}
-		m_state.m_browsingIndex = false;
 	}
 	else if (type == "QueryingThread")
 	{
@@ -846,10 +818,7 @@
 		if (pResultsPage != NULL)
 		{
 			pResultsTree = pResultsPage->getTree();
-			if (pResultsTree == NULL)
-			{
-				return;
-			}
+
 			pageNum = get_page_number(queryName, NotebookPageBox::RESULTS_PAGE);
 		}
 		else
@@ -880,14 +849,13 @@
 			}
 		}
 
-		if (pageNum >= 0)
+		if ((pageNum >= 0) &&
+			(pResultsTree != NULL))
 		{
 			// Add the results to the tree
 			pResultsTree->addResults(queryProps, engineName,
 				resultsList, resultsCharset,
 				searchenginegroup1->get_active());
-			// Switch to that page
-			m_pNotebook->set_current_page(pageNum);
 		}
 
 		// Index results ?
@@ -935,32 +903,39 @@
 		if (pDoc != NULL)
 		{
 			unsigned int dataLength = 0;
-
 			const char *pData = pDoc->getData(dataLength);
+
 			if ((pData != NULL) &&
 				(dataLength > 0))
 			{
-				ustring viewName = _("View");
+				char inTemplate[21] = "/tmp/pinottempXXXXXX";
+				int inFd = mkstemp(inTemplate);
+				bool viewDoc = false;
 
-				// Is there still a view page ?
-				ViewPage *pViewPage = dynamic_cast<ViewPage*>(get_page(viewName, NotebookPageBox::VIEW_PAGE));
-				if (pViewPage != NULL)
+				if (inFd != -1)
 				{
-					// The page may be hidden
-					pViewPage->show();
+					// Save the data into a temporary file
+					if (write(inFd, (const void*)pData, dataLength) != -1)
+					{
+						viewDoc = true;
+					}
+
+					close(inFd);
 				}
 
-				int pageNum = get_page_number(viewName, NotebookPageBox::VIEW_PAGE);
-				if (pageNum >= 0)
+				if (viewDoc == true)
 				{
-					// Display the URL in the View tab
-					if (m_pHtmlView->renderData(pData, dataLength, url) == true)
-					{
-						//viewstop1->set_sensitive(true);
-						set_status(to_utf8(url));
-					}
+					DocumentInfo docInfo(*pDoc);
+					string fileName("file://");
 
-					m_pNotebook->set_current_page(pageNum);
+					fileName += inTemplate;
+					docInfo.setLocation(fileName);
+
+					// View this document
+					vector<DocumentInfo> documentsList;
+					documentsList.push_back(docInfo);
+					view_documents(documentsList);
+					// FIXME: how do we know when to delete this document ?
 				}
 			}
 		}
@@ -1332,12 +1307,12 @@
 		NotebookPageBox *pNotebookPage = get_current_page();
 		if (pNotebookPage != NULL)
 		{
+			vector<DocumentInfo> documentsList;
+			bool firstItem = true;
+
 			ResultsPage *pResultsPage = dynamic_cast<ResultsPage*>(pNotebookPage);
 			if (pResultsPage != NULL)
 			{
-				vector<Result> resultsList;
-				bool firstItem = true;
-
 #ifdef DEBUG
 				cout << "mainWindow::on_copy_activate: results tree" << endl;
 #endif
@@ -1345,29 +1320,13 @@
 				if (pResultsTree != NULL)
 				{
 					// Get the current results selection
-					pResultsTree->getSelection(resultsList);
+					pResultsTree->getSelection(documentsList);
 				}
-
-				for (vector<Result>::const_iterator resultIter = resultsList.begin();
-					resultIter != resultsList.end(); ++resultIter)
-				{
-					if (firstItem == false)
-					{
-						text += "\n";
-					}
-					text += resultIter->getTitle();
-					text += " ";
-					text += resultIter->getLocation();
-					firstItem = false;
-				}
 			}
 
 			IndexPage *pIndexPage = dynamic_cast<IndexPage*>(pNotebookPage);
 			if (pIndexPage != NULL)
 			{
-				vector<IndexedDocument> documentsList;
-				bool firstItem = true;
-
 #ifdef DEBUG
 				cout << "mainWindow::on_copy_activate: index tree" << endl;
 #endif
@@ -1377,19 +1336,19 @@
 					// Get the current documents selection
 					pIndexTree->getSelection(documentsList);
 				}
+			}
 
-				for (vector<IndexedDocument>::const_iterator docIter = documentsList.begin();
-					docIter != documentsList.end(); ++docIter)
+			for (vector<DocumentInfo>::const_iterator docIter = documentsList.begin();
+				docIter != documentsList.end(); ++docIter)
+			{
+				if (firstItem == false)
 				{
-					if (firstItem == false)
-					{
-						text += "\n";
-					}
-					text += docIter->getTitle();
-					text += " ";
-					text += docIter->getOriginalLocation();
-					firstItem = false;
+					text += "\n";
 				}
+				text += docIter->getTitle();
+				text += " ";
+				text += docIter->getLocation();
+				firstItem = false;
 			}
 		}
 
@@ -1555,11 +1514,14 @@
 			ResultsTree *pResultsTree = pResultsPage->getTree();
 			if (pResultsTree != NULL)
 			{
-				Result selectedResult = pResultsTree->getFirstSelection();
-				if (view_document(selectedResult) == true)
+				vector<DocumentInfo> resultsList;
+
+				if (pResultsTree->getSelection(resultsList) == true)
 				{
+					view_documents(resultsList);
+
 					// We can update the row right now
-					pResultsTree->setFirstSelectionViewedState(true);
+					pResultsTree->setSelectionViewedState(true);
 				}
 			}
 		}
@@ -1571,6 +1533,8 @@
 //
 void mainWindow::on_viewcache_activate()
 {
+// FIXME: find a way to view cached pages in external applications
+#if 0
 	NotebookPageBox *pNotebookPage = get_current_page();
 	if (pNotebookPage != NULL)
 	{
@@ -1589,6 +1553,7 @@
 			}
 		}
 	}
+#endif
 }
 
 //
@@ -1596,7 +1561,7 @@
 //
 void mainWindow::on_indexresults_activate()
 {
-	vector<Result> resultsList;
+	vector<DocumentInfo> resultsList;
 
 	// Make sure this has been configured
 	if (m_settings.m_indexLocation.empty() == true)
@@ -1620,22 +1585,13 @@
 	}
 
 	// Go through selected results
-	for (vector<Result>::const_iterator resultIter = resultsList.begin();
+	for (vector<DocumentInfo>::const_iterator resultIter = resultsList.begin();
 		resultIter != resultsList.end(); ++resultIter)
 	{
-		// Get the actual URL to download
-		string url = resultIter->getLocation();
-	
-		if (url.empty() == true)
-		{
-			set_status(_("Result location is unknown"));
-			return;
-		}
 #ifdef DEBUG
-		cout << "mainWindow::on_indexresults_activate: URL is " << url << endl;
+		cout << "mainWindow::on_indexresults_activate: URL is " << resultIter->getLocation() << endl;
 #endif
-		queue_index(DocumentInfo(resultIter->getTitle(), url,
-			resultIter->getType(), resultIter->getLanguage()), "");
+		queue_index(*resultIter, "");
 	}
 }
 
@@ -1679,11 +1635,12 @@
 
 		if (pIndexTree != NULL)
 		{
-			IndexedDocument indexedDoc = pIndexTree->getFirstSelection();
+			vector<DocumentInfo> documentsList;
 
-			// View the first document, don't bother about the rest
-			indexedDoc.setLocation(indexedDoc.getOriginalLocation());
-			view_document(indexedDoc);
+			if (pIndexTree->getSelection(documentsList) == true)
+			{
+				view_documents(documentsList);
+			}
 		}
 	}
 }
@@ -1722,22 +1679,16 @@
 	for (vector<IndexedDocument>::const_iterator docIter = documentsList.begin();
 		docIter != documentsList.end(); ++docIter)
 	{
-		// The document ID
+		string url(docIter->getOriginalLocation());
 		unsigned int docId = docIter->getID();
-		if (docId == 0)
-		{
-			continue;
-		}
 
-		// The URL to download, ie the original location of the document
-		string url = docIter->getOriginalLocation();
-		if (url.empty() == true)
+		if ((docId == 0) ||
+			(url.empty() == true))
 		{
 			continue;
 		}
 #ifdef DEBUG
 		cout << "mainWindow::on_refreshindex_activate: URL is " << url << endl;
-		cout << "mainWindow::on_refreshindex_activate: language is " << docIter->getLanguage() << endl;
 #endif
 
 		// Add this action to the queue
@@ -1921,14 +1872,6 @@
 	for (vector<IndexedDocument>::const_iterator docIter = documentsList.begin();
 		docIter != documentsList.end(); ++docIter)
 	{
-		// Get the actual URL of the document to delete
-		string url = docIter->getLocation();
-		string liveUrl = docIter->getOriginalLocation();
-		if (url.empty() == true)
-		{
-			continue;
-		}
-
 		unsigned int docId = docIter->getID();
 		if (docId > 0)
 		{
@@ -2820,120 +2763,127 @@
 }
 
 //
-// View a document
+// View documents
 //
-bool mainWindow::view_document(const DocumentInfo &docInfo, bool internalViewerOnly)
+void mainWindow::view_documents(vector<DocumentInfo> &documentsList)
 {
-	string url(docInfo.getLocation());
-	string mimeType(docInfo.getType());
+	multimap<string, string> locationsByType;
+	vector<DocumentInfo>::iterator docIter = documentsList.begin();
 
-	if (url.empty() == true)
+	for (vector<DocumentInfo>::iterator docIter = documentsList.begin();
+		docIter != documentsList.end(); ++docIter)
 	{
-		set_status(_("No URL to browse"));
-		return false;
-	}
+		string url(docIter->getLocation());
+		string mimeType(docIter->getType());
 
-	if (mimeType.empty() == true)
-	{
-		Url docUrl(url);
+		if (url.empty() == true)
+		{
+			continue;
+		}
 
-		// Scan for the MIME type
-		mimeType = MIMEScanner::scanUrl(docUrl);
-	}
+		// What's the MIME type ?
+		if (mimeType.empty() == true)
+		{
+			Url urlObj(url);
 
-	Url urlObj(url);
+			// Scan for the MIME type
+			mimeType = MIMEScanner::scanUrl(urlObj);
+		}
 
-	// FIXME: there should be a way to know which protocols can be viewed/indexed
-	if (urlObj.getProtocol() == "mailbox")
-	{
-		// Get that message
-		start_thread(new DownloadingThread(docInfo, false));
-	}
-	else if ((internalViewerOnly == true) ||
-		(mimeType.find("/html") != string::npos))
-	{
-		ViewPage *pViewPage = NULL;
-		ustring viewName = _("View");
-		int pageNum = -1;
-
-		// Is there already a view page ?
-		pViewPage = dynamic_cast<ViewPage*>(get_page(viewName, NotebookPageBox::VIEW_PAGE));
-		if (pViewPage != NULL)
+		// Remove the charset, if any
+		string::size_type semiColonPos = mimeType.find(";");
+		if (semiColonPos != string::npos)
 		{
-			pageNum = get_page_number(viewName, NotebookPageBox::VIEW_PAGE);
-			// The page may be hidden
-			pViewPage->show();
-			// FIXME: reorder pages
+			mimeType.erase(semiColonPos);
 		}
-		else
-		{
-			NotebookTabBox *pTab = manage(new NotebookTabBox(viewName,
-				NotebookPageBox::VIEW_PAGE));
-			pTab->getCloseSignal().connect(
-				SigC::slot(*this, &mainWindow::on_close_page));
 
-			// Position everything
-			pViewPage = manage(new ViewPage(viewName, m_pHtmlView, m_settings));
+#ifdef DEBUG
+		cout << "mainWindow::view_documents: " << url << " has type " << mimeType << endl;
+#endif
+		locationsByType.insert(pair<string, string>(mimeType, url));
+	}
 
-			// Append the page
-			if (m_state.write_lock_lists(11) == true)
+	MIMEAction action;
+	vector<string> arguments;
+	string currentType;
+
+	arguments.reserve(documentsList.size());
+
+	for (multimap<string, string>::iterator locationIter = locationsByType.begin();
+		locationIter != locationsByType.end(); ++locationIter)
+	{
+		if (locationIter->first != currentType)
+		{
+			if (arguments.empty() == false)
 			{
-				pageNum = m_pNotebook->append_page(*pViewPage, *pTab);
-				m_pNotebook->pages().back().set_tab_label_packing(false, true, Gtk::PACK_START);
+#ifdef DEBUG
+				cout << "mainWindow::view_documents: " << arguments.size()
+					<< " arguments for type " << currentType << endl;
+#endif
+				// Run the default program for this type
+				if (CommandLine::runAsync(action, arguments) == false)
+				{
+#ifdef DEBUG
+					cout << "mainWindow::view_documents: couldn't view type "
+						<< currentType << endl;
+#endif
+				}
 
-				m_state.unlock_lists();
+				// Clear the list of arguments
+				arguments.clear();
 			}
-		}
 
-		if (pageNum >= 0)
-		{
-			// Display the URL
-			m_pNotebook->set_current_page(pageNum);
-			if (m_pHtmlView->renderUrl(url) == true)
+			// Get the action for this MIME type
+			if (MIMEScanner::getDefaultAction(locationIter->first, action) == false)
 			{
-				//viewstop1->set_sensitive(true);
+#ifdef DEBUG
+				cout << "mainWindow::view_documents: no default application defined for type "
+					<< locationIter->first << endl;
+#endif
+				continue;
 			}
-			ustring status = _("Viewing");
-			status += " ";
-			status += to_utf8(m_pHtmlView->getLocation());
-			set_status(status);
 		}
-	}
-	else
-	{
-		vector<string> arguments;
-		MIMEAction action;
+		currentType = locationIter->first;
 
-		if (MIMEScanner::getDefaultAction(mimeType, action) == false)
+		string url(locationIter->second);
+		Url urlObj(url);
+
+		// FIXME: there should be a way to know which protocols can be viewed/indexed
+		if (urlObj.getProtocol() == "mailbox")
 		{
-			ustring status = _("No application defined for type ");
-			status += " ";
-			status += mimeType;
-			set_status(status);
-			return false;
+			DocumentInfo docInfo("", url, "", "");
+
+			// Get that message
+			start_thread(new DownloadingThread(docInfo, false));
+			// FIXME: at this time, only one mail message can be viewed at any one time
+			break;
 		}
 
 		arguments.push_back(url);
 
-		// Run the default program for this type
-		if (CommandLine::runAsync(action, arguments) == false)
+		// Record this into the history now, even though it may fail
+		ViewHistory viewHistory(m_settings.m_historyDatabase);
+		if (viewHistory.hasItem(url) == false)
 		{
-			ustring status = _("Couldn't view ");
-			status += " ";
-			status += url;
-			set_status(status);
-			return false;
+			viewHistory.insertItem(url);
 		}
 	}
 
-	// Record this into the history
-	ViewHistory viewHistory(m_settings.m_historyDatabase);
-	if (viewHistory.hasItem(url) == false)
+	if (arguments.empty() == false)
 	{
-		viewHistory.insertItem(url);
+#ifdef DEBUG
+		cout << "mainWindow::view_documents: " << arguments.size()
+			<< " arguments for type " << currentType << endl;
+#endif
+		// Run the default program for this type
+		if (CommandLine::runAsync(action, arguments) == false)
+		{
+#ifdef DEBUG
+			cout << "mainWindow::view_documents: couldn't view type "
+				<< currentType << endl;
+#endif
+		}
 	}
-
-	return true;
 }
 
 //

Modified: trunk/UI/GTK2/src/mainWindow.hh
===================================================================
--- trunk/UI/GTK2/src/mainWindow.hh	2006-06-09 11:20:55 UTC (rev 302)
+++ trunk/UI/GTK2/src/mainWindow.hh	2006-06-09 11:28:00 UTC (rev 303)
@@ -38,7 +38,6 @@
 #include "IndexedDocument.h"
 #include "QueryProperties.h"
 #include "EnginesTree.h"
-#include "HtmlView.h"
 #include "IndexPage.h"
 #include "ModelColumns.h"
 #include "Notebook.h"
@@ -133,7 +132,7 @@
 		const Glib::ustring &labelName, unsigned int startDoc);
 	void index_document(const DocumentInfo &docInfo, const std::string &labelName,
 		unsigned int docId = 0);
-	bool view_document(const DocumentInfo &docInfo, bool internalViewerOnly = false);
+	void view_documents(std::vector<DocumentInfo> &documentsList);
 	bool append_document(IndexPage *pIndexPage, const Glib::ustring &indexName,
 		const IndexedDocument &docInfo);
 	bool start_thread(WorkerThread *pNewThread, bool inBackground = false);
@@ -160,8 +159,6 @@
 	Gtk::Menu *m_pLabelsMenu;
 	ComboModelColumns m_indexNameColumns;
 	Glib::RefPtr<Gtk::ListStore> m_refIndexNameTree;
-	// View
-	HtmlView *m_pHtmlView;
 	// Tooltips
 	Gtk::Tooltips m_tooltips;
 	// Page switching



From fabricecolin at berlios.de  Fri Jun  9 13:32:29 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Fri, 9 Jun 2006 13:32:29 +0200
Subject: [Pinot-svn] r304 - trunk/UI/GTK2/src
Message-ID: <200606091132.k59BWT4a012839@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-09 13:31:54 +0200 (Fri, 09 Jun 2006)
New Revision: 304

Modified:
   trunk/UI/GTK2/src/Notebook.cpp
   trunk/UI/GTK2/src/Notebook.h
   trunk/UI/GTK2/src/pinot.cc
Log:
Removed HtmlView/MozillaRenderer code.


Modified: trunk/UI/GTK2/src/Notebook.cpp
===================================================================
--- trunk/UI/GTK2/src/Notebook.cpp	2006-06-09 11:28:00 UTC (rev 303)
+++ trunk/UI/GTK2/src/Notebook.cpp	2006-06-09 11:31:54 UTC (rev 304)
@@ -87,35 +87,6 @@
 	return m_pTree;
 }
 
-ViewPage::ViewPage(const ustring &viewName, HtmlView *pView,
-	PinotSettings &settings) :
-	NotebookPageBox(viewName, NotebookPageBox::VIEW_PAGE, settings),
-	m_pView(pView)
-{
-	if (pView != NULL)
-	{
-		Widget *pViewWidget = pView->getWidget();
-		if (pViewWidget != NULL)
-		{
-			pack_start(*pViewWidget);
-		}
-	}
-
-	show();
-}
-
-ViewPage::~ViewPage()
-{
-}
-
-//
-// Returns the page's view.
-//
-HtmlView *ViewPage::getView(void) const
-{
-	return m_pView;
-}
-
 NotebookTabBox::NotebookTabBox(const Glib::ustring &title, NotebookPageBox::PageType type) :
 	HBox(),
 	m_title(title),

Modified: trunk/UI/GTK2/src/Notebook.h
===================================================================
--- trunk/UI/GTK2/src/Notebook.h	2006-06-09 11:28:00 UTC (rev 303)
+++ trunk/UI/GTK2/src/Notebook.h	2006-06-09 11:31:54 UTC (rev 304)
@@ -28,15 +28,15 @@
 #else
 #include <gtkmm/eventbox.h>
 #endif
+#include <gtkmm/textview.h>
 
-#include "HtmlView.h"
 #include "PinotSettings.h"
 #include "ResultsTree.h"
 
 class NotebookPageBox : public Gtk::VBox
 {
 	public:
-		typedef enum { RESULTS_PAGE = 0, INDEX_PAGE, VIEW_PAGE } PageType;
+		typedef enum { RESULTS_PAGE = 0, INDEX_PAGE } PageType;
 
 		NotebookPageBox(const Glib::ustring &title, PageType type,
 			PinotSettings &settings);
@@ -71,21 +71,6 @@
 
 };
 
-class ViewPage : public NotebookPageBox
-{
-	public:
-		ViewPage(const Glib::ustring &viewName, HtmlView *pView,
-			PinotSettings &settings);
-		virtual ~ViewPage();
-
-		/// Returns the page's view.
-		virtual HtmlView *getView(void) const;
-
-	protected:
-		HtmlView *m_pView;
-
-};
-
 class NotebookTabBox : public Gtk::HBox
 {
 	public:

Modified: trunk/UI/GTK2/src/pinot.cc
===================================================================
--- trunk/UI/GTK2/src/pinot.cc	2006-06-09 11:28:00 UTC (rev 303)
+++ trunk/UI/GTK2/src/pinot.cc	2006-06-09 11:31:54 UTC (rev 304)
@@ -35,7 +35,6 @@
 #include "QueryHistory.h"
 #include "ViewHistory.h"
 #include "DownloaderInterface.h"
-#include "MozillaRenderer.h"
 #include "config.h"
 #include "NLS.h"
 #include "PinotSettings.h"
@@ -80,7 +79,6 @@
 	}
 	outputFile.close();
 
-	MozillaRenderer::shutdown();
 	DownloaderInterface::shutdown();
 	MIMEScanner::shutdown();
 }
@@ -136,7 +134,6 @@
 
 	MIMEScanner::initialize();
 	DownloaderInterface::initialize();
-	MozillaRenderer::initialize();
 	Glib::thread_init();
 	Gtk::Main m(&argc, &argv);
 



From fabricecolin at berlios.de  Fri Jun  9 13:35:30 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Fri, 9 Jun 2006 13:35:30 +0200
Subject: [Pinot-svn] r305 - in trunk: . UI UI/GTK2 UI/GTK2/src
Message-ID: <200606091135.k59BZUgI013104@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-09 13:35:14 +0200 (Fri, 09 Jun 2006)
New Revision: 305

Removed:
   trunk/UI/GTK2/index.html
   trunk/UI/GTK2/src/HtmlView.cpp
   trunk/UI/GTK2/src/HtmlView.h
   trunk/UI/RenderHTML/
Modified:
   trunk/Makefile.am
   trunk/UI/GTK2/src/Makefile.am
   trunk/configure.in
Log:
Removing internal viewer stuff.


Modified: trunk/Makefile.am
===================================================================
--- trunk/Makefile.am	2006-06-09 11:31:54 UTC (rev 304)
+++ trunk/Makefile.am	2006-06-09 11:35:14 UTC (rev 305)
@@ -2,19 +2,18 @@
 # using glademm V2.6.0
 
 SUBDIRS = po Utils Tokenize SQL Collect @SOAP_SUBDIRS@ Search \
-	Index Monitor UI/RenderHTML UI/GTK2/src
+	Index Monitor UI/GTK2/src
 
 EXTRA_DIST = ChangeLog NEWS README TODO mkinstalldirs pinot.desktop \
 	pinot.spec textcat_conf.txt Search/Plugins/*src Search/Plugins/*.xml \
 	Collect/pinot-collect.1 Search/pinot-search.1 UI/GTK2/src/pinot.1 \
-	UI/GTK2/index.html UI/GTK2/xapian-powered.png UI/GTK2/pinot.png \
+	UI/GTK2/xapian-powered.png UI/GTK2/pinot.png \
 	UI/GTK2/metase-gtk2.glade UI/GTK2/metase-gtk2.gladep
 
 man_MANS = Collect/pinot-collect.1 Search/pinot-search.1 UI/GTK2/src/pinot.1
 
 install-data-local:
 	$(mkinstalldirs) $(DESTDIR)$(datadir)/pinot
-	$(INSTALL_DATA) UI/GTK2/index.html $(DESTDIR)$(datadir)/pinot/index.html
 	$(INSTALL_DATA) UI/GTK2/xapian-powered.png $(DESTDIR)$(datadir)/pinot/xapian-powered.png
 	$(INSTALL_DATA) UI/GTK2/metase-gtk2.glade $(DESTDIR)$(datadir)/pinot/metase-gtk2.glade
 	$(INSTALL_DATA) UI/GTK2/metase-gtk2.gladep $(DESTDIR)$(datadir)/pinot/metase-gtk2.gladep

Deleted: trunk/UI/GTK2/index.html
===================================================================
--- trunk/UI/GTK2/index.html	2006-06-09 11:31:54 UTC (rev 304)
+++ trunk/UI/GTK2/index.html	2006-06-09 11:35:14 UTC (rev 305)
@@ -1,29 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
-<HTML>
-<html>
-<head><title>Welcome to Pinot !</title>
-</head>
-<body bgcolor="#ffffff" text="#000000" link="#c80000" vlink="#900000" alink="#ea5b1a">
-
-<table width="100%">
-<tr>
-<td colspan="3" align="center">
-<strong>Welcome to Pinot !</strong>
-</td>
-</tr>
-
-<tr>
-<td colspan="3" align="center">
-Visit the web site at
-<a href="http://pinot.berlios.de/">pinot.berlios.de</a>.
-</td>
-</tr>
-
-<tr>
-<td valign="top" align="center">
-<img src="xapian-powered.png" alt="Powered By Xapian Logo" width="208" height="30">
-</td>
-</tr>
-
-</body>
-</html>

Deleted: trunk/UI/GTK2/src/HtmlView.cpp
===================================================================
--- trunk/UI/GTK2/src/HtmlView.cpp	2006-06-09 11:31:54 UTC (rev 304)
+++ trunk/UI/GTK2/src/HtmlView.cpp	2006-06-09 11:35:14 UTC (rev 305)
@@ -1,84 +0,0 @@
-/*
- *  This program is free software; you can redistribute it and/or modify
- *  it under the terms of the GNU General Public License as published by
- *  the Free Software Foundation; either version 2 of the License, or
- *  (at your option) any later version.
- *
- *  This program is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *  GNU Library General Public License for more details.
- *
- *  You should have received a copy of the GNU General Public License
- *  along with this program; if not, write to the Free Software
- *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
- */
-
-#include <iostream>
-
-#include <glibmm/wrap.h>
-
-#include "config.h"
-#include "NLS.h"
-#include "HtmlView.h"
-#include "PinotUtils.h"
-
-using namespace Glib;
-using namespace Gtk;
-
-HtmlView::HtmlView(Menu *pPopupMenu) :
-	MozillaRenderer(),
-	SigC::Object(),
-	m_pPopupMenu(pPopupMenu),
-	m_pDocHtmlView(NULL)
-{
-	GtkWidget *view = getObject();
-	if (view != NULL)
-	{
-		// Wrap this into a gtkmm Widget object
-		m_pDocHtmlView = wrap(view);
-		if (m_pDocHtmlView != NULL)
-		{
-			// Handle button presses
-			m_pDocHtmlView->signal_button_press_event().connect_notify(
-				SigC::slot(*this, &HtmlView::onButtonPressEvent));
-
-			m_pDocHtmlView->show();
-		}
-	}
-}
-
-HtmlView::~HtmlView()
-{
-	if (m_pDocHtmlView != NULL)
-	{
-		delete m_pDocHtmlView;
-	}
-}
-
-//
-// Handles button presses.
-//
-void HtmlView::onButtonPressEvent(GdkEventButton *ev)
-{
-#ifdef DEBUG
-	cout << "HtmlView::onButtonPressEvent: click on button " << ev->button << endl;
-#endif
-	// Check for popup click
-	if ((ev->type == GDK_BUTTON_PRESS) &&
-		(ev->button == 3) )
-	{
-		if (m_pPopupMenu != NULL)
-		{
-			m_pPopupMenu->popup(ev->button, ev->time);
-		}
-	}
-}
-
-//
-// Returns the underlying widget.
-//
-Widget *HtmlView::getWidget(void) const
-{
-	return m_pDocHtmlView;
-}

Deleted: trunk/UI/GTK2/src/HtmlView.h
===================================================================
--- trunk/UI/GTK2/src/HtmlView.h	2006-06-09 11:31:54 UTC (rev 304)
+++ trunk/UI/GTK2/src/HtmlView.h	2006-06-09 11:35:14 UTC (rev 305)
@@ -1,47 +0,0 @@
-/*
- *  This program is free software; you can redistribute it and/or modify
- *  it under the terms of the GNU General Public License as published by
- *  the Free Software Foundation; either version 2 of the License, or
- *  (at your option) any later version.
- *
- *  This program is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *  GNU Library General Public License for more details.
- *
- *  You should have received a copy of the GNU General Public License
- *  along with this program; if not, write to the Free Software
- *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
- */
-
-#ifndef _HTMLVIEW_HH
-#define _HTMLVIEW_HH
-
-#include <sigc++/object.h>
-#include <gtkmm/menu.h>
-
-#include "MozillaRenderer.h"
-
-class HtmlView : public MozillaRenderer, public SigC::Object
-{
-	public:
-		HtmlView(Gtk::Menu *pPopupMenu);
-		virtual ~HtmlView();
-
-		/// Returns the underlying widget.
-		Gtk::Widget *getWidget(void) const;
-
-	protected:
-		Gtk::Menu *m_pPopupMenu;
-		Gtk::Widget *m_pDocHtmlView;
-
-		/// Handles button presses.
-		void onButtonPressEvent(GdkEventButton *ev);
-
-	private:
-		HtmlView(const HtmlView &other);
-		HtmlView &operator=(const HtmlView &other);
-
-};
-
-#endif // _HTMLVIEW_HH

Modified: trunk/UI/GTK2/src/Makefile.am
===================================================================
--- trunk/UI/GTK2/src/Makefile.am	2006-06-09 11:31:54 UTC (rev 304)
+++ trunk/UI/GTK2/src/Makefile.am	2006-06-09 11:35:14 UTC (rev 305)
@@ -19,7 +19,6 @@
 	Notebook.h \
 	PinotUtils.h \
 	WorkerThreads.h \
-	HtmlView.h \
 	IndexTree.h \
 	MboxHandler.h \
 	PinotSettings.h \
@@ -45,7 +44,6 @@
 	Notebook.cpp \
 	PinotUtils.cpp \
 	WorkerThreads.cpp \
-	HtmlView.cpp \
 	IndexTree.cpp \
 	MboxHandler.cpp \
 	PinotSettings.cpp \
@@ -55,12 +53,11 @@
 
 AM_CXXFLAGS = -I../../../Utils -I../../../Tokenize -I../../../SQL \
 	-I../../../Monitor -I../../../Collect -I../../../Search \
-	-I../../../Search/Google -I../../../Index -I../../RenderHTML \
+	-I../../../Search/Google -I../../../Index \
 	@SQL_CFLAGS@ @HTTP_CFLAGS@ @MIME_CFLAGS@ @XML_CFLAGS@ @SOAP_CFLAGS@ @INDEX_CFLAGS@ @UI_CFLAGS@
 
 pinot_LDADD = -L../../../Utils -L../../../Tokenize -L../../../SQL -L../../../Monitor \
 	-L../../../Collect -L../../../Search -L../../../Search/Google \
-	-L../../../Index -L../../RenderHTML \
-	-lHTML -lIndex @SEARCH_LIBS@ -lMonitor -lCollect -lSQL -lTokenize -lUtils \
+	-L../../../Index -lIndex @SEARCH_LIBS@ -lMonitor -lCollect -lSQL -lTokenize -lUtils \
 	@LIBS@ @UI_LIBS@ @INDEX_LIBS@ @SOAP_LIBS@ @XML_LIBS@ @MIME_LIBS@ @HTTP_LIBS@ @SQL_LIBS@ @MISC_LIBS@
 

Modified: trunk/configure.in
===================================================================
--- trunk/configure.in	2006-06-09 11:31:54 UTC (rev 304)
+++ trunk/configure.in	2006-06-09 11:35:14 UTC (rev 305)
@@ -84,32 +84,6 @@
 AC_SUBST(SEARCH_LTLIBRARIES)
 AC_SUBST(SEARCH_LIBS)
 
-dnl Mozilla
-AC_MSG_CHECKING([which Gecko engine to use])
-AC_ARG_WITH(gecko, AS_HELP_STRING(--with-gecko@<:@=mozilla|firefox@:>@,
-   which Gecko engine to use (default: mozilla)))
-gecko=$with_gecko
-if test "x$gecko" = "x"; then
-   gecko="mozilla"
-fi
-AC_MSG_RESULT([$gecko])
-
-PKG_CHECK_MODULES(GECKO, $gecko-xpcom >= 1.4 $gecko-gtkmozembed >= 1.4 )
-dnl Mozilla NSS and NSPR
-AC_PATH_PROG(NSS_CONFIG, nss-config, no)
-if test "$NSS_CONFIG" = "no" ; then
-   PKG_CHECK_MODULES(MOZILLANS, $gecko-nss >= 1.4 $gecko-nspr >= 1.4)
-   MOZILLA_NS_DIR="HAS_MOZILLA_NSS"
-else
-   PKG_CHECK_MODULES(MOZILLANS, nss >= 1.4 nspr >= 1.4)
-   MOZILLA_NS_DIR="HAS_NSS"
-fi
-dnl Location of Mozilla's library directory
-MOZILLA_LIB_DIR="`$PKG_CONFIG --variable=libdir $gecko-gtkmozembed`"
-if test "$MOZILLA_LIB_DIR" = "" ; then
-  MOZILLA_LIB_DIR=/usr/lib/mozilla
-fi
-
 dnl Neon or Curl ?
 AC_MSG_CHECKING(which HTTP library to use)
 AC_ARG_WITH(http, AS_HELP_STRING(--with-http@<:@=neon|curl@:>@,
@@ -195,8 +169,7 @@
 AC_SUBST(GLIBMM_CFLAGS)
 AC_SUBST(GLIBMM_LIBS)
 PKG_CHECK_MODULES(UI, gtkmm-2.4 >= 2.6 )
-UI_CFLAGS="$MOZILLANS_CFLAGS -D$MOZILLA_NS_DIR $GECKO_CFLAGS $UI_CFLAGS"
-UI_LIBS="-lpthread -L$MOZILLA_LIB_DIR -Xlinker -rpath -Xlinker $MOZILLA_LIB_DIR $GECKO_LIBS $MOZILLANS_LIBS $UI_LIBS"
+UI_LIBS="-lpthread $UI_LIBS"
 AC_SUBST(UI_CFLAGS)
 AC_SUBST(UI_LIBS)
 
@@ -210,5 +183,5 @@
 if test "$SOAP_SUBDIRS" != "" ; then
   AC_OUTPUT( Search/Google/Makefile )
 fi
-AC_OUTPUT( Search/Makefile Index/Makefile Monitor/Makefile UI/RenderHTML/Makefile UI/GTK2/src/Makefile )
+AC_OUTPUT( Search/Makefile Index/Makefile Monitor/Makefile UI/GTK2/src/Makefile )
 



From fabricecolin at berlios.de  Fri Jun  9 14:03:03 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Fri, 9 Jun 2006 14:03:03 +0200
Subject: [Pinot-svn] r306 - trunk/UI/GTK2/src
Message-ID: <200606091203.k59C33j6021569@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-09 14:02:53 +0200 (Fri, 09 Jun 2006)
New Revision: 306

Modified:
   trunk/UI/GTK2/src/PinotSettings.cpp
   trunk/UI/GTK2/src/PinotSettings.h
   trunk/UI/GTK2/src/mainWindow.cc
Log:
Remember whether the queries list is expanded.


Modified: trunk/UI/GTK2/src/PinotSettings.cpp
===================================================================
--- trunk/UI/GTK2/src/PinotSettings.cpp	2006-06-09 11:35:14 UTC (rev 305)
+++ trunk/UI/GTK2/src/PinotSettings.cpp	2006-06-09 12:02:53 UTC (rev 306)
@@ -87,6 +87,7 @@
 	m_width(0),
 	m_height(0),
 	m_panePos(-1),
+	m_expandQueries(true),
 	m_ignoreRobotsDirectives(false),
 	m_suggestQueryTerms(true),
 	m_newResultsColour("red"),
@@ -390,6 +391,17 @@
 		{
 			m_panePos = atoi(nodeContent.c_str());
 		}
+		else if (nodeName == "expandqueries")
+		{
+			if (nodeContent == "YES")
+			{
+				m_expandQueries = true;
+			}
+			else
+			{
+				m_expandQueries = false;
+			}
+		}
 	}
 
 	return true;
@@ -795,6 +807,7 @@
 	addChildElement(pElem, "height", numStr);
 	sprintf(numStr, "%d", m_panePos);
 	addChildElement(pElem, "panepos", numStr);
+	addChildElement(pElem, "expandqueries", (m_expandQueries ? "YES" : "NO"));
 	// User-defined indexes
 	for (map<string, string>::iterator indexIter = m_indexNames.begin(); indexIter != m_indexNames.end(); ++indexIter)
 	{

Modified: trunk/UI/GTK2/src/PinotSettings.h
===================================================================
--- trunk/UI/GTK2/src/PinotSettings.h	2006-06-09 11:35:14 UTC (rev 305)
+++ trunk/UI/GTK2/src/PinotSettings.h	2006-06-09 12:02:53 UTC (rev 306)
@@ -146,6 +146,7 @@
 		int m_width;
 		int m_height;
 		int m_panePos;
+		bool m_expandQueries;
 		bool m_ignoreRobotsDirectives;
 		bool m_suggestQueryTerms;
 		Gdk::Color m_newResultsColour;

Modified: trunk/UI/GTK2/src/mainWindow.cc
===================================================================
--- trunk/UI/GTK2/src/mainWindow.cc	2006-06-09 11:35:14 UTC (rev 305)
+++ trunk/UI/GTK2/src/mainWindow.cc	2006-06-09 12:02:53 UTC (rev 306)
@@ -141,6 +141,7 @@
 	{
 		mainHpaned->set_position(m_settings.m_panePos);
 	}
+	queryExpander->set_expanded(m_settings.m_expandQueries);
 
 	// Position the engine tree
 	m_pEnginesTree = manage(new EnginesTree(enginesVbox, m_settings));
@@ -2279,10 +2280,10 @@
 	m_pageSwitchConnection.disconnect();
 
 	// Save the window's position and dimensions now
-	// Don't worry about the gravity, it hasn't been changed
 	get_position(m_settings.m_xPos, m_settings.m_yPos);
 	get_size(m_settings.m_width, m_settings.m_height);
 	m_settings.m_panePos = mainHpaned->get_position();
+	m_settings.m_expandQueries = queryExpander->get_expanded();
 #ifdef DEBUG
 	cout << "mainWindow::on_mainWindow_delete_event: quitting" << endl;
 #endif



From fabricecolin at berlios.de  Fri Jun  9 14:05:22 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Fri, 9 Jun 2006 14:05:22 +0200
Subject: [Pinot-svn] r307 - in trunk: . po
Message-ID: <200606091205.k59C5Ma6022359@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-09 14:05:10 +0200 (Fri, 09 Jun 2006)
New Revision: 307

Modified:
   trunk/README
   trunk/pinot.spec.in
   trunk/po/POTFILES.in
Log:
Dropped references to internal viewer stuff.


Modified: trunk/README
===================================================================
--- trunk/README	2006-06-09 12:02:53 UTC (rev 306)
+++ trunk/README	2006-06-09 12:05:10 UTC (rev 307)
@@ -41,10 +41,7 @@
 gmime							2.1.9
 http://spruce.sourceforge.net/gmime
 
-Mozilla's gtk-mozembed (3)				1.4
-http://www.mozilla.org/
-
-boost (4)						1.32.0
+boost (3)						1.32.0
 http://www.boost.org/
 
 shared-mime-info					0.17
@@ -68,14 +65,13 @@
 TagLib							1.4
 http://ktown.kde.org/~wheeler/taglib/
 
-glademm (5)						2.12.0 cvs
+glademm (4)						2.12.0 cvs
 http://home.wtal.de/petig/Gtk/index.html
 
 (1) enabled with "./configure --with-http=neon|curl"
 (2) enabled with "./configure --with-soap=yes"
-(3) select Mozilla or Firefox with "./configure --with-gecko=mozilla|firefox"
-(4) for building only
-(5) to optionally regenerate the GUI code
+(3) for building only
+(4) to optionally regenerate the GUI code
 
 FAQ :
 -----

Modified: trunk/pinot.spec.in
===================================================================
--- trunk/pinot.spec.in	2006-06-09 12:02:53 UTC (rev 306)
+++ trunk/pinot.spec.in	2006-06-09 12:05:10 UTC (rev 307)
@@ -1,7 +1,4 @@
 # @configure_input@
-# We need an explicit dependency on mozilla as the so files don't have a version number 
-%define mozilla_ver %(pkg-config --modversion mozilla-gtkmozembed)
-
 Summary: Metasearch tool
 Name: @PACKAGE@
 Version: @VERSION@
@@ -11,8 +8,8 @@
 Source: %{name}-%{version}.tar.gz
 URL: http://pinot.berlios.de/
 BuildRoot: %{_tmppath}/%{name}-%{version}-%{release}-root
-Requires: xapian-core-libs >= 0.9.4, curl >= 7.13, gtkmm24 >= 2.6, libxml++ >= 2.12, mozilla >= %{mozilla_ver}, sqlite >= 3.1.2, libtextcat >= 2.2, gmime >= 2.1, shared-mime-info
-BuildRequires: xapian-core-devel >= 0.9.4, curl-devel >= 7.13, gtkmm24-devel >= 2.6, libxml++-devel >= 2.12, mozilla-devel >= %{mozilla_ver}, sqlite-devel >= 3.1.2, libtextcat-devel >= 2.2, gmime-devel >= 2.1, taglib-devel >= 1.4, boost-devel >= 1.32, gettext-devel, desktop-file-utils
+Requires: xapian-core-libs >= 0.9.4, curl >= 7.13, gtkmm24 >= 2.6, libxml++ >= 2.12, sqlite >= 3.1.2, libtextcat >= 2.2, gmime >= 2.1, shared-mime-info
+BuildRequires: xapian-core-devel >= 0.9.4, curl-devel >= 7.13, gtkmm24-devel >= 2.6, libxml++-devel >= 2.12, sqlite-devel >= 3.1.2, libtextcat-devel >= 2.2, gmime-devel >= 2.1, taglib-devel >= 1.4, boost-devel >= 1.32, gettext-devel, desktop-file-utils
 %if 0%{?_with_soap:1}
 BuildRequires: gsoap
 %endif
@@ -55,8 +52,8 @@
 %setup -q
 
 %build
-%configure %{?_with_soap:--with-soap=yes}
-make %{?_with_debug:CXXFLAGS="-g -DDEBUG"}
+%configure %{?_with_soap:--with-soap=yes} %{?_with_debug:CXXFLAGS="-g -DDEBUG"}
+make
 
 %install
 [ -n "$RPM_BUILD_ROOT" -a "$RPM_BUILD_ROOT" != / ] && rm -rf $RPM_BUILD_ROOT
@@ -74,7 +71,6 @@
 %{_bindir}/pinot
 %ghost %{_bindir}/pinot-collect
 %{_bindir}/pinot-search
-%{_datadir}/pinot/index.html
 %{_datadir}/pinot/xapian-powered.png
 %{_datadir}/pinot/metase-gtk2.glade
 %{_datadir}/pinot/metase-gtk2.gladep

Modified: trunk/po/POTFILES.in
===================================================================
--- trunk/po/POTFILES.in	2006-06-09 12:02:53 UTC (rev 306)
+++ trunk/po/POTFILES.in	2006-06-09 12:05:10 UTC (rev 307)
@@ -1,6 +1,5 @@
 # List of source files containing translatable strings.
 UI/GTK2/src/EnginesTree.cpp
-UI/GTK2/src/HtmlView.cpp
 UI/GTK2/src/importDialog.cc
 UI/GTK2/src/importDialog_glade.cc
 UI/GTK2/src/indexDialog.cc



From fabricecolin at berlios.de  Fri Jun  9 15:32:17 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Fri, 9 Jun 2006 15:32:17 +0200
Subject: [Pinot-svn] r308 - trunk/Utils
Message-ID: <200606091332.k59DWHMq032687@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-09 15:32:15 +0200 (Fri, 09 Jun 2006)
New Revision: 308

Modified:
   trunk/Utils/Document.cpp
   trunk/Utils/IndexedDocument.cpp
Log:
Minor fix and cosmetic changes.


Modified: trunk/Utils/Document.cpp
===================================================================
--- trunk/Utils/Document.cpp	2006-06-09 12:05:10 UTC (rev 307)
+++ trunk/Utils/Document.cpp	2006-06-09 13:32:15 UTC (rev 308)
@@ -62,6 +62,7 @@
 	m_dataLength(0),
 	m_isMapped(false)
 {
+	// Copying does a deep copy
 	setData(other.m_pData, other.m_dataLength);
 }
 
@@ -72,8 +73,10 @@
 
 Document& Document::operator=(const Document& other)
 {
+	// Copying does a deep copy
 	DocumentInfo::operator=(other);
 	setData(other.m_pData, other.m_dataLength);
+	m_isMapped = false;
 
 	return *this;
 }

Modified: trunk/Utils/IndexedDocument.cpp
===================================================================
--- trunk/Utils/IndexedDocument.cpp	2006-06-09 12:05:10 UTC (rev 307)
+++ trunk/Utils/IndexedDocument.cpp	2006-06-09 13:32:15 UTC (rev 308)
@@ -21,15 +21,15 @@
 
 IndexedDocument::IndexedDocument(const string &title, const string &location,
 	const string &originalLocation, const string &type, const string &language) :
-	Document(title, location, type, language)
+	Document(title, location, type, language),
+	m_originalLocation(originalLocation)
 {
-	m_originalLocation = originalLocation;
 }
 
 IndexedDocument::IndexedDocument(const IndexedDocument &other) :
-	Document(other)
+	Document(other),
+	m_originalLocation(other.m_originalLocation)
 {
-	m_originalLocation = other.m_originalLocation;
 }
 
 IndexedDocument::~IndexedDocument()



From fabricecolin at berlios.de  Fri Jun  9 15:47:49 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Fri, 9 Jun 2006 15:47:49 +0200
Subject: [Pinot-svn] r309 - in trunk: . Collect Search UI/GTK2/src po
Message-ID: <200606091347.k59Dln9Q003325@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-09 15:47:44 +0200 (Fri, 09 Jun 2006)
New Revision: 309

Modified:
   trunk/Collect/pinot-collect.1
   trunk/Search/pinot-search.1
   trunk/TODO
   trunk/UI/GTK2/src/pinot.1
   trunk/po/es.po
   trunk/po/fr.po
Log:
Synchronised with current source.


Modified: trunk/Collect/pinot-collect.1
===================================================================
--- trunk/Collect/pinot-collect.1	2006-06-09 13:32:15 UTC (rev 308)
+++ trunk/Collect/pinot-collect.1	2006-06-09 13:47:44 UTC (rev 309)
@@ -1,5 +1,5 @@
 .\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.36.
-.TH PINOT-COLLECT "1" "May 2006" "pinot-collect - pinot 0.48" "User Commands"
+.TH PINOT-COLLECT "1" "June 2006" "pinot-collect - pinot 0.49" "User Commands"
 .SH NAME
 pinot-collect \- Download an URL from the command-line
 .SH SYNOPSIS

Modified: trunk/Search/pinot-search.1
===================================================================
--- trunk/Search/pinot-search.1	2006-06-09 13:32:15 UTC (rev 308)
+++ trunk/Search/pinot-search.1	2006-06-09 13:47:44 UTC (rev 309)
@@ -1,5 +1,5 @@
 .\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.36.
-.TH PINOT-SEARCH "1" "May 2006" "pinot-search - pinot 0.48" "User Commands"
+.TH PINOT-SEARCH "1" "June 2006" "pinot-search - pinot 0.49" "User Commands"
 .SH NAME
 pinot-search \- Query search engines from the command-line
 .SH SYNOPSIS

Modified: trunk/TODO
===================================================================
--- trunk/TODO	2006-06-09 13:32:15 UTC (rev 308)
+++ trunk/TODO	2006-06-09 13:47:44 UTC (rev 309)
@@ -4,11 +4,8 @@
 - Advertise service via Rendezvous
 - Check for leaks with valgrind (eg --tool=memcheck -v --leak-check=yes --show-reachable=yes ...)
 - Replace calls to system() with CommandLine::runAsync()
-- Drop internal browser
 - MIMEScanner should also return parent types so that we don't filter out types unnecessarily
 - Distribute pinot.pot
-- Add link to this to explain why FC5 version is linked against mozilla, not firefox
-  https://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=149828
 
 Tokenize
 - Allow to cache documents that had to be converted ? eg PDF, MS Word
@@ -88,7 +85,6 @@
 - Replace Combobox objects with ComboboxText's (glademm support required)
 - Replace glademm with libglademm ?
 - Show activity when mail is being indexed
-- Update Last Run after the query has completed
 - Filter documents by language, similarly to how labels are shown
 - Clean up method names
 - Prefer ustring to string whenever possible

Modified: trunk/UI/GTK2/src/pinot.1
===================================================================
--- trunk/UI/GTK2/src/pinot.1	2006-06-09 13:32:15 UTC (rev 308)
+++ trunk/UI/GTK2/src/pinot.1	2006-06-09 13:47:44 UTC (rev 309)
@@ -1,5 +1,5 @@
 .\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.36.
-.TH PINOT "1" "May 2006" "pinot - pinot 0.48" "User Commands"
+.TH PINOT "1" "June 2006" "pinot - pinot 0.49" "User Commands"
 .SH NAME
 pinot \- A metasearch tool for the Free Desktop
 .SH SYNOPSIS

Modified: trunk/po/es.po
===================================================================
--- trunk/po/es.po	2006-06-09 13:32:15 UTC (rev 308)
+++ trunk/po/es.po	2006-06-09 13:47:44 UTC (rev 309)
@@ -8,7 +8,7 @@
 msgstr ""
 "Project-Id-Version: pinot 0.43\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2006-05-24 15:04+0800\n"
+"POT-Creation-Date: 2006-06-09 21:46+0800\n"
 "PO-Revision-Date: 2006-01-30 16:44+0800\n"
 "Last-Translator: Jes?s Tramullas <jesus at tramullas.com>\n"
 "Language-Team: es <jesus at tramullas.com>\n"
@@ -16,99 +16,90 @@
 "Content-Type: text/plain; charset=utf-8\n"
 "Content-Transfer-Encoding: 8bit\n"
 
-#: UI/GTK2/src/EnginesTree.cpp:67
+#: UI/GTK2/src/EnginesTree.cpp:66
 msgid "Search Engines"
 msgstr "Motores de b?squeda"
 
-#: UI/GTK2/src/EnginesTree.cpp:329
+#: UI/GTK2/src/EnginesTree.cpp:328
 msgid "Current User"
 msgstr "Usuario"
 
-#: UI/GTK2/src/EnginesTree.cpp:340 UI/GTK2/src/mainWindow.cc:354
-#: UI/GTK2/src/mainWindow.cc:357 UI/GTK2/src/mainWindow.cc:528
-#: UI/GTK2/src/mainWindow.cc:1001 UI/GTK2/src/mainWindow.cc:1057
-#: UI/GTK2/src/mainWindow.cc:1077 UI/GTK2/src/mainWindow.cc:1112
-#: UI/GTK2/src/mainWindow.cc:1703 UI/GTK2/src/PinotSettings.cpp:204
-#: UI/GTK2/src/PinotSettings.cpp:970 UI/GTK2/src/PinotSettings.cpp:1026
+#: UI/GTK2/src/EnginesTree.cpp:339 UI/GTK2/src/mainWindow.cc:237
+#: UI/GTK2/src/mainWindow.cc:339 UI/GTK2/src/mainWindow.cc:342
+#: UI/GTK2/src/mainWindow.cc:510 UI/GTK2/src/mainWindow.cc:961
+#: UI/GTK2/src/mainWindow.cc:1017 UI/GTK2/src/mainWindow.cc:1037
+#: UI/GTK2/src/mainWindow.cc:1072 UI/GTK2/src/mainWindow.cc:1615
+#: UI/GTK2/src/PinotSettings.cpp:204 UI/GTK2/src/PinotSettings.cpp:926
+#: UI/GTK2/src/PinotSettings.cpp:982
 msgid "My Documents"
 msgstr "Mis documentos"
 
-#: UI/GTK2/src/EnginesTree.cpp:344 UI/GTK2/src/mainWindow.cc:360
-#: UI/GTK2/src/mainWindow.cc:363 UI/GTK2/src/mainWindow.cc:532
-#: UI/GTK2/src/MboxHandler.cpp:159 UI/GTK2/src/PinotSettings.cpp:205
-#: UI/GTK2/src/PinotSettings.cpp:971 UI/GTK2/src/PinotSettings.cpp:1027
-#: UI/GTK2/src/prefsDialog_glade.cc:115
+#: UI/GTK2/src/EnginesTree.cpp:343 UI/GTK2/src/mainWindow.cc:345
+#: UI/GTK2/src/mainWindow.cc:348 UI/GTK2/src/MboxHandler.cpp:159
+#: UI/GTK2/src/PinotSettings.cpp:205 UI/GTK2/src/PinotSettings.cpp:927
+#: UI/GTK2/src/PinotSettings.cpp:983 UI/GTK2/src/prefsDialog_glade.cc:112
 msgid "My Email"
 msgstr "Mi email"
 
-#: UI/GTK2/src/importDialog.cc:95
-msgid "Enabled"
-msgstr "Activo"
-
-#: UI/GTK2/src/importDialog.cc:96 UI/GTK2/src/prefsDialog.cc:83
-msgid "MIME Type"
-msgstr "Tipo MIME"
-
-#: UI/GTK2/src/importDialog.cc:122
+#: UI/GTK2/src/importDialog.cc:107
 msgid "File"
 msgstr "Fichero"
 
-#: UI/GTK2/src/importDialog.cc:125
+#: UI/GTK2/src/importDialog.cc:110
 msgid "Directory"
 msgstr "Directorio"
 
-#: UI/GTK2/src/importDialog.cc:130 UI/GTK2/src/IndexTree.cpp:69
-#: UI/GTK2/src/ResultsTree.cpp:130
+#: UI/GTK2/src/importDialog.cc:115 UI/GTK2/src/IndexTree.cpp:68
+#: UI/GTK2/src/ResultsTree.cpp:129
 msgid "URL"
 msgstr "URL"
 
-#: UI/GTK2/src/importDialog.cc:136 UI/GTK2/src/queryDialog.cc:91
+#: UI/GTK2/src/importDialog.cc:121 UI/GTK2/src/queryDialog.cc:91
 msgid "None"
 msgstr "Ninguno"
 
-#: UI/GTK2/src/importDialog.cc:429
+#: UI/GTK2/src/importDialog.cc:362
 msgid "Document To Import"
 msgstr "Documento a importar"
 
-#: UI/GTK2/src/importDialog_glade.cc:66 UI/GTK2/src/indexDialog_glade.cc:68
+#: UI/GTK2/src/importDialog_glade.cc:68 UI/GTK2/src/indexDialog_glade.cc:68
 msgid "Location:"
 msgstr "Localizaci?n:"
 
-#: UI/GTK2/src/importDialog_glade.cc:67
+#: UI/GTK2/src/importDialog_glade.cc:69
 #: UI/GTK2/src/propertiesDialog_glade.cc:65
 msgid "Title:"
 msgstr "T?tulo:"
 
-#: UI/GTK2/src/importDialog_glade.cc:70 UI/GTK2/src/indexDialog_glade.cc:67
+#: UI/GTK2/src/importDialog_glade.cc:72 UI/GTK2/src/indexDialog_glade.cc:67
 msgid "Type:"
 msgstr "Tipo:"
 
-#: UI/GTK2/src/importDialog_glade.cc:72 UI/GTK2/src/indexDialog_glade.cc:64
-#: UI/GTK2/src/prefsDialog_glade.cc:70
+#: UI/GTK2/src/importDialog_glade.cc:74 UI/GTK2/src/indexDialog_glade.cc:64
 msgid "..."
 msgstr "..."
 
-#: UI/GTK2/src/importDialog_glade.cc:78
+#: UI/GTK2/src/importDialog_glade.cc:80
 msgid "Depth:"
 msgstr "Profundidad:"
 
-#: UI/GTK2/src/importDialog_glade.cc:79
+#: UI/GTK2/src/importDialog_glade.cc:81
 msgid "Symlinks:"
 msgstr "Enlaces:"
 
-#: UI/GTK2/src/importDialog_glade.cc:80
+#: UI/GTK2/src/importDialog_glade.cc:82
 msgid "Follow symlinks"
 msgstr "Seguir los enlaces"
 
-#: UI/GTK2/src/importDialog_glade.cc:83
+#: UI/GTK2/src/importDialog_glade.cc:85
 msgid "Apply label:"
 msgstr "Etiqueta aplicada:"
 
-#: UI/GTK2/src/importDialog_glade.cc:91 UI/GTK2/src/mainWindow_glade.cc:204
+#: UI/GTK2/src/importDialog_glade.cc:90 UI/GTK2/src/mainWindow_glade.cc:204
 msgid "Import"
 msgstr "Importar"
 
-#: UI/GTK2/src/importDialog_glade.cc:211
+#: UI/GTK2/src/importDialog_glade.cc:199
 msgid "Import document"
 msgstr "Importar documento"
 
@@ -128,251 +119,225 @@
 msgid "External index"
 msgstr "?ndice externo"
 
-#: UI/GTK2/src/IndexTree.cpp:64 UI/GTK2/src/ResultsTree.cpp:121
+#: UI/GTK2/src/IndexTree.cpp:63 UI/GTK2/src/ResultsTree.cpp:120
 msgid "Title"
 msgstr "T?tulo"
 
-#: UI/GTK2/src/IndexTree.cpp:74
+#: UI/GTK2/src/IndexTree.cpp:73
 msgid "Timestamp"
 msgstr "Fecha"
 
-#: UI/GTK2/src/IndexPage.cpp:50
+#: UI/GTK2/src/IndexPage.cpp:49
 msgid "Show Previous"
 msgstr "Mostrar previos"
 
-#: UI/GTK2/src/IndexPage.cpp:56
+#: UI/GTK2/src/IndexPage.cpp:55
 msgid "Show Next"
 msgstr "Mostrar siguientes"
 
-#: UI/GTK2/src/IndexPage.cpp:158 UI/GTK2/src/IndexPage.cpp:204
+#: UI/GTK2/src/IndexPage.cpp:157 UI/GTK2/src/IndexPage.cpp:203
 msgid "All labels"
 msgstr "Todas las etiquetas"
 
-#: UI/GTK2/src/mainWindow.cc:167
+#: UI/GTK2/src/mainWindow.cc:169
 msgid "Query Name"
 msgstr "Nombre de la b?squeda"
 
-#: UI/GTK2/src/mainWindow.cc:172
+#: UI/GTK2/src/mainWindow.cc:174
 msgid "Last Run"
 msgstr "?ltima ejecuci?n"
 
-#: UI/GTK2/src/mainWindow.cc:173
+#: UI/GTK2/src/mainWindow.cc:175
 msgid "Summary"
 msgstr "Sumario"
 
-#: UI/GTK2/src/mainWindow.cc:225
+#: UI/GTK2/src/mainWindow.cc:215
 msgid "Add index"
 msgstr "A?adir ?ndice"
 
-#: UI/GTK2/src/mainWindow.cc:226
+#: UI/GTK2/src/mainWindow.cc:216
 msgid "Remove index"
 msgstr "Borrar ?ndice"
 
-#: UI/GTK2/src/mainWindow.cc:242
+#: UI/GTK2/src/mainWindow.cc:232
 msgid "Ready"
 msgstr "Listo"
 
-#: UI/GTK2/src/mainWindow.cc:259 UI/GTK2/src/mainWindow.cc:958
-#: UI/GTK2/src/mainWindow.cc:1295 UI/GTK2/src/mainWindow.cc:2913
-#: UI/GTK2/src/mainWindow_glade.cc:210
-msgid "View"
-msgstr "Ver"
-
-#: UI/GTK2/src/mainWindow.cc:291
+#: UI/GTK2/src/mainWindow.cc:276
 msgid "N/A"
 msgstr "Desconocido"
 
-#: UI/GTK2/src/mainWindow.cc:301
+#: UI/GTK2/src/mainWindow.cc:286
 msgid "<undefined>"
 msgstr "<indefinido>"
 
-#: UI/GTK2/src/mainWindow.cc:490
+#: UI/GTK2/src/mainWindow.cc:472
 msgid "Result location is"
 msgstr "La localizaci?n del resultado es"
 
-#: UI/GTK2/src/mainWindow.cc:543
+#: UI/GTK2/src/mainWindow.cc:520
 msgid "Document location is"
 msgstr "La localizaci?n del documento es"
 
-#: UI/GTK2/src/mainWindow.cc:800
+#: UI/GTK2/src/mainWindow.cc:759
 msgid "Showing"
 msgstr "Mostrando"
 
-#: UI/GTK2/src/mainWindow.cc:805
+#: UI/GTK2/src/mainWindow.cc:764
 msgid "off"
 msgstr "desactivado"
 
-#: UI/GTK2/src/mainWindow.cc:810
+#: UI/GTK2/src/mainWindow.cc:769
 msgid "documents, starting at"
 msgstr "documentos comenzando en"
 
-#: UI/GTK2/src/mainWindow.cc:844
+#: UI/GTK2/src/mainWindow.cc:805
 msgid "Query"
 msgstr "B?squeda"
 
-#: UI/GTK2/src/mainWindow.cc:848 UI/GTK2/src/mainWindow.cc:2739
+#: UI/GTK2/src/mainWindow.cc:809 UI/GTK2/src/mainWindow.cc:2643
 msgid "on"
 msgstr "en"
 
-#: UI/GTK2/src/mainWindow.cc:852
+#: UI/GTK2/src/mainWindow.cc:813
 msgid "ended"
 msgstr "finalizado"
 
-#: UI/GTK2/src/mainWindow.cc:933
+#: UI/GTK2/src/mainWindow.cc:890
 msgid "Updated label(s)"
 msgstr "Etiqueta(s) actualizada(s)"
 
-#: UI/GTK2/src/mainWindow.cc:1011
+#: UI/GTK2/src/mainWindow.cc:971
 msgid "Updated document"
 msgstr "Documento actualizado"
 
-#: UI/GTK2/src/mainWindow.cc:1026
+#: UI/GTK2/src/mainWindow.cc:986
 msgid "Indexed"
 msgstr "Indizado"
 
-#: UI/GTK2/src/mainWindow.cc:1078
+#: UI/GTK2/src/mainWindow.cc:1038
 msgid "Unindexed document(s)"
 msgstr "Documento(s) no indizado(s)"
 
-#: UI/GTK2/src/mainWindow.cc:1123
+#: UI/GTK2/src/mainWindow.cc:1083
 msgid "Updated document properties"
 msgstr "Propiedades del documento actualizadas"
 
-#: UI/GTK2/src/mainWindow.cc:1170
+#: UI/GTK2/src/mainWindow.cc:1130
 msgid "Couldn't rename index, name"
 msgstr "No se pudo renombrar ?ndice, nombre"
 
-#: UI/GTK2/src/mainWindow.cc:1174 UI/GTK2/src/mainWindow.cc:2050
-#: UI/GTK2/src/mainWindow.cc:2573
+#: UI/GTK2/src/mainWindow.cc:1134 UI/GTK2/src/mainWindow.cc:1949
+#: UI/GTK2/src/mainWindow.cc:2477
 msgid "is already in use"
 msgstr "ya est? en uso"
 
-#: UI/GTK2/src/mainWindow.cc:1187
+#: UI/GTK2/src/mainWindow.cc:1147
 msgid "Couldn't rename index"
 msgstr "No se pudo renombrar el ?ndice"
 
-#: UI/GTK2/src/mainWindow.cc:1200
+#: UI/GTK2/src/mainWindow.cc:1160
 msgid "Edited index"
 msgstr "?ndice editado"
 
-#: UI/GTK2/src/mainWindow.cc:1642 UI/GTK2/src/mainWindow.cc:1746
+#: UI/GTK2/src/mainWindow.cc:1570 UI/GTK2/src/mainWindow.cc:1659
 msgid "Please set a location for the index first"
 msgstr "Por favor, primero fije una localizaci?n para el ?ndice"
 
-#: UI/GTK2/src/mainWindow.cc:1669
-msgid "Result location is unknown"
-msgstr "Se desconoce la localizaci?n del resultado"
-
-#: UI/GTK2/src/mainWindow.cc:1693
+#: UI/GTK2/src/mainWindow.cc:1606
 msgid "Import Document(s)"
 msgstr "Importar Documento(s)"
 
-#: UI/GTK2/src/mainWindow.cc:1825 UI/GTK2/src/WorkerThreads.cpp:424
-#: UI/GTK2/src/WorkerThreads.cpp:1138
+#: UI/GTK2/src/mainWindow.cc:1732 UI/GTK2/src/WorkerThreads.cpp:425
+#: UI/GTK2/src/WorkerThreads.cpp:1142
 msgid "Index"
 msgstr "?ndice"
 
-#: UI/GTK2/src/mainWindow.cc:1829 UI/GTK2/src/WorkerThreads.cpp:428
-#: UI/GTK2/src/WorkerThreads.cpp:1142
+#: UI/GTK2/src/mainWindow.cc:1736 UI/GTK2/src/WorkerThreads.cpp:429
+#: UI/GTK2/src/WorkerThreads.cpp:1146
 msgid "doesn't exist"
 msgstr "no existe"
 
-#: UI/GTK2/src/mainWindow.cc:1930
+#: UI/GTK2/src/mainWindow.cc:1837
 msgid "Remove this document from the index ?"
 msgstr "?Borrar este documento del ?ndice?"
 
-#: UI/GTK2/src/mainWindow.cc:1949
+#: UI/GTK2/src/mainWindow.cc:1856
 msgid "Remove these documents from the index ?"
 msgstr "?Borrar este documento del ?ndice?"
 
-#: UI/GTK2/src/mainWindow.cc:2001
+#: UI/GTK2/src/mainWindow.cc:1900
 msgid "A metasearch tool for the Free Desktop"
 msgstr "Una herramienta metabuscador para el escritorio libre"
 
-#: UI/GTK2/src/mainWindow.cc:2002
+#: UI/GTK2/src/mainWindow.cc:1901
 msgid "(C) 2005-2006 Fabrice Colin"
 msgstr "(C) 2005-2006 Fabrice Colin"
 
-#: UI/GTK2/src/mainWindow.cc:2046
+#: UI/GTK2/src/mainWindow.cc:1945
 msgid "Index name"
 msgstr "Nombre del ?ndice"
 
-#: UI/GTK2/src/mainWindow.cc:2061
+#: UI/GTK2/src/mainWindow.cc:1960
 msgid "Couldn't add index"
 msgstr "No se pudo a?adir el ?ndice"
 
-#: UI/GTK2/src/mainWindow.cc:2075
+#: UI/GTK2/src/mainWindow.cc:1974
 msgid "Added new index"
 msgstr "A?adido un nuevo ?ndice"
 
-#: UI/GTK2/src/mainWindow.cc:2110
+#: UI/GTK2/src/mainWindow.cc:2009
 msgid "Couldn't remove index"
 msgstr "No se pudo borrar el ?ndice"
 
-#: UI/GTK2/src/mainWindow.cc:2205
+#: UI/GTK2/src/mainWindow.cc:2104
 msgid "Live query"
 msgstr "B?squeda activa"
 
-#: UI/GTK2/src/mainWindow.cc:2362
+#: UI/GTK2/src/mainWindow.cc:2261
 msgid "At least one task hasn't completed yet. Quit now ?"
 msgstr "Al menos una tarea no ha finalizado. ?Parar ahora?"
 
-#: UI/GTK2/src/mainWindow.cc:2569
+#: UI/GTK2/src/mainWindow.cc:2473
 msgid "Query name"
 msgstr "Nombre la b?squeda"
 
-#: UI/GTK2/src/mainWindow.cc:2596
+#: UI/GTK2/src/mainWindow.cc:2500
 msgid "Couldn't update query"
 msgstr "No se pudo actualizar la b?squeda"
 
-#: UI/GTK2/src/mainWindow.cc:2604
+#: UI/GTK2/src/mainWindow.cc:2508
 msgid "Edited query"
 msgstr "B?squeda editada"
 
-#: UI/GTK2/src/mainWindow.cc:2611
+#: UI/GTK2/src/mainWindow.cc:2515
 msgid "Couldn't add query"
 msgstr "No se pudo a?adir la b?squeda"
 
-#: UI/GTK2/src/mainWindow.cc:2619
+#: UI/GTK2/src/mainWindow.cc:2523
 msgid "Added new query"
 msgstr "A?adida una nueva b?squeda"
 
-#: UI/GTK2/src/mainWindow.cc:2633
+#: UI/GTK2/src/mainWindow.cc:2537
 msgid "Query is not set"
 msgstr "B?squeda no definida"
 
-#: UI/GTK2/src/mainWindow.cc:2644
+#: UI/GTK2/src/mainWindow.cc:2548
 msgid "No search engine selected"
 msgstr "Motor de b?squeda no seleccionado"
 
-#: UI/GTK2/src/mainWindow.cc:2726
+#: UI/GTK2/src/mainWindow.cc:2630
 msgid "Please set the Google API key first"
 msgstr "Por favor, primero configure el API de Google"
 
-#: UI/GTK2/src/mainWindow.cc:2735
+#: UI/GTK2/src/mainWindow.cc:2639
 msgid "Running query"
 msgstr "Ejecutando la b?squeda"
 
-#: UI/GTK2/src/mainWindow.cc:2842
+#: UI/GTK2/src/mainWindow.cc:2746
 msgid "is already indexed or is being indexed"
 msgstr "ya ha sido indizado, o se est? indizando"
 
-#: UI/GTK2/src/mainWindow.cc:2871
-msgid "No URL to browse"
-msgstr "No hay URL que mostrar"
-
-#: UI/GTK2/src/mainWindow.cc:2882
-msgid "No browser configured to view results"
-msgstr "No ha configurado un navegador para ver los resultados"
-
-#: UI/GTK2/src/mainWindow.cc:2894
-msgid "Couldn't browse URL:"
-msgstr "No se pudo mostrar el URL:"
-
-#: UI/GTK2/src/mainWindow.cc:2953
-msgid "Viewing"
-msgstr "Ver"
-
 #: UI/GTK2/src/mainWindow_glade.cc:118
 msgid "Query:"
 msgstr "B?squeda:"
@@ -421,6 +386,10 @@
 msgid "List Contents Of"
 msgstr "Listar el contenido de"
 
+#: UI/GTK2/src/mainWindow_glade.cc:210
+msgid "View"
+msgstr "Ver"
+
 #: UI/GTK2/src/mainWindow_glade.cc:213
 msgid "Update"
 msgstr "Actualizar"
@@ -526,51 +495,35 @@
 msgid "Personal"
 msgstr "Personal"
 
-#: UI/GTK2/src/PinotSettings.cpp:799
+#: UI/GTK2/src/PinotSettings.cpp:762
 msgid "Unclassified"
 msgstr "No clasificado"
 
-#: UI/GTK2/src/prefsDialog.cc:74
+#: UI/GTK2/src/prefsDialog.cc:60
 msgid "Name"
 msgstr "Nombre"
 
-#: UI/GTK2/src/prefsDialog.cc:82
+#: UI/GTK2/src/prefsDialog.cc:68
 msgid "Location"
 msgstr "Localizaci?n"
 
-#: UI/GTK2/src/prefsDialog.cc:119
-msgid "In internal viewer"
-msgstr "En el visor interno"
+#: UI/GTK2/src/prefsDialog.cc:69
+msgid "MIME Type"
+msgstr "Tipo MIME"
 
-#: UI/GTK2/src/prefsDialog.cc:122
-msgid "In browser"
-msgstr "En el navegador"
-
-#: UI/GTK2/src/prefsDialog.cc:324
-msgid "Browser location"
-msgstr "Mostrar la localizaci?n"
-
-#: UI/GTK2/src/prefsDialog.cc:335
+#: UI/GTK2/src/prefsDialog.cc:266
 msgid "New Label"
 msgstr "Nueva etiqueta"
 
-#: UI/GTK2/src/prefsDialog.cc:387 UI/GTK2/src/prefsDialog.cc:424
+#: UI/GTK2/src/prefsDialog.cc:318 UI/GTK2/src/prefsDialog.cc:355
 msgid "Mbox File Location"
 msgstr "Localizaci?n del fichero mbox"
 
-#: UI/GTK2/src/prefsDialog_glade.cc:62
+#: UI/GTK2/src/prefsDialog_glade.cc:65
 msgid "HTTP crawling:"
 msgstr "Agente HTTP:"
 
-#: UI/GTK2/src/prefsDialog_glade.cc:63
-msgid "View documents:"
-msgstr "Ver los documentos"
-
-#: UI/GTK2/src/prefsDialog_glade.cc:64
-msgid "Browser:"
-msgstr "Navegador:"
-
-#: UI/GTK2/src/prefsDialog_glade.cc:65
+#: UI/GTK2/src/prefsDialog_glade.cc:66
 msgid "Google API key:"
 msgstr "Clave del API de Google"
 
@@ -578,43 +531,43 @@
 msgid "Ignore robots.txt and Robots META tag"
 msgstr "Ignorar robots.txt y la etiqueta META Robots"
 
-#: UI/GTK2/src/prefsDialog_glade.cc:73
+#: UI/GTK2/src/prefsDialog_glade.cc:70
 msgid "New results:"
 msgstr "Nuevos resultados:"
 
-#: UI/GTK2/src/prefsDialog_glade.cc:74
+#: UI/GTK2/src/prefsDialog_glade.cc:71
 msgid "Queries:"
 msgstr "B?squedas:"
 
-#: UI/GTK2/src/prefsDialog_glade.cc:75
+#: UI/GTK2/src/prefsDialog_glade.cc:72
 msgid "Enable search terms suggestion"
 msgstr "Activar sugerencia de t?rminos de b?squeda"
 
-#: UI/GTK2/src/prefsDialog_glade.cc:79
+#: UI/GTK2/src/prefsDialog_glade.cc:76
 msgid "General"
 msgstr "General"
 
-#: UI/GTK2/src/prefsDialog_glade.cc:80
+#: UI/GTK2/src/prefsDialog_glade.cc:77
 msgid "Labels are used to classify indexed documents:"
 msgstr "Las etiquetas se usan para clasificar los documentos indizados:"
 
-#: UI/GTK2/src/prefsDialog_glade.cc:85 UI/GTK2/src/prefsDialog_glade.cc:105
+#: UI/GTK2/src/prefsDialog_glade.cc:82 UI/GTK2/src/prefsDialog_glade.cc:102
 msgid "Add"
 msgstr "A?adir"
 
-#: UI/GTK2/src/prefsDialog_glade.cc:91
+#: UI/GTK2/src/prefsDialog_glade.cc:88
 msgid "Remove"
 msgstr "Borrar"
 
-#: UI/GTK2/src/prefsDialog_glade.cc:99
+#: UI/GTK2/src/prefsDialog_glade.cc:96
 msgid "Labels"
 msgstr "Etiquetas"
 
-#: UI/GTK2/src/prefsDialog_glade.cc:100
+#: UI/GTK2/src/prefsDialog_glade.cc:97
 msgid "Mail boxes of type mbox can be monitored and indexed:"
 msgstr "Los buzones de correo de tipo mbox pueden ser controlados e indizados"
 
-#: UI/GTK2/src/prefsDialog_glade.cc:335
+#: UI/GTK2/src/prefsDialog_glade.cc:305
 msgid "Preferences"
 msgstr "Preferencias"
 
@@ -694,104 +647,104 @@
 msgid "Query parameters"
 msgstr "Par?metros de b?squeda"
 
-#: UI/GTK2/src/WorkerThreads.cpp:403
+#: UI/GTK2/src/WorkerThreads.cpp:404
 msgid "Stopped browsing"
 msgstr "Exploraci?n detenida"
 
-#: UI/GTK2/src/WorkerThreads.cpp:436 UI/GTK2/src/WorkerThreads.cpp:634
-#: UI/GTK2/src/WorkerThreads.cpp:643 UI/GTK2/src/WorkerThreads.cpp:831
-#: UI/GTK2/src/WorkerThreads.cpp:1031 UI/GTK2/src/WorkerThreads.cpp:1150
+#: UI/GTK2/src/WorkerThreads.cpp:437 UI/GTK2/src/WorkerThreads.cpp:638
+#: UI/GTK2/src/WorkerThreads.cpp:647 UI/GTK2/src/WorkerThreads.cpp:835
+#: UI/GTK2/src/WorkerThreads.cpp:1035 UI/GTK2/src/WorkerThreads.cpp:1154
 msgid "Index error on"
 msgstr "Error en el ?ndice"
 
-#: UI/GTK2/src/WorkerThreads.cpp:541
+#: UI/GTK2/src/WorkerThreads.cpp:542
 msgid "Stopped querying"
 msgstr "B?squeda detenida"
 
-#: UI/GTK2/src/WorkerThreads.cpp:553
+#: UI/GTK2/src/WorkerThreads.cpp:554
 msgid "Couldn't create search engine"
 msgstr "No se pudo crear el motor de b?squeda"
 
-#: UI/GTK2/src/WorkerThreads.cpp:564
+#: UI/GTK2/src/WorkerThreads.cpp:565
 msgid "Couldn't run query on search engine"
 msgstr "No se pudo ejecutar la b?squeda contra el motor"
 
-#: UI/GTK2/src/WorkerThreads.cpp:580
+#: UI/GTK2/src/WorkerThreads.cpp:581
 msgid "No title"
 msgstr "Sin t?tulo"
 
-#: UI/GTK2/src/WorkerThreads.cpp:625
+#: UI/GTK2/src/WorkerThreads.cpp:629
 msgid "Stopped querying index labels"
 msgstr "Detenida la b?squeda de etiquetas de ?ndice"
 
-#: UI/GTK2/src/WorkerThreads.cpp:702
+#: UI/GTK2/src/WorkerThreads.cpp:706
 msgid "Stopped retrieval of"
 msgstr "Detenida la recuperaci?n de"
 
-#: UI/GTK2/src/WorkerThreads.cpp:736
+#: UI/GTK2/src/WorkerThreads.cpp:740
 msgid "Couldn't obtain downloader for protocol"
 msgstr "No se pudo usar un recuperador para el protocolo"
 
-#: UI/GTK2/src/WorkerThreads.cpp:748
+#: UI/GTK2/src/WorkerThreads.cpp:752
 msgid "Couldn't retrieve"
 msgstr "No se pudo descargar"
 
-#: UI/GTK2/src/WorkerThreads.cpp:816
+#: UI/GTK2/src/WorkerThreads.cpp:820
 msgid "Stopped indexing"
 msgstr "Detenida la indizaci?n"
 
-#: UI/GTK2/src/WorkerThreads.cpp:861
+#: UI/GTK2/src/WorkerThreads.cpp:865
 msgid "Cannot index document type"
 msgstr "No se pudo indizar el tipo de documento"
 
-#: UI/GTK2/src/WorkerThreads.cpp:865
+#: UI/GTK2/src/WorkerThreads.cpp:869
 msgid "at"
 msgstr "a"
 
-#: UI/GTK2/src/WorkerThreads.cpp:889
+#: UI/GTK2/src/WorkerThreads.cpp:893
 msgid "Couldn't tokenize"
 msgstr "No se pudo extraer cadenas"
 
-#: UI/GTK2/src/WorkerThreads.cpp:909
+#: UI/GTK2/src/WorkerThreads.cpp:913
 msgid "Robots META tag forbids indexing"
 msgstr "La etiqueta META Robots proh?be la indizaci?n"
 
-#: UI/GTK2/src/WorkerThreads.cpp:964
+#: UI/GTK2/src/WorkerThreads.cpp:968
 msgid "Couldn't index"
 msgstr "No se pudo indizar"
 
-#: UI/GTK2/src/WorkerThreads.cpp:1019
+#: UI/GTK2/src/WorkerThreads.cpp:1023
 msgid "Stopped unindexing document(s)"
 msgstr "Detenida la des-indizaci?n de documento(s)"
 
-#: UI/GTK2/src/WorkerThreads.cpp:1038
+#: UI/GTK2/src/WorkerThreads.cpp:1042
 msgid "Couldn't unindex document(s)"
 msgstr "No se pudo des-indizar lo(s) documento(s)"
 
-#: UI/GTK2/src/WorkerThreads.cpp:1123
+#: UI/GTK2/src/WorkerThreads.cpp:1127
 msgid "Stopped document update for"
 msgstr "Detenida la actualizaci?n del documento por"
 
-#: UI/GTK2/src/WorkerThreads.cpp:1158
+#: UI/GTK2/src/WorkerThreads.cpp:1162
 msgid "Couldn't update document"
 msgstr "No se pudo actualizar el documento"
 
-#: UI/GTK2/src/WorkerThreads.cpp:1208
+#: UI/GTK2/src/WorkerThreads.cpp:1212
 msgid "Stopped monitoring"
 msgstr "Detenida la monitorizaci?n"
 
-#: UI/GTK2/src/WorkerThreads.cpp:1225
+#: UI/GTK2/src/WorkerThreads.cpp:1229
 msgid "No monitoring handler"
 msgstr "No hay monitorizaci?n"
 
-#: UI/GTK2/src/WorkerThreads.cpp:1277
+#: UI/GTK2/src/WorkerThreads.cpp:1281
 msgid "Couldn't initialize file monitor"
 msgstr "No se puede inicializar el monitor de archivo"
 
-#: UI/GTK2/src/WorkerThreads.cpp:1391
+#: UI/GTK2/src/WorkerThreads.cpp:1395
 msgid "Stopped scanning"
 msgstr "Detenida la exploraci?n"
 
-#: UI/GTK2/src/WorkerThreads.cpp:1549
+#: UI/GTK2/src/WorkerThreads.cpp:1553
 msgid "Couldn't open directory"
 msgstr "No se pudo abrir el directorio"

Modified: trunk/po/fr.po
===================================================================
--- trunk/po/fr.po	2006-06-09 13:32:15 UTC (rev 308)
+++ trunk/po/fr.po	2006-06-09 13:47:44 UTC (rev 309)
@@ -8,7 +8,7 @@
 msgstr ""
 "Project-Id-Version: pinot 0.43\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2006-05-24 15:04+0800\n"
+"POT-Creation-Date: 2006-06-09 21:46+0800\n"
 "PO-Revision-Date: 2006-01-20 19:44+0800\n"
 "Last-Translator: Fabrice Colin <colinf at chez.com>\n"
 "Language-Team: fr <colinf at chez.com>\n"
@@ -16,99 +16,90 @@
 "Content-Type: text/plain; charset=utf-8\n"
 "Content-Transfer-Encoding: 8bit\n"
 
-#: UI/GTK2/src/EnginesTree.cpp:67
+#: UI/GTK2/src/EnginesTree.cpp:66
 msgid "Search Engines"
 msgstr "Moteurs"
 
-#: UI/GTK2/src/EnginesTree.cpp:329
+#: UI/GTK2/src/EnginesTree.cpp:328
 msgid "Current User"
 msgstr "Utilisateur"
 
-#: UI/GTK2/src/EnginesTree.cpp:340 UI/GTK2/src/mainWindow.cc:354
-#: UI/GTK2/src/mainWindow.cc:357 UI/GTK2/src/mainWindow.cc:528
-#: UI/GTK2/src/mainWindow.cc:1001 UI/GTK2/src/mainWindow.cc:1057
-#: UI/GTK2/src/mainWindow.cc:1077 UI/GTK2/src/mainWindow.cc:1112
-#: UI/GTK2/src/mainWindow.cc:1703 UI/GTK2/src/PinotSettings.cpp:204
-#: UI/GTK2/src/PinotSettings.cpp:970 UI/GTK2/src/PinotSettings.cpp:1026
+#: UI/GTK2/src/EnginesTree.cpp:339 UI/GTK2/src/mainWindow.cc:237
+#: UI/GTK2/src/mainWindow.cc:339 UI/GTK2/src/mainWindow.cc:342
+#: UI/GTK2/src/mainWindow.cc:510 UI/GTK2/src/mainWindow.cc:961
+#: UI/GTK2/src/mainWindow.cc:1017 UI/GTK2/src/mainWindow.cc:1037
+#: UI/GTK2/src/mainWindow.cc:1072 UI/GTK2/src/mainWindow.cc:1615
+#: UI/GTK2/src/PinotSettings.cpp:204 UI/GTK2/src/PinotSettings.cpp:926
+#: UI/GTK2/src/PinotSettings.cpp:982
 msgid "My Documents"
 msgstr "Mes Documents"
 
-#: UI/GTK2/src/EnginesTree.cpp:344 UI/GTK2/src/mainWindow.cc:360
-#: UI/GTK2/src/mainWindow.cc:363 UI/GTK2/src/mainWindow.cc:532
-#: UI/GTK2/src/MboxHandler.cpp:159 UI/GTK2/src/PinotSettings.cpp:205
-#: UI/GTK2/src/PinotSettings.cpp:971 UI/GTK2/src/PinotSettings.cpp:1027
-#: UI/GTK2/src/prefsDialog_glade.cc:115
+#: UI/GTK2/src/EnginesTree.cpp:343 UI/GTK2/src/mainWindow.cc:345
+#: UI/GTK2/src/mainWindow.cc:348 UI/GTK2/src/MboxHandler.cpp:159
+#: UI/GTK2/src/PinotSettings.cpp:205 UI/GTK2/src/PinotSettings.cpp:927
+#: UI/GTK2/src/PinotSettings.cpp:983 UI/GTK2/src/prefsDialog_glade.cc:112
 msgid "My Email"
 msgstr "Mon Courrier"
 
-#: UI/GTK2/src/importDialog.cc:95
-msgid "Enabled"
-msgstr "Active"
-
-#: UI/GTK2/src/importDialog.cc:96 UI/GTK2/src/prefsDialog.cc:83
-msgid "MIME Type"
-msgstr "Type MIME"
-
-#: UI/GTK2/src/importDialog.cc:122
+#: UI/GTK2/src/importDialog.cc:107
 msgid "File"
 msgstr "Fichier"
 
-#: UI/GTK2/src/importDialog.cc:125
+#: UI/GTK2/src/importDialog.cc:110
 msgid "Directory"
 msgstr "Repertoire"
 
-#: UI/GTK2/src/importDialog.cc:130 UI/GTK2/src/IndexTree.cpp:69
-#: UI/GTK2/src/ResultsTree.cpp:130
+#: UI/GTK2/src/importDialog.cc:115 UI/GTK2/src/IndexTree.cpp:68
+#: UI/GTK2/src/ResultsTree.cpp:129
 msgid "URL"
 msgstr "URL"
 
-#: UI/GTK2/src/importDialog.cc:136 UI/GTK2/src/queryDialog.cc:91
+#: UI/GTK2/src/importDialog.cc:121 UI/GTK2/src/queryDialog.cc:91
 msgid "None"
 msgstr "Aucune"
 
-#: UI/GTK2/src/importDialog.cc:429
+#: UI/GTK2/src/importDialog.cc:362
 msgid "Document To Import"
 msgstr "Document A Importer"
 
-#: UI/GTK2/src/importDialog_glade.cc:66 UI/GTK2/src/indexDialog_glade.cc:68
+#: UI/GTK2/src/importDialog_glade.cc:68 UI/GTK2/src/indexDialog_glade.cc:68
 msgid "Location:"
 msgstr "Chemin:"
 
-#: UI/GTK2/src/importDialog_glade.cc:67
+#: UI/GTK2/src/importDialog_glade.cc:69
 #: UI/GTK2/src/propertiesDialog_glade.cc:65
 msgid "Title:"
 msgstr "Titre:"
 
-#: UI/GTK2/src/importDialog_glade.cc:70 UI/GTK2/src/indexDialog_glade.cc:67
+#: UI/GTK2/src/importDialog_glade.cc:72 UI/GTK2/src/indexDialog_glade.cc:67
 msgid "Type:"
 msgstr "Type:"
 
-#: UI/GTK2/src/importDialog_glade.cc:72 UI/GTK2/src/indexDialog_glade.cc:64
-#: UI/GTK2/src/prefsDialog_glade.cc:70
+#: UI/GTK2/src/importDialog_glade.cc:74 UI/GTK2/src/indexDialog_glade.cc:64
 msgid "..."
 msgstr "..."
 
-#: UI/GTK2/src/importDialog_glade.cc:78
+#: UI/GTK2/src/importDialog_glade.cc:80
 msgid "Depth:"
 msgstr "Profondeur:"
 
-#: UI/GTK2/src/importDialog_glade.cc:79
+#: UI/GTK2/src/importDialog_glade.cc:81
 msgid "Symlinks:"
 msgstr "Liens:"
 
-#: UI/GTK2/src/importDialog_glade.cc:80
+#: UI/GTK2/src/importDialog_glade.cc:82
 msgid "Follow symlinks"
 msgstr "Suivre les liens symboliques"
 
-#: UI/GTK2/src/importDialog_glade.cc:83
+#: UI/GTK2/src/importDialog_glade.cc:85
 msgid "Apply label:"
 msgstr "Appliquer l'etiquette:"
 
-#: UI/GTK2/src/importDialog_glade.cc:91 UI/GTK2/src/mainWindow_glade.cc:204
+#: UI/GTK2/src/importDialog_glade.cc:90 UI/GTK2/src/mainWindow_glade.cc:204
 msgid "Import"
 msgstr "Importer"
 
-#: UI/GTK2/src/importDialog_glade.cc:211
+#: UI/GTK2/src/importDialog_glade.cc:199
 msgid "Import document"
 msgstr "Import de document"
 
@@ -128,251 +119,225 @@
 msgid "External index"
 msgstr "Index externe"
 
-#: UI/GTK2/src/IndexTree.cpp:64 UI/GTK2/src/ResultsTree.cpp:121
+#: UI/GTK2/src/IndexTree.cpp:63 UI/GTK2/src/ResultsTree.cpp:120
 msgid "Title"
 msgstr "Titre"
 
-#: UI/GTK2/src/IndexTree.cpp:74
+#: UI/GTK2/src/IndexTree.cpp:73
 msgid "Timestamp"
 msgstr "Date"
 
-#: UI/GTK2/src/IndexPage.cpp:50
+#: UI/GTK2/src/IndexPage.cpp:49
 msgid "Show Previous"
 msgstr "Precedents"
 
-#: UI/GTK2/src/IndexPage.cpp:56
+#: UI/GTK2/src/IndexPage.cpp:55
 msgid "Show Next"
 msgstr "Suivants"
 
-#: UI/GTK2/src/IndexPage.cpp:158 UI/GTK2/src/IndexPage.cpp:204
+#: UI/GTK2/src/IndexPage.cpp:157 UI/GTK2/src/IndexPage.cpp:203
 msgid "All labels"
 msgstr "Toutes les etiquettes"
 
-#: UI/GTK2/src/mainWindow.cc:167
+#: UI/GTK2/src/mainWindow.cc:169
 msgid "Query Name"
 msgstr "Nom de la Recherche"
 
-#: UI/GTK2/src/mainWindow.cc:172
+#: UI/GTK2/src/mainWindow.cc:174
 msgid "Last Run"
 msgstr "Derniere Utilisation"
 
-#: UI/GTK2/src/mainWindow.cc:173
+#: UI/GTK2/src/mainWindow.cc:175
 msgid "Summary"
 msgstr "Sommaire"
 
-#: UI/GTK2/src/mainWindow.cc:225
+#: UI/GTK2/src/mainWindow.cc:215
 msgid "Add index"
 msgstr "Ajouter un index"
 
-#: UI/GTK2/src/mainWindow.cc:226
+#: UI/GTK2/src/mainWindow.cc:216
 msgid "Remove index"
 msgstr "Enlever un index"
 
-#: UI/GTK2/src/mainWindow.cc:242
+#: UI/GTK2/src/mainWindow.cc:232
 msgid "Ready"
 msgstr "Pret"
 
-#: UI/GTK2/src/mainWindow.cc:259 UI/GTK2/src/mainWindow.cc:958
-#: UI/GTK2/src/mainWindow.cc:1295 UI/GTK2/src/mainWindow.cc:2913
-#: UI/GTK2/src/mainWindow_glade.cc:210
-msgid "View"
-msgstr "Voir"
-
-#: UI/GTK2/src/mainWindow.cc:291
+#: UI/GTK2/src/mainWindow.cc:276
 msgid "N/A"
 msgstr "Inconnue"
 
-#: UI/GTK2/src/mainWindow.cc:301
+#: UI/GTK2/src/mainWindow.cc:286
 msgid "<undefined>"
 msgstr "<inconnu>"
 
-#: UI/GTK2/src/mainWindow.cc:490
+#: UI/GTK2/src/mainWindow.cc:472
 msgid "Result location is"
 msgstr "Le chemin du resultat est"
 
-#: UI/GTK2/src/mainWindow.cc:543
+#: UI/GTK2/src/mainWindow.cc:520
 msgid "Document location is"
 msgstr "Le chemin du document is"
 
-#: UI/GTK2/src/mainWindow.cc:800
+#: UI/GTK2/src/mainWindow.cc:759
 msgid "Showing"
 msgstr "Listant"
 
-#: UI/GTK2/src/mainWindow.cc:805
+#: UI/GTK2/src/mainWindow.cc:764
 msgid "off"
 msgstr "documents,"
 
-#: UI/GTK2/src/mainWindow.cc:810
+#: UI/GTK2/src/mainWindow.cc:769
 msgid "documents, starting at"
 msgstr "au total, a partir de"
 
-#: UI/GTK2/src/mainWindow.cc:844
+#: UI/GTK2/src/mainWindow.cc:805
 msgid "Query"
 msgstr "La recherche"
 
-#: UI/GTK2/src/mainWindow.cc:848 UI/GTK2/src/mainWindow.cc:2739
+#: UI/GTK2/src/mainWindow.cc:809 UI/GTK2/src/mainWindow.cc:2643
 msgid "on"
 msgstr "sur"
 
-#: UI/GTK2/src/mainWindow.cc:852
+#: UI/GTK2/src/mainWindow.cc:813
 msgid "ended"
 msgstr "est terminee"
 
-#: UI/GTK2/src/mainWindow.cc:933
+#: UI/GTK2/src/mainWindow.cc:890
 msgid "Updated label(s)"
 msgstr "Mis a jour l(es) etiquette(s)"
 
-#: UI/GTK2/src/mainWindow.cc:1011
+#: UI/GTK2/src/mainWindow.cc:971
 msgid "Updated document"
 msgstr "Mis a jour le document"
 
-#: UI/GTK2/src/mainWindow.cc:1026
+#: UI/GTK2/src/mainWindow.cc:986
 msgid "Indexed"
 msgstr "Indexe"
 
-#: UI/GTK2/src/mainWindow.cc:1078
+#: UI/GTK2/src/mainWindow.cc:1038
 msgid "Unindexed document(s)"
 msgstr "Desindexe le(s) document(s)"
 
-#: UI/GTK2/src/mainWindow.cc:1123
+#: UI/GTK2/src/mainWindow.cc:1083
 msgid "Updated document properties"
 msgstr "Mis a jour les proprietes du document"
 
-#: UI/GTK2/src/mainWindow.cc:1170
+#: UI/GTK2/src/mainWindow.cc:1130
 msgid "Couldn't rename index, name"
 msgstr "N'a pas pu renommer l'index, le nom"
 
-#: UI/GTK2/src/mainWindow.cc:1174 UI/GTK2/src/mainWindow.cc:2050
-#: UI/GTK2/src/mainWindow.cc:2573
+#: UI/GTK2/src/mainWindow.cc:1134 UI/GTK2/src/mainWindow.cc:1949
+#: UI/GTK2/src/mainWindow.cc:2477
 msgid "is already in use"
 msgstr "est deja utilise"
 
-#: UI/GTK2/src/mainWindow.cc:1187
+#: UI/GTK2/src/mainWindow.cc:1147
 msgid "Couldn't rename index"
 msgstr "N'a pas pu renommer l'index"
 
-#: UI/GTK2/src/mainWindow.cc:1200
+#: UI/GTK2/src/mainWindow.cc:1160
 msgid "Edited index"
 msgstr "Edite l'index"
 
-#: UI/GTK2/src/mainWindow.cc:1642 UI/GTK2/src/mainWindow.cc:1746
+#: UI/GTK2/src/mainWindow.cc:1570 UI/GTK2/src/mainWindow.cc:1659
 msgid "Please set a location for the index first"
 msgstr "Donnez un chemin a l'index"
 
-#: UI/GTK2/src/mainWindow.cc:1669
-msgid "Result location is unknown"
-msgstr "Le chemin du resultat est inconnu"
-
-#: UI/GTK2/src/mainWindow.cc:1693
+#: UI/GTK2/src/mainWindow.cc:1606
 msgid "Import Document(s)"
 msgstr "Import de Document(s)"
 
-#: UI/GTK2/src/mainWindow.cc:1825 UI/GTK2/src/WorkerThreads.cpp:424
-#: UI/GTK2/src/WorkerThreads.cpp:1138
+#: UI/GTK2/src/mainWindow.cc:1732 UI/GTK2/src/WorkerThreads.cpp:425
+#: UI/GTK2/src/WorkerThreads.cpp:1142
 msgid "Index"
 msgstr "L'index"
 
-#: UI/GTK2/src/mainWindow.cc:1829 UI/GTK2/src/WorkerThreads.cpp:428
-#: UI/GTK2/src/WorkerThreads.cpp:1142
+#: UI/GTK2/src/mainWindow.cc:1736 UI/GTK2/src/WorkerThreads.cpp:429
+#: UI/GTK2/src/WorkerThreads.cpp:1146
 msgid "doesn't exist"
 msgstr "n'existe pas"
 
-#: UI/GTK2/src/mainWindow.cc:1930
+#: UI/GTK2/src/mainWindow.cc:1837
 msgid "Remove this document from the index ?"
 msgstr "Enlever ce document de l'index ?"
 
-#: UI/GTK2/src/mainWindow.cc:1949
+#: UI/GTK2/src/mainWindow.cc:1856
 msgid "Remove these documents from the index ?"
 msgstr "Enlever ces documents de l'index ?"
 
-#: UI/GTK2/src/mainWindow.cc:2001
+#: UI/GTK2/src/mainWindow.cc:1900
 msgid "A metasearch tool for the Free Desktop"
 msgstr "Un outil de recherche pour le Bureau Libre"
 
-#: UI/GTK2/src/mainWindow.cc:2002
+#: UI/GTK2/src/mainWindow.cc:1901
 msgid "(C) 2005-2006 Fabrice Colin"
 msgstr "(C) 2005-2006 Fabrice Colin"
 
-#: UI/GTK2/src/mainWindow.cc:2046
+#: UI/GTK2/src/mainWindow.cc:1945
 msgid "Index name"
 msgstr "Nom de l'index"
 
-#: UI/GTK2/src/mainWindow.cc:2061
+#: UI/GTK2/src/mainWindow.cc:1960
 msgid "Couldn't add index"
 msgstr "N'a pas pu ajouter l'index"
 
-#: UI/GTK2/src/mainWindow.cc:2075
+#: UI/GTK2/src/mainWindow.cc:1974
 msgid "Added new index"
 msgstr "Ajoute un nouvel index"
 
-#: UI/GTK2/src/mainWindow.cc:2110
+#: UI/GTK2/src/mainWindow.cc:2009
 msgid "Couldn't remove index"
 msgstr "N'a pas pu enlever l'index"
 
-#: UI/GTK2/src/mainWindow.cc:2205
+#: UI/GTK2/src/mainWindow.cc:2104
 msgid "Live query"
 msgstr "Recherche"
 
-#: UI/GTK2/src/mainWindow.cc:2362
+#: UI/GTK2/src/mainWindow.cc:2261
 msgid "At least one task hasn't completed yet. Quit now ?"
 msgstr "Au moins une tache n'est pas terminee. Quitter maintenant ?"
 
-#: UI/GTK2/src/mainWindow.cc:2569
+#: UI/GTK2/src/mainWindow.cc:2473
 msgid "Query name"
 msgstr "Nom de la recherche"
 
-#: UI/GTK2/src/mainWindow.cc:2596
+#: UI/GTK2/src/mainWindow.cc:2500
 msgid "Couldn't update query"
 msgstr "N'a pas pu mettre a jour la recherche"
 
-#: UI/GTK2/src/mainWindow.cc:2604
+#: UI/GTK2/src/mainWindow.cc:2508
 msgid "Edited query"
 msgstr "Edite la recherche"
 
-#: UI/GTK2/src/mainWindow.cc:2611
+#: UI/GTK2/src/mainWindow.cc:2515
 msgid "Couldn't add query"
 msgstr "N'a pas pu ajouter la recherche"
 
-#: UI/GTK2/src/mainWindow.cc:2619
+#: UI/GTK2/src/mainWindow.cc:2523
 msgid "Added new query"
 msgstr "Ajoute une nouvelle recherche"
 
-#: UI/GTK2/src/mainWindow.cc:2633
+#: UI/GTK2/src/mainWindow.cc:2537
 msgid "Query is not set"
 msgstr "Recherche indefinie"
 
-#: UI/GTK2/src/mainWindow.cc:2644
+#: UI/GTK2/src/mainWindow.cc:2548
 msgid "No search engine selected"
 msgstr "Pas de moteur selectionne"
 
-#: UI/GTK2/src/mainWindow.cc:2726
+#: UI/GTK2/src/mainWindow.cc:2630
 msgid "Please set the Google API key first"
 msgstr "Configurez la clef de l'API Google "
 
-#: UI/GTK2/src/mainWindow.cc:2735
+#: UI/GTK2/src/mainWindow.cc:2639
 msgid "Running query"
 msgstr "Recherche en cours"
 
-#: UI/GTK2/src/mainWindow.cc:2842
+#: UI/GTK2/src/mainWindow.cc:2746
 msgid "is already indexed or is being indexed"
 msgstr "est deja indexe ou est en cours d'indexation"
 
-#: UI/GTK2/src/mainWindow.cc:2871
-msgid "No URL to browse"
-msgstr "Pas d'URL a brouter"
-
-#: UI/GTK2/src/mainWindow.cc:2882
-msgid "No browser configured to view results"
-msgstr "Pas de brouter configure"
-
-#: UI/GTK2/src/mainWindow.cc:2894
-msgid "Couldn't browse URL:"
-msgstr "N'a pas pu brouter l'URL"
-
-#: UI/GTK2/src/mainWindow.cc:2953
-msgid "Viewing"
-msgstr "Voir"
-
 #: UI/GTK2/src/mainWindow_glade.cc:118
 msgid "Query:"
 msgstr "Recherche:"
@@ -421,6 +386,10 @@
 msgid "List Contents Of"
 msgstr "Lister le Contenu de"
 
+#: UI/GTK2/src/mainWindow_glade.cc:210
+msgid "View"
+msgstr "Voir"
+
 #: UI/GTK2/src/mainWindow_glade.cc:213
 msgid "Update"
 msgstr "Mettre a Jour"
@@ -526,51 +495,35 @@
 msgid "Personal"
 msgstr "Personnel"
 
-#: UI/GTK2/src/PinotSettings.cpp:799
+#: UI/GTK2/src/PinotSettings.cpp:762
 msgid "Unclassified"
 msgstr "Sans classification"
 
-#: UI/GTK2/src/prefsDialog.cc:74
+#: UI/GTK2/src/prefsDialog.cc:60
 msgid "Name"
 msgstr "Nom"
 
-#: UI/GTK2/src/prefsDialog.cc:82
+#: UI/GTK2/src/prefsDialog.cc:68
 msgid "Location"
 msgstr "Chemin"
 
-#: UI/GTK2/src/prefsDialog.cc:119
-msgid "In internal viewer"
-msgstr "Dans le brouteur interne"
+#: UI/GTK2/src/prefsDialog.cc:69
+msgid "MIME Type"
+msgstr "Type MIME"
 
-#: UI/GTK2/src/prefsDialog.cc:122
-msgid "In browser"
-msgstr "Dans le brouteur"
-
-#: UI/GTK2/src/prefsDialog.cc:324
-msgid "Browser location"
-msgstr "Chemin du brouteur"
-
-#: UI/GTK2/src/prefsDialog.cc:335
+#: UI/GTK2/src/prefsDialog.cc:266
 msgid "New Label"
 msgstr "Nouvelle Etiquette"
 
-#: UI/GTK2/src/prefsDialog.cc:387 UI/GTK2/src/prefsDialog.cc:424
+#: UI/GTK2/src/prefsDialog.cc:318 UI/GTK2/src/prefsDialog.cc:355
 msgid "Mbox File Location"
 msgstr "Chemin du Fichier mbox"
 
-#: UI/GTK2/src/prefsDialog_glade.cc:62
+#: UI/GTK2/src/prefsDialog_glade.cc:65
 msgid "HTTP crawling:"
 msgstr "Agent HTTP:"
 
-#: UI/GTK2/src/prefsDialog_glade.cc:63
-msgid "View documents:"
-msgstr "Voir les documents"
-
-#: UI/GTK2/src/prefsDialog_glade.cc:64
-msgid "Browser:"
-msgstr "Brouteur:"
-
-#: UI/GTK2/src/prefsDialog_glade.cc:65
+#: UI/GTK2/src/prefsDialog_glade.cc:66
 msgid "Google API key:"
 msgstr "Clef de l'API Google"
 
@@ -578,43 +531,43 @@
 msgid "Ignore robots.txt and Robots META tag"
 msgstr "Ignorer robots.txt et le META tag Robots"
 
-#: UI/GTK2/src/prefsDialog_glade.cc:73
+#: UI/GTK2/src/prefsDialog_glade.cc:70
 msgid "New results:"
 msgstr "Nouveaux resultats:"
 
-#: UI/GTK2/src/prefsDialog_glade.cc:74
+#: UI/GTK2/src/prefsDialog_glade.cc:71
 msgid "Queries:"
 msgstr "Recherches:"
 
-#: UI/GTK2/src/prefsDialog_glade.cc:75
+#: UI/GTK2/src/prefsDialog_glade.cc:72
 msgid "Enable search terms suggestion"
 msgstr "Suggerer des termes"
 
-#: UI/GTK2/src/prefsDialog_glade.cc:79
+#: UI/GTK2/src/prefsDialog_glade.cc:76
 msgid "General"
 msgstr "General"
 
-#: UI/GTK2/src/prefsDialog_glade.cc:80
+#: UI/GTK2/src/prefsDialog_glade.cc:77
 msgid "Labels are used to classify indexed documents:"
 msgstr "Les etiquettes servent a classer les documents:"
 
-#: UI/GTK2/src/prefsDialog_glade.cc:85 UI/GTK2/src/prefsDialog_glade.cc:105
+#: UI/GTK2/src/prefsDialog_glade.cc:82 UI/GTK2/src/prefsDialog_glade.cc:102
 msgid "Add"
 msgstr "Ajouter"
 
-#: UI/GTK2/src/prefsDialog_glade.cc:91
+#: UI/GTK2/src/prefsDialog_glade.cc:88
 msgid "Remove"
 msgstr "Enlever"
 
-#: UI/GTK2/src/prefsDialog_glade.cc:99
+#: UI/GTK2/src/prefsDialog_glade.cc:96
 msgid "Labels"
 msgstr "Etiquettes"
 
-#: UI/GTK2/src/prefsDialog_glade.cc:100
+#: UI/GTK2/src/prefsDialog_glade.cc:97
 msgid "Mail boxes of type mbox can be monitored and indexed:"
 msgstr "Les boites de type mbox peuvent etre indexees"
 
-#: UI/GTK2/src/prefsDialog_glade.cc:335
+#: UI/GTK2/src/prefsDialog_glade.cc:305
 msgid "Preferences"
 msgstr "Preferences"
 
@@ -694,104 +647,104 @@
 msgid "Query parameters"
 msgstr "Parametres de la recherche"
 
-#: UI/GTK2/src/WorkerThreads.cpp:403
+#: UI/GTK2/src/WorkerThreads.cpp:404
 msgid "Stopped browsing"
 msgstr "Arrete de parcourir l'index"
 
-#: UI/GTK2/src/WorkerThreads.cpp:436 UI/GTK2/src/WorkerThreads.cpp:634
-#: UI/GTK2/src/WorkerThreads.cpp:643 UI/GTK2/src/WorkerThreads.cpp:831
-#: UI/GTK2/src/WorkerThreads.cpp:1031 UI/GTK2/src/WorkerThreads.cpp:1150
+#: UI/GTK2/src/WorkerThreads.cpp:437 UI/GTK2/src/WorkerThreads.cpp:638
+#: UI/GTK2/src/WorkerThreads.cpp:647 UI/GTK2/src/WorkerThreads.cpp:835
+#: UI/GTK2/src/WorkerThreads.cpp:1035 UI/GTK2/src/WorkerThreads.cpp:1154
 msgid "Index error on"
 msgstr "Erreur sur l'index"
 
-#: UI/GTK2/src/WorkerThreads.cpp:541
+#: UI/GTK2/src/WorkerThreads.cpp:542
 msgid "Stopped querying"
 msgstr "Arrete la recherche"
 
-#: UI/GTK2/src/WorkerThreads.cpp:553
+#: UI/GTK2/src/WorkerThreads.cpp:554
 msgid "Couldn't create search engine"
 msgstr "N'a pas pu creer le moteur"
 
-#: UI/GTK2/src/WorkerThreads.cpp:564
+#: UI/GTK2/src/WorkerThreads.cpp:565
 msgid "Couldn't run query on search engine"
 msgstr "N'a pas pu lancer la recherche sur le moteur"
 
-#: UI/GTK2/src/WorkerThreads.cpp:580
+#: UI/GTK2/src/WorkerThreads.cpp:581
 msgid "No title"
 msgstr "Pas de titre"
 
-#: UI/GTK2/src/WorkerThreads.cpp:625
+#: UI/GTK2/src/WorkerThreads.cpp:629
 msgid "Stopped querying index labels"
 msgstr "Arrete la recherche d'etiquettes"
 
-#: UI/GTK2/src/WorkerThreads.cpp:702
+#: UI/GTK2/src/WorkerThreads.cpp:706
 msgid "Stopped retrieval of"
 msgstr "Arrete le telechargement de"
 
-#: UI/GTK2/src/WorkerThreads.cpp:736
+#: UI/GTK2/src/WorkerThreads.cpp:740
 msgid "Couldn't obtain downloader for protocol"
 msgstr "N'a pas pu obtenir un brouteur pour"
 
-#: UI/GTK2/src/WorkerThreads.cpp:748
+#: UI/GTK2/src/WorkerThreads.cpp:752
 msgid "Couldn't retrieve"
 msgstr "N'a pas pu telecharger"
 
-#: UI/GTK2/src/WorkerThreads.cpp:816
+#: UI/GTK2/src/WorkerThreads.cpp:820
 msgid "Stopped indexing"
 msgstr "Arrete l'indexation"
 
-#: UI/GTK2/src/WorkerThreads.cpp:861
+#: UI/GTK2/src/WorkerThreads.cpp:865
 msgid "Cannot index document type"
 msgstr "Impossible d'indexer ce type de documents"
 
-#: UI/GTK2/src/WorkerThreads.cpp:865
+#: UI/GTK2/src/WorkerThreads.cpp:869
 msgid "at"
 msgstr "a"
 
-#: UI/GTK2/src/WorkerThreads.cpp:889
+#: UI/GTK2/src/WorkerThreads.cpp:893
 msgid "Couldn't tokenize"
 msgstr "N'a pas pu extraire les termes de"
 
-#: UI/GTK2/src/WorkerThreads.cpp:909
+#: UI/GTK2/src/WorkerThreads.cpp:913
 msgid "Robots META tag forbids indexing"
 msgstr "Le META tag Robots interdit d'indexer"
 
-#: UI/GTK2/src/WorkerThreads.cpp:964
+#: UI/GTK2/src/WorkerThreads.cpp:968
 msgid "Couldn't index"
 msgstr "N'a pas pu indexer"
 
-#: UI/GTK2/src/WorkerThreads.cpp:1019
+#: UI/GTK2/src/WorkerThreads.cpp:1023
 msgid "Stopped unindexing document(s)"
 msgstr "Arrete d'indexer les document(s)"
 
-#: UI/GTK2/src/WorkerThreads.cpp:1038
+#: UI/GTK2/src/WorkerThreads.cpp:1042
 msgid "Couldn't unindex document(s)"
 msgstr "N'a pas pu desindexer le(s) document(s)"
 
-#: UI/GTK2/src/WorkerThreads.cpp:1123
+#: UI/GTK2/src/WorkerThreads.cpp:1127
 msgid "Stopped document update for"
 msgstr "Arrete la mise a jour pour"
 
-#: UI/GTK2/src/WorkerThreads.cpp:1158
+#: UI/GTK2/src/WorkerThreads.cpp:1162
 msgid "Couldn't update document"
 msgstr "N'a pas pu mettre a jour le document"
 
-#: UI/GTK2/src/WorkerThreads.cpp:1208
+#: UI/GTK2/src/WorkerThreads.cpp:1212
 msgid "Stopped monitoring"
 msgstr "Arrete la surveillance"
 
-#: UI/GTK2/src/WorkerThreads.cpp:1225
+#: UI/GTK2/src/WorkerThreads.cpp:1229
 msgid "No monitoring handler"
 msgstr "Pas de moniteur"
 
-#: UI/GTK2/src/WorkerThreads.cpp:1277
+#: UI/GTK2/src/WorkerThreads.cpp:1281
 msgid "Couldn't initialize file monitor"
 msgstr "N'a pas pu initializer le moniteur de fichiers"
 
-#: UI/GTK2/src/WorkerThreads.cpp:1391
+#: UI/GTK2/src/WorkerThreads.cpp:1395
 msgid "Stopped scanning"
 msgstr "Arrete de scanner"
 
-#: UI/GTK2/src/WorkerThreads.cpp:1549
+#: UI/GTK2/src/WorkerThreads.cpp:1553
 msgid "Couldn't open directory"
 msgstr "N'a pas pu ouvrir le repertoire"



From fabricecolin at berlios.de  Fri Jun  9 17:07:04 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Fri, 9 Jun 2006 17:07:04 +0200
Subject: [Pinot-svn] r311 - trunk/Search
Message-ID: <200606091507.k59F74rj023326@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-09 17:07:03 +0200 (Fri, 09 Jun 2006)
New Revision: 311

Modified:
   trunk/Search/AbstractGenerator.cpp
Log:
Less chatty in DEBUG mode.


Modified: trunk/Search/AbstractGenerator.cpp
===================================================================
--- trunk/Search/AbstractGenerator.cpp	2006-06-09 15:05:54 UTC (rev 310)
+++ trunk/Search/AbstractGenerator.cpp	2006-06-09 15:07:03 UTC (rev 311)
@@ -175,9 +175,6 @@
 		// Skip prefixed terms
 		if (isupper((int)termName[0]) != 0)
 		{
-#ifdef DEBUG
-			cout << "AbstractGenerator::generateAbstract: skipping " << termName << endl;
-#endif
 			continue;
 		}
 



From fabricecolin at berlios.de  Fri Jun  9 17:05:56 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Fri, 9 Jun 2006 17:05:56 +0200
Subject: [Pinot-svn] r310 - trunk/UI/GTK2/src
Message-ID: <200606091505.k59F5uBk022881@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-09 17:05:54 +0200 (Fri, 09 Jun 2006)
New Revision: 310

Modified:
   trunk/UI/GTK2/src/mainWindow.cc
Log:
View Cache now uses the Google cache at http://www.google.com/search?q=cache:
and is enabled if at least one result on HTTP is selected. Non-HTTP results
will be open as with View.


Modified: trunk/UI/GTK2/src/mainWindow.cc
===================================================================
--- trunk/UI/GTK2/src/mainWindow.cc	2006-06-09 13:47:44 UTC (rev 309)
+++ trunk/UI/GTK2/src/mainWindow.cc	2006-06-09 15:05:54 UTC (rev 310)
@@ -201,13 +201,6 @@
 	findQueryButton->set_sensitive(false);
 	show_global_menuitems(false);
 	show_selectionbased_menuitems(false);
-	// Hide the View Cache menu item ?
-	if ((SearchEngineFactory::isSupported("googleapi") == false) ||
-		(m_settings.m_googleAPIKey.empty() == true))
-	{
-		viewcache1->hide();
-	}
-	//viewstop1->set_sensitive(false);
 	// ...and buttons
 	removeIndexButton->set_sensitive(false);
 
@@ -424,6 +417,7 @@
 //
 void mainWindow::on_resultsTreeviewSelection_changed(ustring queryName)
 {
+	vector<DocumentInfo> resultsList;
 	string url;
 	bool hasSelection = false;
 
@@ -436,11 +430,9 @@
 			ResultsTree *pResultsTree = pResultsPage->getTree();
 			if (pResultsTree != NULL)
 			{
-				hasSelection = pResultsTree->checkSelection();
-				if (hasSelection == true)
+				if (pResultsTree->checkSelection() == true)
 				{
-					Result selectedResult = pResultsTree->getFirstSelection();
-					url = selectedResult.getLocation();
+					hasSelection = pResultsTree->getSelection(resultsList);
 				}
 			}
 		}
@@ -448,31 +440,46 @@
 
 	if (hasSelection == true)
 	{
-		Url urlObj(url);
-		bool isViewable = true, isIndexable = true, isCached = false;
+		bool firstResult = true, isViewable = true, isIndexable = true, isCached = false;
 
-		string protocol = urlObj.getProtocol();
-		// FIXME: there should be a way to know which protocols can be viewed/indexed
-		if (protocol == "xapian")
+		for (vector<DocumentInfo>::iterator resultIter = resultsList.begin();
+			resultIter != resultsList.end(); ++resultIter)
 		{
-			isViewable = isIndexable = false;
+			string url(resultIter->getLocation());
+			Url urlObj(url);
+			string protocol(urlObj.getProtocol());
+
+			if (firstResult == true)
+			{
+				// Show the URL of the first result in the status bar
+				ustring statusText = _("Result location is");
+				statusText += " ";
+				statusText += url;
+				set_status(statusText, true);
+				firstResult = false;
+			}
+
+			// FIXME: there should be a way to know which protocols can be viewed/indexed
+			if (protocol == "xapian")
+			{
+#ifdef DEBUG
+				cout << "mainWindow::on_resultsTreeviewSelection_changed: internal URL" << endl;
+#endif
+				isViewable = isIndexable = isCached = false;
+				break;
+			}
+			else if ((protocol == "http") ||
+				(protocol == "https"))
+			{
+				// One document on http is good enough
+				isCached = true;
+			}
 		}
 
 		// Enable these menu items
 		viewresults1->set_sensitive(isViewable);
-		if ((protocol == "http") ||
-			(protocol == "https"))
-		{
-			isCached = true;
-		}
 		viewcache1->set_sensitive(isCached);
 		indexresults1->set_sensitive(isIndexable);
-
-		// Show the URL in the status bar
-		ustring statusText = _("Result location is");
-		statusText += " ";
-		statusText += url;
-		set_status(statusText, true);
 	}
 	else
 	{
@@ -845,6 +852,8 @@
 			{
 				pageNum = m_pNotebook->append_page(*pResultsPage, *pTab);
 				m_pNotebook->pages().back().set_tab_label_packing(false, true, Gtk::PACK_START);
+				// Switch to this new page
+				m_pNotebook->set_current_page(pageNum);
 
 				m_state.unlock_lists();
 			}
@@ -1233,17 +1242,6 @@
 		m_state.unlock_lists();
 	}
 
-	// Hide the View Cache menu item ?
-	if ((SearchEngineFactory::isSupported("googleapi") == false) ||
-		(m_settings.m_googleAPIKey.empty() == true))
-	{
-		viewcache1->hide();
-	}
-	else
-	{
-		viewcache1->show();
-	}
-
 	// Any labels to delete or rename ?
 	const set<string> &labelsToDelete = prefsBox.getLabelsToDelete();
 	const std::map<string, string> &labelsToRename = prefsBox.getLabelsToRename();
@@ -1521,7 +1519,7 @@
 				{
 					view_documents(resultsList);
 
-					// We can update the row right now
+					// We can update the rows right now
 					pResultsTree->setSelectionViewedState(true);
 				}
 			}
@@ -1534,8 +1532,8 @@
 //
 void mainWindow::on_viewcache_activate()
 {
-// FIXME: find a way to view cached pages in external applications
-#if 0
+	string googleCache("http://www.google.com/search?q=cache:");
+
 	NotebookPageBox *pNotebookPage = get_current_page();
 	if (pNotebookPage != NULL)
 	{
@@ -1545,16 +1543,47 @@
 			ResultsTree *pResultsTree = pResultsPage->getTree();
 			if (pResultsTree != NULL)
 			{
-				Result selectedResult = pResultsTree->getFirstSelection();
+				vector<DocumentInfo> resultsList;
 
-				start_thread(new DownloadingThread(selectedResult, true));
+				if (pResultsTree->getSelection(resultsList) == true)
+				{
+					for (vector<DocumentInfo>::iterator resultIter = resultsList.begin();
+						resultIter != resultsList.end(); ++resultIter)
+					{
+						string url(resultIter->getLocation());
+						Url urlObj(url);
+						string protocol(urlObj.getProtocol());
 
-				// Update the row now, even though the cached page may not be retrieved
-				pResultsTree->setFirstSelectionViewedState(true);
+#ifdef DEBUG
+						cout << "mainWindow::on_viewcache_activate: " << url << endl;
+#endif
+						if ((protocol == "http") ||
+							(protocol == "https"))
+						{
+							// Rewrite the URL
+							string::size_type pos = url.find("://");
+							if ((pos != string::npos) &&
+								(pos + 3 < url.length()))
+							{
+								resultIter->setLocation(googleCache + url.substr(pos + 3));
+#ifdef DEBUG
+								cout << "mainWindow::on_viewcache_activate: rewritten "
+									<< url << " to " << resultIter->getLocation() << endl;
+#endif
+							}
+						}
+
+						// Other document will be open in place
+					}
+				}
+
+				view_documents(resultsList);
+
+				// Update the rows right now
+				pResultsTree->setSelectionViewedState(true);
 			}
 		}
 	}
-#endif
 }
 
 //



From fabricecolin at berlios.de  Sat Jun 10 05:03:05 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Sat, 10 Jun 2006 05:03:05 +0200
Subject: [Pinot-svn] r312 - trunk
Message-ID: <200606100303.k5A335qU015160@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-10 05:03:03 +0200 (Sat, 10 Jun 2006)
New Revision: 312

Modified:
   trunk/Makefile.am
Log:
Distribute po/pinot.pot.


Modified: trunk/Makefile.am
===================================================================
--- trunk/Makefile.am	2006-06-09 15:07:03 UTC (rev 311)
+++ trunk/Makefile.am	2006-06-10 03:03:03 UTC (rev 312)
@@ -7,7 +7,7 @@
 EXTRA_DIST = ChangeLog NEWS README TODO mkinstalldirs pinot.desktop \
 	pinot.spec textcat_conf.txt Search/Plugins/*src Search/Plugins/*.xml \
 	Collect/pinot-collect.1 Search/pinot-search.1 UI/GTK2/src/pinot.1 \
-	UI/GTK2/xapian-powered.png UI/GTK2/pinot.png \
+	po/pinot.pot UI/GTK2/xapian-powered.png UI/GTK2/pinot.png \
 	UI/GTK2/metase-gtk2.glade UI/GTK2/metase-gtk2.gladep
 
 man_MANS = Collect/pinot-collect.1 Search/pinot-search.1 UI/GTK2/src/pinot.1



From fabricecolin at berlios.de  Sat Jun 10 05:04:30 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Sat, 10 Jun 2006 05:04:30 +0200
Subject: [Pinot-svn] r313 - in trunk: Tokenize Utils
Message-ID: <200606100304.k5A34Upw016191@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-10 05:04:26 +0200 (Sat, 10 Jun 2006)
New Revision: 313

Modified:
   trunk/Tokenize/Makefile.am
   trunk/Tokenize/Tokenizer.cpp
   trunk/Utils/CommandLine.cpp
   trunk/Utils/CommandLine.h
Log:
New CommandLine::runSync(), called by Tokenizer::runHelperProgram().


Modified: trunk/Tokenize/Makefile.am
===================================================================
--- trunk/Tokenize/Makefile.am	2006-06-10 03:03:03 UTC (rev 312)
+++ trunk/Tokenize/Makefile.am	2006-06-10 03:04:26 UTC (rev 313)
@@ -1,6 +1,7 @@
 # Process this file with automake to produce Makefile.in
 
-UTILS_OBJS = ../Utils/Document.o \
+UTILS_OBJS = ../Utils/CommandLine.o \
+	../Utils/Document.o \
 	../Utils/StringManip.o \
 	../Utils/DocumentInfo.o \
 	../Utils/TimeConverter.o \

Modified: trunk/Tokenize/Tokenizer.cpp
===================================================================
--- trunk/Tokenize/Tokenizer.cpp	2006-06-10 03:03:03 UTC (rev 312)
+++ trunk/Tokenize/Tokenizer.cpp	2006-06-10 03:04:26 UTC (rev 313)
@@ -17,11 +17,11 @@
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <ctype.h>
-#include <stdlib.h>
 #include <unistd.h>
 #include <iostream>
 #include <fstream>
 
+#include "CommandLine.h"
 #include "Tokenizer.h"
 
 //#define DEBUG_TOKENIZER
@@ -46,7 +46,6 @@
 {
 	Document *pOutputDocument = NULL;
 	char inTemplate[15] = "/tmp/tokXXXXXX";
-	char outTemplate[15] = "/tmp/tokXXXXXX";
 
 	if ((pDocument == NULL) ||
 		(programName.empty() == true))
@@ -55,9 +54,7 @@
 	}
 
 	int inFd = mkstemp(inTemplate);
-	int outFd = mkstemp(outTemplate);
-	if ((inFd != -1) &&
-		(outFd != -1))
+	if (inFd != -1)
 	{
 		unsigned int dataLength = 0;
 		const char *pData = pDocument->getData(dataLength);
@@ -66,6 +63,7 @@
 		if (write(inFd, (const void*)pData, dataLength) != -1)
 		{
 			string cmdLine(programName);
+			string output;
 
 			cmdLine += " ";
 			cmdLine += inTemplate;
@@ -75,55 +73,30 @@
 				cmdLine += arguments;
 				cmdLine += " ";
 			}
-			cmdLine += " >";
-			cmdLine += outTemplate;
-			cmdLine += " 2>/dev/null";
 
 			// Run the helper program
-			if (system(cmdLine.c_str()) != -1)
+			if ((CommandLine::runSync(cmdLine, output) == true) &&
+				(output.empty() == false))
 			{
-				struct stat fileStat;
-
-				// Read the output
-				if ((stat(outTemplate, &fileStat) != -1) &&
-					(S_ISREG(fileStat.st_mode)))
-				{
-					unsigned int total, bytes;
-					char *content = new char[fileStat.st_size + 1];
-
-					total = bytes = read(outFd, (void*)content, fileStat.st_size);
-					while ((bytes > 0) &&
-						(total < fileStat.st_size))
-					{
-						bytes = read(outFd, (void*)content, fileStat.st_size - total);
-						total += bytes;
-					}
-
-					// Pass the result to the parent class
-					pOutputDocument = new Document(pDocument->getTitle(),
-						pDocument->getLocation(), pDocument->getType(),
-						pDocument->getLanguage());
-					pOutputDocument->setData(content, bytes);
+				// Pass the result to the parent class
+				pOutputDocument = new Document(pDocument->getTitle(),
+					pDocument->getLocation(), pDocument->getType(),
+					pDocument->getLanguage());
+				pOutputDocument->setData(output.c_str(), output.length());
 #ifdef DEBUG_TOKENIZER
-					cout << "Tokenizer::runHelperProgram: set " << bytes
-						<< " bytes of data" << endl;
+				cout << "Tokenizer::runHelperProgram: set " << output.length()
+					<< " bytes of data" << endl;
 #endif
-
-					delete[] content;
-				}
-				else cerr << "Tokenizer::runHelperProgram: " << cmdLine << " failed" << endl;
 			}
 		}
 	}
 
-	close(outFd);
 	close(inFd);
 
-	if ((unlink(outTemplate) != 0) ||
-		(unlink(inTemplate) != 0))
+	if (unlink(inTemplate) != 0)
 	{
 #ifdef DEBUG_TOKENIZER
-		cout << "Tokenizer::runHelperProgram: couldn't delete temporary files" << endl;
+		cout << "Tokenizer::runHelperProgram: couldn't delete temporary file" << endl;
 #endif
 	}
 

Modified: trunk/Utils/CommandLine.cpp
===================================================================
--- trunk/Utils/CommandLine.cpp	2006-06-10 03:03:03 UTC (rev 312)
+++ trunk/Utils/CommandLine.cpp	2006-06-10 03:04:26 UTC (rev 313)
@@ -35,6 +35,28 @@
 {
 }
 
+/// Runs a command synchronously.
+bool CommandLine::runSync(const string &commandLine, string &output)
+{
+	int exitStatus = 0;
+
+	if (commandLine.empty() == true)
+	{
+		return false;
+	}
+
+	Glib::spawn_command_line_sync(commandLine, &output, NULL, &exitStatus);
+	if (exitStatus == 0)
+	{
+		return true;
+	}
+#ifdef DEBUG
+	cout << "CommandLine::runSync: exit status is " << exitStatus << endl;
+#endif
+
+	return false;
+}
+
 /// Runs a command asynchronously.
 bool CommandLine::runAsync(const MIMEAction &action, const vector<string> &arguments)
 {

Modified: trunk/Utils/CommandLine.h
===================================================================
--- trunk/Utils/CommandLine.h	2006-06-10 03:03:03 UTC (rev 312)
+++ trunk/Utils/CommandLine.h	2006-06-10 03:04:26 UTC (rev 313)
@@ -27,6 +27,9 @@
 	public:
 		~CommandLine();
 
+		/// Runs a command synchronously.
+		static bool runSync(const std::string &commandLine, std::string &output);
+
 		/// Runs a command asynchronously.
 		static bool runAsync(const MIMEAction &action, const std::vector<std::string> &arguments);
 



From fabricecolin at berlios.de  Sun Jun 11 10:01:25 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Sun, 11 Jun 2006 10:01:25 +0200
Subject: [Pinot-svn] r314 - in trunk: . po
Message-ID: <200606110801.k5B81PYV020225@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-11 10:01:24 +0200 (Sun, 11 Jun 2006)
New Revision: 314

Modified:
   trunk/NEWS
   trunk/TODO
   trunk/po/es.po
   trunk/po/fr.po
Log:
Releasing 0.49.


Modified: trunk/NEWS
===================================================================
--- trunk/NEWS	2006-06-10 03:04:26 UTC (rev 313)
+++ trunk/NEWS	2006-06-11 08:01:24 UTC (rev 314)
@@ -1,14 +1,15 @@
-??? version_0_4_9
+2006/06/11 version_0_4_9
 General :
  - able to find the default application for a given MIME type
 Tokenize :
  - better HTML tokenizer
 UI :
- - fixed exit time crash when View is the tab being shown
  - titles in documents lists are no longer truncated
  - if import fails, the progress bar displays the error message
- - the internal viewer is used only for HTML; for all other types, the default
-  application is launched
+ - dropped the internal viewer, default applications are launched on View
+ - View Cache no longer dependant on Google SOAP API. It just points to the
+  Google Cache for http[s] results
+ - remember whether the queries list is expanded
 
 2006/05/25 version_0_4_8
 Monitor :

Modified: trunk/TODO
===================================================================
--- trunk/TODO	2006-06-10 03:04:26 UTC (rev 313)
+++ trunk/TODO	2006-06-11 08:01:24 UTC (rev 314)
@@ -3,9 +3,7 @@
 - Get rid of dead code/classes/methods...
 - Advertise service via Rendezvous
 - Check for leaks with valgrind (eg --tool=memcheck -v --leak-check=yes --show-reachable=yes ...)
-- Replace calls to system() with CommandLine::runAsync()
 - MIMEScanner should also return parent types so that we don't filter out types unnecessarily
-- Distribute pinot.pot
 
 Tokenize
 - Allow to cache documents that had to be converted ? eg PDF, MS Word
@@ -96,4 +94,6 @@
 - Double click on a word in the extract field adds it to the live query field
 - When switching back and forth between results tabs and another tab, why does the
   result list get shifted right to the Title column ?
-
+- Use other cache services
+  MirrorDot http://www.mirrordot.com/find-mirror.html?
+  WayBack machine http://web.archive.org/web/*/

Modified: trunk/po/es.po
===================================================================
--- trunk/po/es.po	2006-06-10 03:04:26 UTC (rev 313)
+++ trunk/po/es.po	2006-06-11 08:01:24 UTC (rev 314)
@@ -6,9 +6,9 @@
 #, fuzzy
 msgid ""
 msgstr ""
-"Project-Id-Version: pinot 0.43\n"
+"Project-Id-Version: pinot 0.49\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2006-06-09 21:46+0800\n"
+"POT-Creation-Date: 2006-06-09 23:18+0800\n"
 "PO-Revision-Date: 2006-01-30 16:44+0800\n"
 "Last-Translator: Jes?s Tramullas <jesus at tramullas.com>\n"
 "Language-Team: es <jesus at tramullas.com>\n"
@@ -24,18 +24,18 @@
 msgid "Current User"
 msgstr "Usuario"
 
-#: UI/GTK2/src/EnginesTree.cpp:339 UI/GTK2/src/mainWindow.cc:237
-#: UI/GTK2/src/mainWindow.cc:339 UI/GTK2/src/mainWindow.cc:342
-#: UI/GTK2/src/mainWindow.cc:510 UI/GTK2/src/mainWindow.cc:961
-#: UI/GTK2/src/mainWindow.cc:1017 UI/GTK2/src/mainWindow.cc:1037
-#: UI/GTK2/src/mainWindow.cc:1072 UI/GTK2/src/mainWindow.cc:1615
+#: UI/GTK2/src/EnginesTree.cpp:339 UI/GTK2/src/mainWindow.cc:230
+#: UI/GTK2/src/mainWindow.cc:332 UI/GTK2/src/mainWindow.cc:335
+#: UI/GTK2/src/mainWindow.cc:517 UI/GTK2/src/mainWindow.cc:970
+#: UI/GTK2/src/mainWindow.cc:1026 UI/GTK2/src/mainWindow.cc:1046
+#: UI/GTK2/src/mainWindow.cc:1081 UI/GTK2/src/mainWindow.cc:1644
 #: UI/GTK2/src/PinotSettings.cpp:204 UI/GTK2/src/PinotSettings.cpp:926
 #: UI/GTK2/src/PinotSettings.cpp:982
 msgid "My Documents"
 msgstr "Mis documentos"
 
-#: UI/GTK2/src/EnginesTree.cpp:343 UI/GTK2/src/mainWindow.cc:345
-#: UI/GTK2/src/mainWindow.cc:348 UI/GTK2/src/MboxHandler.cpp:159
+#: UI/GTK2/src/EnginesTree.cpp:343 UI/GTK2/src/mainWindow.cc:338
+#: UI/GTK2/src/mainWindow.cc:341 UI/GTK2/src/MboxHandler.cpp:159
 #: UI/GTK2/src/PinotSettings.cpp:205 UI/GTK2/src/PinotSettings.cpp:927
 #: UI/GTK2/src/PinotSettings.cpp:983 UI/GTK2/src/prefsDialog_glade.cc:112
 msgid "My Email"
@@ -151,190 +151,190 @@
 msgid "Summary"
 msgstr "Sumario"
 
-#: UI/GTK2/src/mainWindow.cc:215
+#: UI/GTK2/src/mainWindow.cc:208
 msgid "Add index"
 msgstr "A?adir ?ndice"
 
-#: UI/GTK2/src/mainWindow.cc:216
+#: UI/GTK2/src/mainWindow.cc:209
 msgid "Remove index"
 msgstr "Borrar ?ndice"
 
-#: UI/GTK2/src/mainWindow.cc:232
+#: UI/GTK2/src/mainWindow.cc:225
 msgid "Ready"
 msgstr "Listo"
 
-#: UI/GTK2/src/mainWindow.cc:276
+#: UI/GTK2/src/mainWindow.cc:269
 msgid "N/A"
 msgstr "Desconocido"
 
-#: UI/GTK2/src/mainWindow.cc:286
+#: UI/GTK2/src/mainWindow.cc:279
 msgid "<undefined>"
 msgstr "<indefinido>"
 
-#: UI/GTK2/src/mainWindow.cc:472
+#: UI/GTK2/src/mainWindow.cc:455
 msgid "Result location is"
 msgstr "La localizaci?n del resultado es"
 
-#: UI/GTK2/src/mainWindow.cc:520
+#: UI/GTK2/src/mainWindow.cc:527
 msgid "Document location is"
 msgstr "La localizaci?n del documento es"
 
-#: UI/GTK2/src/mainWindow.cc:759
+#: UI/GTK2/src/mainWindow.cc:766
 msgid "Showing"
 msgstr "Mostrando"
 
-#: UI/GTK2/src/mainWindow.cc:764
+#: UI/GTK2/src/mainWindow.cc:771
 msgid "off"
 msgstr "desactivado"
 
-#: UI/GTK2/src/mainWindow.cc:769
+#: UI/GTK2/src/mainWindow.cc:776
 msgid "documents, starting at"
 msgstr "documentos comenzando en"
 
-#: UI/GTK2/src/mainWindow.cc:805
+#: UI/GTK2/src/mainWindow.cc:812
 msgid "Query"
 msgstr "B?squeda"
 
-#: UI/GTK2/src/mainWindow.cc:809 UI/GTK2/src/mainWindow.cc:2643
+#: UI/GTK2/src/mainWindow.cc:816 UI/GTK2/src/mainWindow.cc:2672
 msgid "on"
 msgstr "en"
 
-#: UI/GTK2/src/mainWindow.cc:813
+#: UI/GTK2/src/mainWindow.cc:820
 msgid "ended"
 msgstr "finalizado"
 
-#: UI/GTK2/src/mainWindow.cc:890
+#: UI/GTK2/src/mainWindow.cc:899
 msgid "Updated label(s)"
 msgstr "Etiqueta(s) actualizada(s)"
 
-#: UI/GTK2/src/mainWindow.cc:971
+#: UI/GTK2/src/mainWindow.cc:980
 msgid "Updated document"
 msgstr "Documento actualizado"
 
-#: UI/GTK2/src/mainWindow.cc:986
+#: UI/GTK2/src/mainWindow.cc:995
 msgid "Indexed"
 msgstr "Indizado"
 
-#: UI/GTK2/src/mainWindow.cc:1038
+#: UI/GTK2/src/mainWindow.cc:1047
 msgid "Unindexed document(s)"
 msgstr "Documento(s) no indizado(s)"
 
-#: UI/GTK2/src/mainWindow.cc:1083
+#: UI/GTK2/src/mainWindow.cc:1092
 msgid "Updated document properties"
 msgstr "Propiedades del documento actualizadas"
 
-#: UI/GTK2/src/mainWindow.cc:1130
+#: UI/GTK2/src/mainWindow.cc:1139
 msgid "Couldn't rename index, name"
 msgstr "No se pudo renombrar ?ndice, nombre"
 
-#: UI/GTK2/src/mainWindow.cc:1134 UI/GTK2/src/mainWindow.cc:1949
-#: UI/GTK2/src/mainWindow.cc:2477
+#: UI/GTK2/src/mainWindow.cc:1143 UI/GTK2/src/mainWindow.cc:1978
+#: UI/GTK2/src/mainWindow.cc:2506
 msgid "is already in use"
 msgstr "ya est? en uso"
 
-#: UI/GTK2/src/mainWindow.cc:1147
+#: UI/GTK2/src/mainWindow.cc:1156
 msgid "Couldn't rename index"
 msgstr "No se pudo renombrar el ?ndice"
 
-#: UI/GTK2/src/mainWindow.cc:1160
+#: UI/GTK2/src/mainWindow.cc:1169
 msgid "Edited index"
 msgstr "?ndice editado"
 
-#: UI/GTK2/src/mainWindow.cc:1570 UI/GTK2/src/mainWindow.cc:1659
+#: UI/GTK2/src/mainWindow.cc:1599 UI/GTK2/src/mainWindow.cc:1688
 msgid "Please set a location for the index first"
 msgstr "Por favor, primero fije una localizaci?n para el ?ndice"
 
-#: UI/GTK2/src/mainWindow.cc:1606
+#: UI/GTK2/src/mainWindow.cc:1635
 msgid "Import Document(s)"
 msgstr "Importar Documento(s)"
 
-#: UI/GTK2/src/mainWindow.cc:1732 UI/GTK2/src/WorkerThreads.cpp:425
+#: UI/GTK2/src/mainWindow.cc:1761 UI/GTK2/src/WorkerThreads.cpp:425
 #: UI/GTK2/src/WorkerThreads.cpp:1142
 msgid "Index"
 msgstr "?ndice"
 
-#: UI/GTK2/src/mainWindow.cc:1736 UI/GTK2/src/WorkerThreads.cpp:429
+#: UI/GTK2/src/mainWindow.cc:1765 UI/GTK2/src/WorkerThreads.cpp:429
 #: UI/GTK2/src/WorkerThreads.cpp:1146
 msgid "doesn't exist"
 msgstr "no existe"
 
-#: UI/GTK2/src/mainWindow.cc:1837
+#: UI/GTK2/src/mainWindow.cc:1866
 msgid "Remove this document from the index ?"
 msgstr "?Borrar este documento del ?ndice?"
 
-#: UI/GTK2/src/mainWindow.cc:1856
+#: UI/GTK2/src/mainWindow.cc:1885
 msgid "Remove these documents from the index ?"
 msgstr "?Borrar este documento del ?ndice?"
 
-#: UI/GTK2/src/mainWindow.cc:1900
+#: UI/GTK2/src/mainWindow.cc:1929
 msgid "A metasearch tool for the Free Desktop"
 msgstr "Una herramienta metabuscador para el escritorio libre"
 
-#: UI/GTK2/src/mainWindow.cc:1901
+#: UI/GTK2/src/mainWindow.cc:1930
 msgid "(C) 2005-2006 Fabrice Colin"
 msgstr "(C) 2005-2006 Fabrice Colin"
 
-#: UI/GTK2/src/mainWindow.cc:1945
+#: UI/GTK2/src/mainWindow.cc:1974
 msgid "Index name"
 msgstr "Nombre del ?ndice"
 
-#: UI/GTK2/src/mainWindow.cc:1960
+#: UI/GTK2/src/mainWindow.cc:1989
 msgid "Couldn't add index"
 msgstr "No se pudo a?adir el ?ndice"
 
-#: UI/GTK2/src/mainWindow.cc:1974
+#: UI/GTK2/src/mainWindow.cc:2003
 msgid "Added new index"
 msgstr "A?adido un nuevo ?ndice"
 
-#: UI/GTK2/src/mainWindow.cc:2009
+#: UI/GTK2/src/mainWindow.cc:2038
 msgid "Couldn't remove index"
 msgstr "No se pudo borrar el ?ndice"
 
-#: UI/GTK2/src/mainWindow.cc:2104
+#: UI/GTK2/src/mainWindow.cc:2133
 msgid "Live query"
 msgstr "B?squeda activa"
 
-#: UI/GTK2/src/mainWindow.cc:2261
+#: UI/GTK2/src/mainWindow.cc:2290
 msgid "At least one task hasn't completed yet. Quit now ?"
 msgstr "Al menos una tarea no ha finalizado. ?Parar ahora?"
 
-#: UI/GTK2/src/mainWindow.cc:2473
+#: UI/GTK2/src/mainWindow.cc:2502
 msgid "Query name"
 msgstr "Nombre la b?squeda"
 
-#: UI/GTK2/src/mainWindow.cc:2500
+#: UI/GTK2/src/mainWindow.cc:2529
 msgid "Couldn't update query"
 msgstr "No se pudo actualizar la b?squeda"
 
-#: UI/GTK2/src/mainWindow.cc:2508
+#: UI/GTK2/src/mainWindow.cc:2537
 msgid "Edited query"
 msgstr "B?squeda editada"
 
-#: UI/GTK2/src/mainWindow.cc:2515
+#: UI/GTK2/src/mainWindow.cc:2544
 msgid "Couldn't add query"
 msgstr "No se pudo a?adir la b?squeda"
 
-#: UI/GTK2/src/mainWindow.cc:2523
+#: UI/GTK2/src/mainWindow.cc:2552
 msgid "Added new query"
 msgstr "A?adida una nueva b?squeda"
 
-#: UI/GTK2/src/mainWindow.cc:2537
+#: UI/GTK2/src/mainWindow.cc:2566
 msgid "Query is not set"
 msgstr "B?squeda no definida"
 
-#: UI/GTK2/src/mainWindow.cc:2548
+#: UI/GTK2/src/mainWindow.cc:2577
 msgid "No search engine selected"
 msgstr "Motor de b?squeda no seleccionado"
 
-#: UI/GTK2/src/mainWindow.cc:2630
+#: UI/GTK2/src/mainWindow.cc:2659
 msgid "Please set the Google API key first"
 msgstr "Por favor, primero configure el API de Google"
 
-#: UI/GTK2/src/mainWindow.cc:2639
+#: UI/GTK2/src/mainWindow.cc:2668
 msgid "Running query"
 msgstr "Ejecutando la b?squeda"
 
-#: UI/GTK2/src/mainWindow.cc:2746
+#: UI/GTK2/src/mainWindow.cc:2775
 msgid "is already indexed or is being indexed"
 msgstr "ya ha sido indizado, o se est? indizando"
 

Modified: trunk/po/fr.po
===================================================================
--- trunk/po/fr.po	2006-06-10 03:04:26 UTC (rev 313)
+++ trunk/po/fr.po	2006-06-11 08:01:24 UTC (rev 314)
@@ -6,9 +6,9 @@
 #, fuzzy
 msgid ""
 msgstr ""
-"Project-Id-Version: pinot 0.43\n"
+"Project-Id-Version: pinot 0.49\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2006-06-09 21:46+0800\n"
+"POT-Creation-Date: 2006-06-09 23:18+0800\n"
 "PO-Revision-Date: 2006-01-20 19:44+0800\n"
 "Last-Translator: Fabrice Colin <colinf at chez.com>\n"
 "Language-Team: fr <colinf at chez.com>\n"
@@ -24,18 +24,18 @@
 msgid "Current User"
 msgstr "Utilisateur"
 
-#: UI/GTK2/src/EnginesTree.cpp:339 UI/GTK2/src/mainWindow.cc:237
-#: UI/GTK2/src/mainWindow.cc:339 UI/GTK2/src/mainWindow.cc:342
-#: UI/GTK2/src/mainWindow.cc:510 UI/GTK2/src/mainWindow.cc:961
-#: UI/GTK2/src/mainWindow.cc:1017 UI/GTK2/src/mainWindow.cc:1037
-#: UI/GTK2/src/mainWindow.cc:1072 UI/GTK2/src/mainWindow.cc:1615
+#: UI/GTK2/src/EnginesTree.cpp:339 UI/GTK2/src/mainWindow.cc:230
+#: UI/GTK2/src/mainWindow.cc:332 UI/GTK2/src/mainWindow.cc:335
+#: UI/GTK2/src/mainWindow.cc:517 UI/GTK2/src/mainWindow.cc:970
+#: UI/GTK2/src/mainWindow.cc:1026 UI/GTK2/src/mainWindow.cc:1046
+#: UI/GTK2/src/mainWindow.cc:1081 UI/GTK2/src/mainWindow.cc:1644
 #: UI/GTK2/src/PinotSettings.cpp:204 UI/GTK2/src/PinotSettings.cpp:926
 #: UI/GTK2/src/PinotSettings.cpp:982
 msgid "My Documents"
 msgstr "Mes Documents"
 
-#: UI/GTK2/src/EnginesTree.cpp:343 UI/GTK2/src/mainWindow.cc:345
-#: UI/GTK2/src/mainWindow.cc:348 UI/GTK2/src/MboxHandler.cpp:159
+#: UI/GTK2/src/EnginesTree.cpp:343 UI/GTK2/src/mainWindow.cc:338
+#: UI/GTK2/src/mainWindow.cc:341 UI/GTK2/src/MboxHandler.cpp:159
 #: UI/GTK2/src/PinotSettings.cpp:205 UI/GTK2/src/PinotSettings.cpp:927
 #: UI/GTK2/src/PinotSettings.cpp:983 UI/GTK2/src/prefsDialog_glade.cc:112
 msgid "My Email"
@@ -151,190 +151,190 @@
 msgid "Summary"
 msgstr "Sommaire"
 
-#: UI/GTK2/src/mainWindow.cc:215
+#: UI/GTK2/src/mainWindow.cc:208
 msgid "Add index"
 msgstr "Ajouter un index"
 
-#: UI/GTK2/src/mainWindow.cc:216
+#: UI/GTK2/src/mainWindow.cc:209
 msgid "Remove index"
 msgstr "Enlever un index"
 
-#: UI/GTK2/src/mainWindow.cc:232
+#: UI/GTK2/src/mainWindow.cc:225
 msgid "Ready"
 msgstr "Pret"
 
-#: UI/GTK2/src/mainWindow.cc:276
+#: UI/GTK2/src/mainWindow.cc:269
 msgid "N/A"
 msgstr "Inconnue"
 
-#: UI/GTK2/src/mainWindow.cc:286
+#: UI/GTK2/src/mainWindow.cc:279
 msgid "<undefined>"
 msgstr "<inconnu>"
 
-#: UI/GTK2/src/mainWindow.cc:472
+#: UI/GTK2/src/mainWindow.cc:455
 msgid "Result location is"
 msgstr "Le chemin du resultat est"
 
-#: UI/GTK2/src/mainWindow.cc:520
+#: UI/GTK2/src/mainWindow.cc:527
 msgid "Document location is"
 msgstr "Le chemin du document is"
 
-#: UI/GTK2/src/mainWindow.cc:759
+#: UI/GTK2/src/mainWindow.cc:766
 msgid "Showing"
 msgstr "Listant"
 
-#: UI/GTK2/src/mainWindow.cc:764
+#: UI/GTK2/src/mainWindow.cc:771
 msgid "off"
 msgstr "documents,"
 
-#: UI/GTK2/src/mainWindow.cc:769
+#: UI/GTK2/src/mainWindow.cc:776
 msgid "documents, starting at"
 msgstr "au total, a partir de"
 
-#: UI/GTK2/src/mainWindow.cc:805
+#: UI/GTK2/src/mainWindow.cc:812
 msgid "Query"
 msgstr "La recherche"
 
-#: UI/GTK2/src/mainWindow.cc:809 UI/GTK2/src/mainWindow.cc:2643
+#: UI/GTK2/src/mainWindow.cc:816 UI/GTK2/src/mainWindow.cc:2672
 msgid "on"
 msgstr "sur"
 
-#: UI/GTK2/src/mainWindow.cc:813
+#: UI/GTK2/src/mainWindow.cc:820
 msgid "ended"
 msgstr "est terminee"
 
-#: UI/GTK2/src/mainWindow.cc:890
+#: UI/GTK2/src/mainWindow.cc:899
 msgid "Updated label(s)"
 msgstr "Mis a jour l(es) etiquette(s)"
 
-#: UI/GTK2/src/mainWindow.cc:971
+#: UI/GTK2/src/mainWindow.cc:980
 msgid "Updated document"
 msgstr "Mis a jour le document"
 
-#: UI/GTK2/src/mainWindow.cc:986
+#: UI/GTK2/src/mainWindow.cc:995
 msgid "Indexed"
 msgstr "Indexe"
 
-#: UI/GTK2/src/mainWindow.cc:1038
+#: UI/GTK2/src/mainWindow.cc:1047
 msgid "Unindexed document(s)"
 msgstr "Desindexe le(s) document(s)"
 
-#: UI/GTK2/src/mainWindow.cc:1083
+#: UI/GTK2/src/mainWindow.cc:1092
 msgid "Updated document properties"
 msgstr "Mis a jour les proprietes du document"
 
-#: UI/GTK2/src/mainWindow.cc:1130
+#: UI/GTK2/src/mainWindow.cc:1139
 msgid "Couldn't rename index, name"
 msgstr "N'a pas pu renommer l'index, le nom"
 
-#: UI/GTK2/src/mainWindow.cc:1134 UI/GTK2/src/mainWindow.cc:1949
-#: UI/GTK2/src/mainWindow.cc:2477
+#: UI/GTK2/src/mainWindow.cc:1143 UI/GTK2/src/mainWindow.cc:1978
+#: UI/GTK2/src/mainWindow.cc:2506
 msgid "is already in use"
 msgstr "est deja utilise"
 
-#: UI/GTK2/src/mainWindow.cc:1147
+#: UI/GTK2/src/mainWindow.cc:1156
 msgid "Couldn't rename index"
 msgstr "N'a pas pu renommer l'index"
 
-#: UI/GTK2/src/mainWindow.cc:1160
+#: UI/GTK2/src/mainWindow.cc:1169
 msgid "Edited index"
 msgstr "Edite l'index"
 
-#: UI/GTK2/src/mainWindow.cc:1570 UI/GTK2/src/mainWindow.cc:1659
+#: UI/GTK2/src/mainWindow.cc:1599 UI/GTK2/src/mainWindow.cc:1688
 msgid "Please set a location for the index first"
 msgstr "Donnez un chemin a l'index"
 
-#: UI/GTK2/src/mainWindow.cc:1606
+#: UI/GTK2/src/mainWindow.cc:1635
 msgid "Import Document(s)"
 msgstr "Import de Document(s)"
 
-#: UI/GTK2/src/mainWindow.cc:1732 UI/GTK2/src/WorkerThreads.cpp:425
+#: UI/GTK2/src/mainWindow.cc:1761 UI/GTK2/src/WorkerThreads.cpp:425
 #: UI/GTK2/src/WorkerThreads.cpp:1142
 msgid "Index"
 msgstr "L'index"
 
-#: UI/GTK2/src/mainWindow.cc:1736 UI/GTK2/src/WorkerThreads.cpp:429
+#: UI/GTK2/src/mainWindow.cc:1765 UI/GTK2/src/WorkerThreads.cpp:429
 #: UI/GTK2/src/WorkerThreads.cpp:1146
 msgid "doesn't exist"
 msgstr "n'existe pas"
 
-#: UI/GTK2/src/mainWindow.cc:1837
+#: UI/GTK2/src/mainWindow.cc:1866
 msgid "Remove this document from the index ?"
 msgstr "Enlever ce document de l'index ?"
 
-#: UI/GTK2/src/mainWindow.cc:1856
+#: UI/GTK2/src/mainWindow.cc:1885
 msgid "Remove these documents from the index ?"
 msgstr "Enlever ces documents de l'index ?"
 
-#: UI/GTK2/src/mainWindow.cc:1900
+#: UI/GTK2/src/mainWindow.cc:1929
 msgid "A metasearch tool for the Free Desktop"
 msgstr "Un outil de recherche pour le Bureau Libre"
 
-#: UI/GTK2/src/mainWindow.cc:1901
+#: UI/GTK2/src/mainWindow.cc:1930
 msgid "(C) 2005-2006 Fabrice Colin"
 msgstr "(C) 2005-2006 Fabrice Colin"
 
-#: UI/GTK2/src/mainWindow.cc:1945
+#: UI/GTK2/src/mainWindow.cc:1974
 msgid "Index name"
 msgstr "Nom de l'index"
 
-#: UI/GTK2/src/mainWindow.cc:1960
+#: UI/GTK2/src/mainWindow.cc:1989
 msgid "Couldn't add index"
 msgstr "N'a pas pu ajouter l'index"
 
-#: UI/GTK2/src/mainWindow.cc:1974
+#: UI/GTK2/src/mainWindow.cc:2003
 msgid "Added new index"
 msgstr "Ajoute un nouvel index"
 
-#: UI/GTK2/src/mainWindow.cc:2009
+#: UI/GTK2/src/mainWindow.cc:2038
 msgid "Couldn't remove index"
 msgstr "N'a pas pu enlever l'index"
 
-#: UI/GTK2/src/mainWindow.cc:2104
+#: UI/GTK2/src/mainWindow.cc:2133
 msgid "Live query"
 msgstr "Recherche"
 
-#: UI/GTK2/src/mainWindow.cc:2261
+#: UI/GTK2/src/mainWindow.cc:2290
 msgid "At least one task hasn't completed yet. Quit now ?"
 msgstr "Au moins une tache n'est pas terminee. Quitter maintenant ?"
 
-#: UI/GTK2/src/mainWindow.cc:2473
+#: UI/GTK2/src/mainWindow.cc:2502
 msgid "Query name"
 msgstr "Nom de la recherche"
 
-#: UI/GTK2/src/mainWindow.cc:2500
+#: UI/GTK2/src/mainWindow.cc:2529
 msgid "Couldn't update query"
 msgstr "N'a pas pu mettre a jour la recherche"
 
-#: UI/GTK2/src/mainWindow.cc:2508
+#: UI/GTK2/src/mainWindow.cc:2537
 msgid "Edited query"
 msgstr "Edite la recherche"
 
-#: UI/GTK2/src/mainWindow.cc:2515
+#: UI/GTK2/src/mainWindow.cc:2544
 msgid "Couldn't add query"
 msgstr "N'a pas pu ajouter la recherche"
 
-#: UI/GTK2/src/mainWindow.cc:2523
+#: UI/GTK2/src/mainWindow.cc:2552
 msgid "Added new query"
 msgstr "Ajoute une nouvelle recherche"
 
-#: UI/GTK2/src/mainWindow.cc:2537
+#: UI/GTK2/src/mainWindow.cc:2566
 msgid "Query is not set"
 msgstr "Recherche indefinie"
 
-#: UI/GTK2/src/mainWindow.cc:2548
+#: UI/GTK2/src/mainWindow.cc:2577
 msgid "No search engine selected"
 msgstr "Pas de moteur selectionne"
 
-#: UI/GTK2/src/mainWindow.cc:2630
+#: UI/GTK2/src/mainWindow.cc:2659
 msgid "Please set the Google API key first"
 msgstr "Configurez la clef de l'API Google "
 
-#: UI/GTK2/src/mainWindow.cc:2639
+#: UI/GTK2/src/mainWindow.cc:2668
 msgid "Running query"
 msgstr "Recherche en cours"
 
-#: UI/GTK2/src/mainWindow.cc:2746
+#: UI/GTK2/src/mainWindow.cc:2775
 msgid "is already indexed or is being indexed"
 msgstr "est deja indexe ou est en cours d'indexation"
 



From fabricecolin at berlios.de  Sun Jun 11 10:03:05 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Sun, 11 Jun 2006 10:03:05 +0200
Subject: [Pinot-svn] r315 - tags
Message-ID: <200606110803.k5B835HX020357@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-11 10:03:05 +0200 (Sun, 11 Jun 2006)
New Revision: 315

Added:
   tags/version_0_4_9/
Log:
Tagging 0.49.


Copied: tags/version_0_4_9 (from rev 314, trunk)



From fabricecolin at berlios.de  Thu Jun 15 17:17:51 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Thu, 15 Jun 2006 17:17:51 +0200
Subject: [Pinot-svn] r316 - trunk/UI/GTK2/src
Message-ID: <200606151517.k5FFHpht000323@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-15 17:17:50 +0200 (Thu, 15 Jun 2006)
New Revision: 316

Modified:
   trunk/UI/GTK2/src/PinotSettings.cpp
   trunk/UI/GTK2/src/PinotSettings.h
   trunk/UI/GTK2/src/pinot.cc
Log:
Load global settings at startup. The only configuration item currently supported
is cache providers.


Modified: trunk/UI/GTK2/src/PinotSettings.cpp
===================================================================
--- trunk/UI/GTK2/src/PinotSettings.cpp	2006-06-11 08:03:05 UTC (rev 315)
+++ trunk/UI/GTK2/src/PinotSettings.cpp	2006-06-15 15:17:50 UTC (rev 316)
@@ -32,6 +32,7 @@
 #include "config.h"
 #include "Languages.h"
 #include "NLS.h"
+#include "StringManip.h"
 #include "PluginWebEngine.h"
 #include "PinotSettings.h"
 
@@ -178,31 +179,43 @@
 	return "";
 }
 
-bool PinotSettings::load(bool reload)
+void PinotSettings::clear(void)
 {
-	if (reload == true)
+	// Clear lists
+	m_indexNames.clear();
+	m_indexIds.clear();
+	m_engines.clear();
+	m_engineIds.clear();
+	m_queries.clear();
+	m_labels.clear();
+	m_mailAccounts.clear();
+	m_cacheProviders.clear();
+}
+
+bool PinotSettings::loadGlobal(const string &fileName)
+{
+	if (loadConfiguration(fileName, true) == false)
 	{
-		// Clear lists
-		m_indexNames.clear();
-		m_indexIds.clear();
-		m_engines.clear();
-		m_engineIds.clear();
-		m_queries.clear();
-		m_labels.clear();
-		m_mailAccounts.clear();
+		return false;
 	}
 
+	return true;
+}
+
+
+bool PinotSettings::load(void)
+{
 	// Load the configuration file
 	string fileName = getConfigurationFileName();
-	if ((m_firstRun == false) &&
-		(loadConfiguration(fileName) == false))
+	if (m_firstRun == false)
 	{
-		cerr << "Failed to parse configuration file "
-			<< fileName << endl;
+		loadConfiguration(fileName, false);
 	}
+
 	// Internal indices
 	addIndex(_("My Documents"), m_indexLocation);
 	addIndex(_("My Email"), m_mailIndexLocation);
+
 	// Add default labels on the first run
 	if (m_firstRun == true)
 	{
@@ -217,18 +230,13 @@
 	m_engines.insert(Engine("Google API", "googleapi", "", "The Web"));
 	m_engineChannels.insert(pair<string, bool>("The Web", true));
 #endif
-#ifdef HAS_OSAPI
-	m_engineIds[1 << m_engines.size()] = "ObjectsSearch API";
-	m_engines.insert(Engine("ObjectsSearch API", "objectssearchapi", "", "The Web"));
-	m_engineChannels.insert(pair<string, bool>("The Web", true));
-#endif
 	m_engineIds[1 << m_engines.size()] = "Xapian";
 	m_engines.insert(Engine("Xapian", "xapian", "", ""));
 
 	return true;
 }
 
-bool PinotSettings::loadConfiguration(const std::string &fileName)
+bool PinotSettings::loadConfiguration(const std::string &fileName, bool isGlobal)
 {
 	struct stat fileStat;
 	bool success = true;
@@ -236,6 +244,7 @@
 	if ((stat(fileName.c_str(), &fileStat) != 0) ||
 		(!S_ISREG(fileStat.st_mode)))
 	{
+		cerr << "Couldn' open configuration file " << fileName << endl;
 		return false;
 	}
 
@@ -278,10 +287,22 @@
 					continue;
 				}
 
-				string nodeName = pElem->get_name();
-				string nodeContent = getElementContent(pElem);
-				if (nodeName == "googleapikey")
+				string nodeName(pElem->get_name());
+				string nodeContent(getElementContent(pElem));
+				if (isGlobal == true)
 				{
+					if (nodeName == "cache")
+					{
+						loadCacheProviders(pElem);
+					}
+					else
+					{
+						// Unsupported element
+						continue;
+					}
+				}
+				else if (nodeName == "googleapikey")
+				{
 					m_googleAPIKey = nodeContent;
 				}
 				else if (nodeName == "ui")
@@ -722,6 +743,75 @@
 	return true;
 }
 
+bool PinotSettings::loadCacheProviders(const Element *pElem)
+{
+	if (pElem == NULL)
+	{
+		return false;
+	}
+
+	Node::NodeList childNodes = pElem->get_children();
+	if (childNodes.empty() == true)
+	{
+		return false;
+	}
+
+	CacheProvider cacheProvider;
+
+	// Load the cache provider's properties
+	for (Node::NodeList::iterator iter = childNodes.begin(); iter != childNodes.end(); ++iter)
+	{
+		Node *pNode = (*iter);
+		Element *pElem = dynamic_cast<Element*>(pNode);
+		if (pElem == NULL)
+		{
+			continue;
+		}
+
+		string nodeName = pElem->get_name();
+		string nodeContent = getElementContent(pElem);
+
+		if (nodeName == "name")
+		{
+			cacheProvider.m_name = nodeContent;
+		}
+		else if (nodeName == "location")
+		{
+			cacheProvider.m_location = nodeContent;
+		}
+		else if (nodeName == "protocols")
+		{
+			nodeContent += ",";
+
+			ustring::size_type previousPos = 0, commaPos = nodeContent.find(",");
+			while (commaPos != ustring::npos)
+			{
+				string protocol(nodeContent.substr(previousPos,
+                                        commaPos - previousPos));
+
+				StringManip::trimSpaces(protocol);
+				cacheProvider.m_protocols.insert(protocol);
+
+				// Next
+				previousPos = commaPos + 1;
+				commaPos = nodeContent.find(",", previousPos);
+			}
+		}
+	}
+
+	if ((cacheProvider.m_name.empty() == false) &&
+		(cacheProvider.m_location.empty() == false))
+	{
+		m_cacheProviders.push_back(cacheProvider);
+
+		// Copy the list of protocols supported by this cache provider
+		copy(cacheProvider.m_protocols.begin(), cacheProvider.m_protocols.end(),
+			inserter(m_cacheProtocols, m_cacheProtocols.begin()));
+	}
+
+	return true;
+}
+
 bool PinotSettings::loadSearchEngines(const string &directoryName)
 {
 	if (directoryName.empty() == true)
@@ -1222,17 +1312,28 @@
 	m_size = 0;
 }
 
-PinotSettings::MailAccount::MailAccount(const MailAccount &other)
+PinotSettings::MailAccount::MailAccount(const MailAccount &other) :
+	m_name(other.m_name),
+	m_type(other.m_type),
+	m_modTime(other.m_modTime),
+	m_lastMessageTime(other.m_lastMessageTime),
+	m_size(other.m_size)
 {
+}
+
+PinotSettings::MailAccount::~MailAccount()
+{
+}
+
+PinotSettings::MailAccount &PinotSettings::MailAccount::operator=(const MailAccount &other)
+{
 	m_name = other.m_name;
 	m_type = other.m_type;
 	m_modTime = other.m_modTime;
 	m_lastMessageTime = other.m_lastMessageTime;
 	m_size = other.m_size;
-}
 
-PinotSettings::MailAccount::~MailAccount()
-{
+	return *this;
 }
 
 bool PinotSettings::MailAccount::operator<(const MailAccount &other) const
@@ -1254,3 +1355,51 @@
 
 	return false;
 }
+
+PinotSettings::CacheProvider::CacheProvider()
+{
+}
+
+PinotSettings::CacheProvider::CacheProvider(const CacheProvider &other) :
+	m_name(other.m_name),
+	m_location(other.m_location)
+{
+	m_protocols.clear();
+	copy(other.m_protocols.begin(), other.m_protocols.end(),
+		inserter(m_protocols, m_protocols.begin()));
+}
+
+PinotSettings::CacheProvider::~CacheProvider()
+{
+}
+
+PinotSettings::CacheProvider &PinotSettings::CacheProvider::operator=(const CacheProvider &other)
+{
+	m_name = other.m_name;
+	m_location = other.m_location;
+	m_protocols.clear();
+	copy(other.m_protocols.begin(), other.m_protocols.end(),
+		inserter(m_protocols, m_protocols.begin()));
+
+	return *this;
+}
+
+bool PinotSettings::CacheProvider::operator<(const CacheProvider &other) const
+{
+	if (m_name < other.m_name)
+	{
+		return true;
+	}
+
+	return false;
+}
+
+bool PinotSettings::CacheProvider::operator==(const CacheProvider &other) const
+{
+	if (m_name == other.m_name)
+	{
+		return true;
+	}
+
+	return false;
+}

Modified: trunk/UI/GTK2/src/PinotSettings.h
===================================================================
--- trunk/UI/GTK2/src/PinotSettings.h	2006-06-11 08:03:05 UTC (rev 315)
+++ trunk/UI/GTK2/src/PinotSettings.h	2006-06-15 15:17:50 UTC (rev 316)
@@ -19,6 +19,7 @@
 
 #include <sys/types.h>
 #include <string>
+#include <vector>
 #include <map>
 #include <set>
 #include <vector>
@@ -41,8 +42,12 @@
 
 		static std::string getCurrentUserName(void);
 
-		bool load(bool reload = false);
+		void clear(void);
 
+		bool loadGlobal(const std::string &fileName);
+
+		bool load(void);
+
 		bool loadSearchEngines(const std::string &directoryName);
 
 		bool save(void);
@@ -127,6 +132,7 @@
 				MailAccount(const MailAccount &other);
 				~MailAccount();
 
+				MailAccount &operator=(const MailAccount &other);
 				bool operator<(const MailAccount &other) const;
 				bool operator==(const MailAccount &other) const;
 
@@ -137,6 +143,22 @@
 				off_t m_size;
 		};
 
+		class CacheProvider
+		{
+			public:
+				CacheProvider();
+				CacheProvider(const CacheProvider &other);
+				~CacheProvider();
+
+				CacheProvider &operator=(const CacheProvider &other);
+				bool operator<(const CacheProvider &other) const;
+				bool operator==(const CacheProvider &other) const;
+
+				Glib::ustring m_name;
+				Glib::ustring m_location;
+				std::set<Glib::ustring> m_protocols;
+		};
+
 		Glib::ustring m_googleAPIKey;
 		Glib::ustring m_indexLocation;
 		Glib::ustring m_mailIndexLocation;
@@ -151,6 +173,8 @@
 		bool m_suggestQueryTerms;
 		Gdk::Color m_newResultsColour;
 		std::set<MailAccount> m_mailAccounts;
+		std::vector<CacheProvider> m_cacheProviders;
+		std::set<Glib::ustring> m_cacheProtocols;
 
 	protected:
 		static PinotSettings m_instance;
@@ -164,7 +188,7 @@
 		std::set<std::string> m_labels;
 
 		PinotSettings();
-		bool loadConfiguration(const std::string &fileName);
+		bool loadConfiguration(const std::string &fileName, bool isGlobal);
 		bool loadUi(const xmlpp::Element *pElem);
 		bool loadIndexes(const xmlpp::Element *pElem);
 		bool loadEngineChannels(const xmlpp::Element *pElem);
@@ -172,6 +196,7 @@
 		bool loadLabels(const xmlpp::Element *pElem);
 		bool loadColour(const xmlpp::Element *pElem);
 		bool loadMailAccounts(const xmlpp::Element *pElem);
+		bool loadCacheProviders(const xmlpp::Element *pElem);
 
 	private:
 		PinotSettings(const PinotSettings &other);

Modified: trunk/UI/GTK2/src/pinot.cc
===================================================================
--- trunk/UI/GTK2/src/pinot.cc	2006-06-11 08:03:05 UTC (rev 315)
+++ trunk/UI/GTK2/src/pinot.cc	2006-06-15 15:17:50 UTC (rev 316)
@@ -173,6 +173,7 @@
 	TokenizerFactory::loadTokenizers(prefixDir + string("/share/pinot/tokenizers"));
 	TokenizerFactory::loadTokenizers(confDirectory + string("/tokenizers"));
 	// Load the settings
+	settings.loadGlobal(prefixDir + string("/share/pinot/globalconfig.xml"));
 	settings.load();
 
 	// Catch interrupts



From fabricecolin at berlios.de  Thu Jun 15 17:27:14 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Thu, 15 Jun 2006 17:27:14 +0200
Subject: [Pinot-svn] r317 - in trunk/UI/GTK2: . src
Message-ID: <200606151527.k5FFREhH001552@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-15 17:27:13 +0200 (Thu, 15 Jun 2006)
New Revision: 317

Modified:
   trunk/UI/GTK2/metase-gtk2.glade
   trunk/UI/GTK2/src/mainWindow.cc
   trunk/UI/GTK2/src/mainWindow.hh
   trunk/UI/GTK2/src/mainWindow_glade.cc
   trunk/UI/GTK2/src/mainWindow_glade.hh
Log:
View Cache is now a menu that lists all cache providers. It is disabled when
none of the selected results belong to a supported protocol.
After editing a query, reselect the query in the list. Some minor fixes.


Modified: trunk/UI/GTK2/metase-gtk2.glade
===================================================================
--- trunk/UI/GTK2/metase-gtk2.glade	2006-06-15 15:17:50 UTC (rev 316)
+++ trunk/UI/GTK2/metase-gtk2.glade	2006-06-15 15:27:13 UTC (rev 317)
@@ -231,7 +231,6 @@
 		      <property name="visible">True</property>
 		      <property name="label" translatable="yes">View Cache</property>
 		      <property name="use_underline">True</property>
-		      <signal name="activate" handler="on_viewcache_activate" last_modification_time="Fri, 18 Mar 2005 19:14:33 GMT"/>
 		    </widget>
 		  </child>
 

Modified: trunk/UI/GTK2/src/mainWindow.cc
===================================================================
--- trunk/UI/GTK2/src/mainWindow.cc	2006-06-15 15:17:50 UTC (rev 316)
+++ trunk/UI/GTK2/src/mainWindow.cc	2006-06-15 15:27:13 UTC (rev 317)
@@ -122,7 +122,7 @@
 	m_pEnginesTree(NULL),
 	m_pNotebook(NULL),
 	m_pIndexMenu(NULL),
-	m_pLabelsMenu(NULL),
+	m_pCacheMenu(NULL),
 	m_state(this)
 {
 	// Reposition and resize the window
@@ -179,10 +179,10 @@
 	queryTreeview->get_selection()->signal_changed().connect(
 		SigC::slot(*this, &mainWindow::on_queryTreeviewSelection_changed));
 	// Populate
-	populate_queryTreeview();
+	populate_queryTreeview("");
 
-	// Populate the index menu
-	populate_indexMenu();
+	// Populate the menus
+	populate_menus();
 
 	// Create a notebook, without any page initially
 	m_pNotebook = manage(new Notebook());
@@ -245,7 +245,7 @@
 //
 // Load user-defined queries
 //
-void mainWindow::populate_queryTreeview()
+void mainWindow::populate_queryTreeview(const string &selectedQueryName)
 {
 	QueryHistory history(m_settings.m_historyDatabase);
 	const std::map<string, QueryProperties> &queries = m_settings.getQueries();
@@ -279,6 +279,14 @@
 			row[m_queryColumns.m_summary] = _("<undefined>");
 		}
 		row[m_queryColumns.m_properties] = queryIter->second;
+
+		if ((selectedQueryName.empty() == false) &&
+			(queryName == selectedQueryName))
+		{
+			// Select this query
+			TreeModel::Path path = m_refQueryTree->get_path(iter);
+			queryTreeview->get_selection()->select(path);
+		}
 	}
 }
 
@@ -311,13 +319,13 @@
 }
 
 //
-// Populate the index menu
+// Populate menus
 //
-void mainWindow::populate_indexMenu()
+void mainWindow::populate_menus()
 {
 	if (m_pIndexMenu == NULL)
 	{
-		m_pIndexMenu = new Menu();
+		m_pIndexMenu = manage(new Menu());
 		list1->set_submenu(*m_pIndexMenu);
 	}
 	else
@@ -340,6 +348,39 @@
 	// Bind the callback's parameter to the index name
 	SigC::Slot0<void> emailActivateSlot = sigc::bind(indexSlot, _("My Email"));
 	pMenuItem->signal_activate().connect(emailActivateSlot);
+
+	if (m_pCacheMenu == NULL)
+	{
+		m_pCacheMenu = manage(new Menu());
+		viewcache1->set_submenu(*m_pCacheMenu);
+	}
+	else
+	{
+		// Clear the submenu
+		m_pCacheMenu->items().clear();
+	}
+
+	SigC::Slot1<void, PinotSettings::CacheProvider> cacheSlot = SigC::slot(*this, &mainWindow::on_cache_changed);
+
+	if (m_settings.m_cacheProviders.empty() == true)
+	{
+		// Hide the submenu
+		viewcache1->hide();
+	}
+	else
+	{
+		// Populate the submenu
+		for (vector<PinotSettings::CacheProvider>::iterator cacheIter = m_settings.m_cacheProviders.begin();
+			cacheIter != m_settings.m_cacheProviders.end(); ++cacheIter)
+		{
+			m_pCacheMenu->items().push_back(Menu_Helpers::MenuElem(cacheIter->m_name));
+			MenuItem *pMenuItem = &m_pCacheMenu->items().back();
+
+			// Bind the callback's parameter to the cache provider
+			SigC::Slot0<void> documentsActivateSlot = sigc::bind(cacheSlot, (*cacheIter));
+			pMenuItem->signal_activate().connect(documentsActivateSlot);
+		}
+	}
 }
 
 //
@@ -468,10 +509,9 @@
 				isViewable = isIndexable = isCached = false;
 				break;
 			}
-			else if ((protocol == "http") ||
-				(protocol == "https"))
+			else if (m_settings.m_cacheProtocols.find(protocol) != m_settings.m_cacheProtocols.end())
 			{
-				// One document on http is good enough
+				// One document with a supported protocol is good enough
 				isCached = true;
 			}
 		}
@@ -541,7 +581,7 @@
 }
 
 //
-// Index > List menu selected
+// Index > List Contents Of menu selected
 //
 void mainWindow::on_index_changed(ustring indexName)
 {
@@ -614,8 +654,87 @@
 }
 
 //
-// Index > labels combo selection changed
+// Results > View Cache menu selected
 //
+void mainWindow::on_cache_changed(PinotSettings::CacheProvider cacheProvider)
+{
+	if (cacheProvider.m_name.empty() == true)
+	{
+		return;
+	}
+
+	NotebookPageBox *pNotebookPage = get_current_page();
+	if (pNotebookPage != NULL)
+	{
+		ResultsPage *pResultsPage = dynamic_cast<ResultsPage*>(pNotebookPage);
+		if (pResultsPage != NULL)
+		{
+			ResultsTree *pResultsTree = pResultsPage->getTree();
+			if (pResultsTree != NULL)
+			{
+				vector<DocumentInfo> resultsList;
+
+				if (pResultsTree->getSelection(resultsList) == true)
+				{
+					for (vector<DocumentInfo>::iterator resultIter = resultsList.begin();
+						resultIter != resultsList.end(); ++resultIter)
+					{
+						string url(resultIter->getLocation());
+						Url urlObj(url);
+						string protocol(urlObj.getProtocol());
+
+						// Is this protocol supported ?
+						if (cacheProvider.m_protocols.find(protocol) == cacheProvider.m_protocols.end())
+						{
+							// No, it isn't... This document will be open in place
+							continue;
+						}
+
+						// Rewrite the URL
+						ustring location(cacheProvider.m_location);
+						ustring::size_type argPos = location.find("%url0");
+						if (argPos != ustring::npos)
+						{
+							string::size_type pos = url.find("://");
+							if ((pos != string::npos) &&
+								(pos + 3 < url.length()))
+							{
+								// URL without protocol
+								location.replace(argPos, 5, url.substr(pos + 3));
+							}
+						}
+						else
+						{
+							argPos = location.find("%url");
+							if (argPos != ustring::npos)
+							{
+								// Full protocol
+								location.replace(argPos, 4, url);
+							}
+						}
+
+						resultIter->setLocation(location);
+#ifdef DEBUG
+						cout << "mainWindow::on_cache_changed: rewritten "
+							<< url << " to " << location << endl;
+#endif
+					}
+
+				}
+
+				view_documents(resultsList);
+
+				// Update the rows right now
+				pResultsTree->setSelectionViewedState(true);
+			}
+		}
+	}
+}
+
+
+//
+// Index labels combo selection changed
+//
 void mainWindow::on_label_changed(ustring indexName, ustring labelName)
 {
 	IndexPage *pIndexPage = dynamic_cast<IndexPage*>(get_page(indexName, NotebookPageBox::INDEX_PAGE));
@@ -1528,65 +1647,6 @@
 }
 
 //
-// Results > View Cache menu selected
-//
-void mainWindow::on_viewcache_activate()
-{
-	string googleCache("http://www.google.com/search?q=cache:");
-
-	NotebookPageBox *pNotebookPage = get_current_page();
-	if (pNotebookPage != NULL)
-	{
-		ResultsPage *pResultsPage = dynamic_cast<ResultsPage*>(pNotebookPage);
-		if (pResultsPage != NULL)
-		{
-			ResultsTree *pResultsTree = pResultsPage->getTree();
-			if (pResultsTree != NULL)
-			{
-				vector<DocumentInfo> resultsList;
-
-				if (pResultsTree->getSelection(resultsList) == true)
-				{
-					for (vector<DocumentInfo>::iterator resultIter = resultsList.begin();
-						resultIter != resultsList.end(); ++resultIter)
-					{
-						string url(resultIter->getLocation());
-						Url urlObj(url);
-						string protocol(urlObj.getProtocol());
-
-#ifdef DEBUG
-						cout << "mainWindow::on_viewcache_activate: " << url << endl;
-#endif
-						if ((protocol == "http") ||
-							(protocol == "https"))
-						{
-							// Rewrite the URL
-							string::size_type pos = url.find("://");
-							if ((pos != string::npos) &&
-								(pos + 3 < url.length()))
-							{
-								resultIter->setLocation(googleCache + url.substr(pos + 3));
-#ifdef DEBUG
-								cout << "mainWindow::on_viewcache_activate: rewritten "
-									<< url << " to " << resultIter->getLocation() << endl;
-#endif
-							}
-						}
-
-						// Other document will be open in place
-					}
-				}
-
-				view_documents(resultsList);
-
-				// Update the rows right now
-				pResultsTree->setSelectionViewedState(true);
-			}
-		}
-	}
-}
-
-//
 // Results > Index menu selected
 //
 void mainWindow::on_indexresults_activate()
@@ -2552,7 +2612,7 @@
 		set_status(_("Added new query"));
 	}
 
-	populate_queryTreeview();
+	populate_queryTreeview(queryProps.getName());
 }
 
 //

Modified: trunk/UI/GTK2/src/mainWindow.hh
===================================================================
--- trunk/UI/GTK2/src/mainWindow.hh	2006-06-15 15:17:50 UTC (rev 316)
+++ trunk/UI/GTK2/src/mainWindow.hh	2006-06-15 15:27:13 UTC (rev 317)
@@ -56,9 +56,9 @@
 
 protected:
 	// Utility methods
-	void populate_queryTreeview();
+	void populate_queryTreeview(const std::string &selectedQueryName);
 	void save_queryTreeview();
-	void populate_indexMenu();
+	void populate_menus();
 
 	// Handlers
 	bool on_queryCompletion_match(const Glib::ustring &key, const Gtk::TreeModel::const_iterator &iter);
@@ -67,6 +67,7 @@
 	void on_resultsTreeviewSelection_changed(Glib::ustring queryName);
 	void on_indexTreeviewSelection_changed(Glib::ustring indexName);
 	void on_index_changed(Glib::ustring indexName);
+	void on_cache_changed(PinotSettings::CacheProvider cacheProvider);
 	void on_label_changed(Glib::ustring indexName, Glib::ustring labelName);
 	void on_switch_page(GtkNotebookPage *p0, guint p1);
 	void on_close_page(Glib::ustring title, NotebookPageBox::PageType type);
@@ -88,7 +89,6 @@
 	virtual void on_showextract_activate();
 	virtual void on_groupresults_activate();
 	virtual void on_viewresults_activate();
-	virtual void on_viewcache_activate();
 	virtual void on_indexresults_activate();
 
 	virtual void on_import_activate();
@@ -156,7 +156,7 @@
 	Gtk::Notebook *m_pNotebook;
 	// Index
 	Gtk::Menu *m_pIndexMenu;
-	Gtk::Menu *m_pLabelsMenu;
+	Gtk::Menu *m_pCacheMenu;
 	ComboModelColumns m_indexNameColumns;
 	Glib::RefPtr<Gtk::ListStore> m_refIndexNameTree;
 	// Tooltips

Modified: trunk/UI/GTK2/src/mainWindow_glade.cc
===================================================================
--- trunk/UI/GTK2/src/mainWindow_glade.cc	2006-06-15 15:17:50 UTC (rev 316)
+++ trunk/UI/GTK2/src/mainWindow_glade.cc	2006-06-15 15:27:13 UTC (rev 317)
@@ -445,7 +445,6 @@
    searchenginegroup1->signal_activate().connect(SigC::slot(*this, &mainWindow_glade::on_groupresults_activate), false);
    clearresults1->signal_activate().connect(SigC::slot(*this, &mainWindow_glade::on_clearresults_activate), false);
    viewresults1->signal_activate().connect(SigC::slot(*this, &mainWindow_glade::on_viewresults_activate), false);
-   viewcache1->signal_activate().connect(SigC::slot(*this, &mainWindow_glade::on_viewcache_activate), false);
    indexresults1->signal_activate().connect(SigC::slot(*this, &mainWindow_glade::on_indexresults_activate), false);
    import1->signal_activate().connect(SigC::slot(*this, &mainWindow_glade::on_import_activate), false);
    viewfromindex1->signal_activate().connect(SigC::slot(*this, &mainWindow_glade::on_viewfromindex_activate), false);

Modified: trunk/UI/GTK2/src/mainWindow_glade.hh
===================================================================
--- trunk/UI/GTK2/src/mainWindow_glade.hh	2006-06-15 15:17:50 UTC (rev 316)
+++ trunk/UI/GTK2/src/mainWindow_glade.hh	2006-06-15 15:27:13 UTC (rev 317)
@@ -117,7 +117,6 @@
         virtual void on_groupresults_activate() = 0;
         virtual void on_clearresults_activate() = 0;
         virtual void on_viewresults_activate() = 0;
-        virtual void on_viewcache_activate() = 0;
         virtual void on_indexresults_activate() = 0;
         virtual void on_import_activate() = 0;
         virtual void on_viewfromindex_activate() = 0;



From fabricecolin at berlios.de  Fri Jun 16 02:19:30 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Fri, 16 Jun 2006 02:19:30 +0200
Subject: [Pinot-svn] r318 - trunk
Message-ID: <200606160019.k5G0JUuh001630@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-16 02:19:19 +0200 (Fri, 16 Jun 2006)
New Revision: 318

Added:
   trunk/globalconfig.xml
Modified:
   trunk/Makefile.am
   trunk/pinot.spec.in
Log:
Global config file.


Modified: trunk/Makefile.am
===================================================================
--- trunk/Makefile.am	2006-06-15 15:27:13 UTC (rev 317)
+++ trunk/Makefile.am	2006-06-16 00:19:19 UTC (rev 318)
@@ -7,13 +7,14 @@
 EXTRA_DIST = ChangeLog NEWS README TODO mkinstalldirs pinot.desktop \
 	pinot.spec textcat_conf.txt Search/Plugins/*src Search/Plugins/*.xml \
 	Collect/pinot-collect.1 Search/pinot-search.1 UI/GTK2/src/pinot.1 \
-	po/pinot.pot UI/GTK2/xapian-powered.png UI/GTK2/pinot.png \
+	globalconfig.xml UI/GTK2/xapian-powered.png UI/GTK2/pinot.png \
 	UI/GTK2/metase-gtk2.glade UI/GTK2/metase-gtk2.gladep
 
 man_MANS = Collect/pinot-collect.1 Search/pinot-search.1 UI/GTK2/src/pinot.1
 
 install-data-local:
 	$(mkinstalldirs) $(DESTDIR)$(datadir)/pinot
+	$(INSTALL_DATA) globalconfig.xml $(DESTDIR)$(datadir)/pinot/globalconfig.xml
 	$(INSTALL_DATA) UI/GTK2/xapian-powered.png $(DESTDIR)$(datadir)/pinot/xapian-powered.png
 	$(INSTALL_DATA) UI/GTK2/metase-gtk2.glade $(DESTDIR)$(datadir)/pinot/metase-gtk2.glade
 	$(INSTALL_DATA) UI/GTK2/metase-gtk2.gladep $(DESTDIR)$(datadir)/pinot/metase-gtk2.gladep

Added: trunk/globalconfig.xml
===================================================================
--- trunk/globalconfig.xml	2006-06-15 15:27:13 UTC (rev 317)
+++ trunk/globalconfig.xml	2006-06-16 00:19:19 UTC (rev 318)
@@ -0,0 +1,30 @@
+<?xml version="1.0"?>
+<pinot>
+  <!--
+  The cache element describes a cache provider.
+  Cache providers are listed when a result is selected and the View Cache
+   menuitem is clicked.
+  The location field should be a valid URL with one or more arguments.
+  Supported arguments are :
+    %url	the full URL, eg http://pinot.berlios.de/download.html
+    %url0	the URL without protocol, eg pinot.berlios.de/download.html
+  -->
+  <cache>
+    <name>Google</name>
+    <location>http://www.google.com/search?q=cache:%url0</location>
+    <protocols>http, https</protocols>
+  </cache>
+  <cache>
+    <name>WayBack Machine</name>
+    <location>http://web.archive.org/web/*/%url</location>
+    <protocols>http, https</protocols>
+  </cache>
+  <!--
+  MirrorDot is only useful for slashdotted sites
+  <cache>
+    <name>MirrorDot</name>
+    <location>http://www.mirrordot.com/find-mirror.html?%url</location>
+    <protocols>http, https</protocols>
+  </cache>
+  -->
+</pinot>

Modified: trunk/pinot.spec.in
===================================================================
--- trunk/pinot.spec.in	2006-06-15 15:27:13 UTC (rev 317)
+++ trunk/pinot.spec.in	2006-06-16 00:19:19 UTC (rev 318)
@@ -23,7 +23,7 @@
 Summary: Tokenizers for Pinot that handle various text document formats
 Group: Applications/Internet
 Requires: %{name} = %{version}
-Requires: /usr/bin/unzip, /usr/bin/pdftohtml, antiword, unrtf
+Requires: unzip, poppler-utils, antiword, unrtf
 Obsoletes: pinot-pdf, pinot-word
 
 %description text-docs 
@@ -71,6 +71,7 @@
 %{_bindir}/pinot
 %ghost %{_bindir}/pinot-collect
 %{_bindir}/pinot-search
+%{_datadir}/pinot/globalconfig.xml
 %{_datadir}/pinot/xapian-powered.png
 %{_datadir}/pinot/metase-gtk2.glade
 %{_datadir}/pinot/metase-gtk2.gladep



From fabricecolin at berlios.de  Fri Jun 16 13:14:59 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Fri, 16 Jun 2006 13:14:59 +0200
Subject: [Pinot-svn] r319 - trunk/UI/GTK2/src
Message-ID: <200606161114.k5GBExGs003068@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-16 13:14:55 +0200 (Fri, 16 Jun 2006)
New Revision: 319

Modified:
   trunk/UI/GTK2/src/mainWindow.cc
   trunk/UI/GTK2/src/propertiesDialog.cc
   trunk/UI/GTK2/src/propertiesDialog.hh
Log:
Allow to change the language of several documents at once.


Modified: trunk/UI/GTK2/src/mainWindow.cc
===================================================================
--- trunk/UI/GTK2/src/mainWindow.cc	2006-06-16 00:19:19 UTC (rev 318)
+++ trunk/UI/GTK2/src/mainWindow.cc	2006-06-16 11:14:55 UTC (rev 319)
@@ -1800,7 +1800,7 @@
 	DocumentInfo docInfo;
 	unsigned int docId = 0;
 	int width, height;
-	bool matchedLabel = false, editTitle = false;
+	bool matchedLabel = false, editDocument = false;
 
 #ifdef DEBUG
 	cout << "mainWindow::on_showfromindex_activate: called" << endl;
@@ -1841,7 +1841,7 @@
 	// If there's only one document selected, get its labels
 	if (documentsList.size() == 1)
 	{
-		vector<IndexedDocument>::const_iterator docIter = documentsList.begin();
+		vector<IndexedDocument>::iterator docIter = documentsList.begin();
 
 		// Get the document ID
 		docId = docIter->getID();
@@ -1860,13 +1860,32 @@
 				matchedLabel = true;
 			}
 		}
-		editTitle = true;
+		editDocument = true;
 	}
-	// Else, start with a blank list
+	else
+	{
+		// If all documents are of the same language, show it
+		for (vector<IndexedDocument>::iterator docIter = documentsList.begin();
+			docIter != documentsList.end(); ++docIter)
+		{
+			if (docInfo.getLanguage().empty() == true)
+			{
+				docInfo.setLanguage(docIter->getLanguage());
+			}
+			if (docIter->getLanguage() != docInfo.getLanguage())
+			{
+				// They aren't
+				docInfo.setLanguage("");
+				break;
+			}
+		}
 
+		// Show a blank labels list
+	}
+
 	// Let the user set the labels
 	get_size(width, height);
-	propertiesDialog propertiesBox(docLabels, docInfo, editTitle);
+	propertiesDialog propertiesBox(docLabels, docInfo, editDocument);
 	propertiesBox.setHeight(height / 2);
 	propertiesBox.show();
 	if (propertiesBox.run() != RESPONSE_OK)
@@ -1874,11 +1893,17 @@
 		return;
 	}
 	const set<string> &labels = propertiesBox.getLabels();
+	string newTitle(propertiesBox.getDocumentInfo().getTitle());
+	string newLanguage(propertiesBox.getDocumentInfo().getLanguage());
+#ifdef DEBUG
+	cout << "mainWindow::on_showfromindex_activate: properties changed to "
+		<< newTitle << ", " << newLanguage << endl;
+#endif
 
 	if (index.isGood() == true)
 	{
 		// Now apply these labels to all the documents
-		for (vector<IndexedDocument>::const_iterator docIter = documentsList.begin();
+		for (vector<IndexedDocument>::iterator docIter = documentsList.begin();
 			docIter != documentsList.end(); ++docIter)
 		{
 			// Set the document's labels list
@@ -1890,24 +1915,31 @@
 		(docId > 0))
 	{
 		// Did the title or language change ?
-		string newTitle = propertiesBox.getDocumentInfo().getTitle();
-		string newLanguage = propertiesBox.getDocumentInfo().getLanguage();
 		if ((newTitle != docInfo.getTitle()) ||
 			(newLanguage != docInfo.getLanguage()))
 		{
 			docInfo.setTitle(newTitle);
 			docInfo.setLanguage(newLanguage);
-#ifdef DEBUG
-			cout << "mainWindow::on_showfromindex_activate: properties changed to "
-				<< newTitle << ", " << newLanguage << endl;
-#endif
-			
+
 			// Update the document
 			start_thread(new UpdateDocumentThread(indexName, docId, docInfo));
 		}
 	}
 	else
 	{
+		// Was the language changed ?
+		if (newLanguage.empty() == false)
+		{
+			// Update all documents
+			for (vector<IndexedDocument>::iterator docIter = documentsList.begin();
+				docIter != documentsList.end(); ++docIter)
+			{
+				docIter->setLanguage(newLanguage);
+
+				start_thread(new UpdateDocumentThread(indexName, docIter->getID(), *docIter));
+			}
+		}
+
 		if (labelName.empty() == false)
 		{
 			// The current label may have been applied to or removed from

Modified: trunk/UI/GTK2/src/propertiesDialog.cc
===================================================================
--- trunk/UI/GTK2/src/propertiesDialog.cc	2006-06-16 00:19:19 UTC (rev 318)
+++ trunk/UI/GTK2/src/propertiesDialog.cc	2006-06-16 11:14:55 UTC (rev 319)
@@ -34,6 +34,9 @@
 	m_editDocument(editDocument),
 	m_docInfo(docInfo)
 {
+	string language(docInfo.getLanguage());
+	bool notALanguageName = false;
+
 	// Associate the columns model to the language combo
 	m_refLanguageTree = ListStore::create(m_languageColumns);
 	languageCombobox->set_model(m_refLanguageTree);
@@ -50,19 +53,28 @@
 	if (m_editDocument == true)
 	{
 		titleEntry->set_text(to_utf8(docInfo.getTitle()));
-		populate_languageCombobox(docInfo.getLanguage());
 		typeEntry->set_text(to_utf8(docInfo.getType()));
+		if (language.empty() == true)
+		{
+			language = _("Unknown");
+			notALanguageName = true;
+		}
 	}
 	else
 	{
+		if (language.empty() == true)
+		{
+			language = _("Per document"); 
+			notALanguageName = true;
+		}
+
 		titleLabel->hide();
 		titleEntry->hide();
-		languageLabel->hide();
-		languageCombobox->hide();
 		typeLabel->hide();
 		typeEntry->hide();
 	}
 
+	populate_languageCombobox(language, notALanguageName);
 	populate_labelsTreeview(docLabels);
 }
 
@@ -70,18 +82,19 @@
 {
 }
 
-void propertiesDialog::populate_languageCombobox(string language)
+void propertiesDialog::populate_languageCombobox(const string &language, bool notALanguageName)
 {
 	TreeModel::iterator iter;
 	TreeModel::Row row;
 	unsigned int languageStart = 0;
 
-	if (language.empty() == true)
+	if (notALanguageName == true)
 	{
 		iter = m_refLanguageTree->append();
 		row = *iter;
 
-		row[m_languageColumns.m_name] = _("Unknown");
+		// This is not a language name as such
+		row[m_languageColumns.m_name] = language;
 		languageCombobox->set_active(0);
 		languageStart = 1;
 	}
@@ -94,7 +107,8 @@
 		row = *iter;
 		row[m_languageColumns.m_name] = languageName;
 
-		if (languageName == language)
+		if ((notALanguageName == false) &&
+			(languageName == language))
 		{
 			languageCombobox->set_active(languageNum + languageStart);
 		}
@@ -162,28 +176,28 @@
 
 void propertiesDialog::on_labelOkButton_clicked()
 {
+	unsigned int languageStart = 0;
 	if (m_editDocument == true)
 	{
-		unsigned int languageStart = 0;
-
 		// Title
 		m_docInfo.setTitle(from_utf8(titleEntry->get_text()));
+	}
 
-		// Language
-		if (m_docInfo.getLanguage().empty() == true)
-		{
-			languageStart = 1;
-		}
-		int chosenLanguage = languageCombobox->get_active_row_number();
-		if (chosenLanguage >= languageStart)
-		{
-			TreeModel::iterator iter = languageCombobox->get_active();
-			TreeModel::Row row = *iter;
-			string languageName = from_utf8(row[m_languageColumns.m_name]);
+	// Did we add an extra string to the languages list ?
+	if (m_docInfo.getLanguage().empty() == true)
+	{
+		languageStart = 1;
+	}
+	int chosenLanguage = languageCombobox->get_active_row_number();
+	if (chosenLanguage >= languageStart)
+	{
+		TreeModel::iterator iter = languageCombobox->get_active();
+		TreeModel::Row row = *iter;
+		string languageName = from_utf8(row[m_languageColumns.m_name]);
 
-			m_docInfo.setLanguage(languageName);
-		}
+		m_docInfo.setLanguage(languageName);
 	}
+
 	// Go through the labels tree
 	TreeModel::Children children = m_refLabelsTree->children();
 	if (children.empty() == false)

Modified: trunk/UI/GTK2/src/propertiesDialog.hh
===================================================================
--- trunk/UI/GTK2/src/propertiesDialog.hh	2006-06-16 00:19:19 UTC (rev 318)
+++ trunk/UI/GTK2/src/propertiesDialog.hh	2006-06-16 11:14:55 UTC (rev 319)
@@ -48,7 +48,7 @@
 	bool m_editDocument;
 	DocumentInfo m_docInfo;
 
-	void populate_languageCombobox(std::string language);
+	void populate_languageCombobox(const std::string &language, bool notALanguageName);
 
 	void populate_labelsTreeview(const std::set<std::string> &docLabels);
 



From fabricecolin at berlios.de  Fri Jun 16 15:21:50 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Fri, 16 Jun 2006 15:21:50 +0200
Subject: [Pinot-svn] r320 - trunk/UI/GTK2/src
Message-ID: <200606161321.k5GDLo2b013726@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-16 15:21:48 +0200 (Fri, 16 Jun 2006)
New Revision: 320

Modified:
   trunk/UI/GTK2/src/MboxHandler.cpp
   trunk/UI/GTK2/src/MboxHandler.h
Log:
Stopped using temporary labels to make lists of messages.


Modified: trunk/UI/GTK2/src/MboxHandler.cpp
===================================================================
--- trunk/UI/GTK2/src/MboxHandler.cpp	2006-06-16 11:14:55 UTC (rev 319)
+++ trunk/UI/GTK2/src/MboxHandler.cpp	2006-06-16 13:21:48 UTC (rev 320)
@@ -47,7 +47,7 @@
 }
 
 bool MboxHandler::checkMailAccount(const string &fileName, PinotSettings::MailAccount &mailAccount,
-		off_t &previousSize)
+	off_t &previousSize)
 {
 	struct stat fileStat;
 
@@ -96,10 +96,47 @@
 	return true;
 }
 
+bool MboxHandler::indexMessages(const string &fileName, PinotSettings::MailAccount &mailAccount,
+	off_t mboxOffset)
+{
+	string sourceLabel("mailbox://");
+
+	// Come up with a label for this mbox file's messages
+	sourceLabel += fileName;
+
+	// Get the mail index
+	XapianIndex index(PinotSettings::getInstance().m_mailIndexLocation);
+	if (index.isGood() == false)
+	{
+		cerr << "MboxHandler::indexMessages: couldn't get mail index" << endl;
+		return false;
+	}
+
+	// Get a parser
+	MboxParser boxParser(fileName, mboxOffset);
+
+	bool indexedFile = parseMailAccount(boxParser, &index,
+		mailAccount.m_lastMessageTime, sourceLabel);
+
+	// Flush the index
+	index.flush();
+
+	// Update this mail account in the list
+	set<PinotSettings::MailAccount> &mailAccounts = PinotSettings::getInstance().m_mailAccounts;
+	set<PinotSettings::MailAccount>::iterator mailIter = mailAccounts.find(mailAccount);
+	if (mailIter != mailAccounts.end())
+	{
+		mailAccounts.erase(mailIter);
+	}
+	mailAccounts.insert(mailAccount);
+
+	return indexedFile;
+}
+
 bool MboxHandler::parseMailAccount(MboxParser &boxParser, IndexInterface *pIndex,
-	time_t &lastMessageTime,
-	const string &tempSourceLabel, const string &sourceLabel)
+	time_t &lastMessageTime, const string &sourceLabel)
 {
+	set<unsigned int> docIdList;
 	bool indexedFile = false;
 
 	if (pIndex == NULL)
@@ -107,14 +144,21 @@
 		return false;
 	}
 
-	// Parse the mbox file
 #ifdef DEBUG
 	Timer timer;
 	timer.start();
 #endif
+	set<string> labels;
 	const Document *pMessage = boxParser.getDocument();
 	unsigned int docNum = 0;
 
+	// Get a list of documents labeled with this source label
+	pIndex->listDocumentsWithLabel(sourceLabel, docIdList); 
+
+	// This is the labels we'll apply to new documents
+	labels.insert(sourceLabel);
+
+	// Parse the mbox file
 	while (pMessage != NULL)
 	{
 		// Has this message already been indexed ?
@@ -133,9 +177,6 @@
 				break;	
 			}
 
-			set<string> labels;
-			labels.insert(tempSourceLabel);
-
 			unsigned int docId = 0;
 			indexedFile = pIndex->indexDocument(*pTokenizer, labels, docId);
 			if (indexedFile == true)
@@ -170,22 +211,11 @@
 			cout << "MboxHandler::parseMailAccount: already indexed message "
 				<< docNum << ", document ID " << docId << endl;
 #endif
-			if (sourceLabel.empty() == false)
+			set<unsigned int>::iterator docIter = docIdList.find(docId);
+			if (docIter != docIdList.end())
 			{
-				set<string> labels;
-
-				// Get the message's labels
-				pIndex->getDocumentLabels(docId, labels);
-				// The source label must have been applied to the message when originally indexed
-				set<string>::iterator labelIter = labels.find(sourceLabel.c_str());
-				if (labelIter != labels.end())
-				{
-					// Erase it
-					labels.erase(labelIter);
-					// Add the temporary label
-					labels.insert(tempSourceLabel);
-					pIndex->setDocumentLabels(docId, labels);
-				}
+				// Remove this document from the list
+				docIdList.erase(docIter);
 			}
 		}
 
@@ -206,12 +236,15 @@
 		<< microsecs/1000000 << " seconds (" << microsecs << ")" << endl;
 #endif
 
+	// Any document still in the list wasn't found this time around
+	// and should be unindexed
+	deleteMessages(pIndex, docIdList);
+
 	return indexedFile;
 }
 
-bool MboxHandler::deleteMessages(IndexInterface *pIndex, const string &sourceLabel)
+bool MboxHandler::deleteMessages(IndexInterface *pIndex, set<unsigned int> &docIdList)
 {
-	set<unsigned int> docIdList;
 	bool unindexedMsgs = false;
 
 	if (pIndex == NULL)
@@ -219,23 +252,18 @@
 		return false;
 	}
 
-	// Unindex all documents labeled with this source label
-	if ((pIndex->listDocumentsWithLabel(sourceLabel, docIdList) == true) &&
-		(docIdList.empty() == false))
-	{
 #ifdef DEBUG
-		cout << "MboxHandler::deleteMessages: " << docIdList.size() << " message(s) to unindex" << endl;
+	cout << "MboxHandler::deleteMessages: " << docIdList.size() << " message(s) to unindex" << endl;
 #endif
-		for (set<unsigned int>::iterator docIter = docIdList.begin();
-			docIter != docIdList.end(); ++docIter)
-		{
+	for (set<unsigned int>::iterator docIter = docIdList.begin();
+		docIter != docIdList.end(); ++docIter)
+	{
 #ifdef DEBUG
-			cout << "MboxHandler::deleteMessages: unindexing document ID " << *docIter << endl;
+		cout << "MboxHandler::deleteMessages: unindexing document ID " << *docIter << endl;
 #endif
-			if (pIndex->unindexDocument(*docIter) == true)
-			{
-				unindexedMsgs = true;
-			}
+		if (pIndex->unindexDocument(*docIter) == true)
+		{
+			unindexedMsgs = true;
 		}
 	}
 
@@ -313,50 +341,7 @@
 		return false;
 	}
 
-	// Come up with a label for this mbox file's messages
-	string sourceLabel = "mailbox://";
-	sourceLabel += fileName;
-	string tempSourceLabel = "Temp";
-	tempSourceLabel += sourceLabel;
-
-	// Get the mail index
-	XapianIndex index(PinotSettings::getInstance().m_mailIndexLocation);
-	if (index.isGood() == false)
-	{
-		cerr << "MboxHandler::fileExists: couldn't get mail index" << endl;
-		return false;
-	}
-
-	// Get a parser
-	MboxParser boxParser(fileName);
-
-	bool indexedFile = parseMailAccount(boxParser, &index, 
-		mailAccount.m_lastMessageTime, tempSourceLabel, sourceLabel);
-
-	// Any document still labeled with this source label wasn't found
-	// this time around and should be unindexed
-	if (deleteMessages(&index, sourceLabel) == true)
-	{
-		indexedFile = true;
-	}
-
-	// Rename the temporary label for next time the mbox is parsed
-	index.deleteLabel(sourceLabel);
-	index.renameLabel(tempSourceLabel, sourceLabel);
-
-	// Flush the index
-	index.flush();
-
-	// Update this mail account in the list
-	set<PinotSettings::MailAccount> &mailAccounts = PinotSettings::getInstance().m_mailAccounts;
-	set<PinotSettings::MailAccount>::iterator mailIter = mailAccounts.find(mailAccount);
-	if (mailIter != mailAccounts.end())
-	{
-		mailAccounts.erase(mailIter);
-	}
-	mailAccounts.insert(mailAccount);
-
-	return indexedFile;
+	return indexMessages(fileName, mailAccount, 0);
 }
 
 bool MboxHandler::fileCreated(const string &fileName)
@@ -393,44 +378,7 @@
 	// Chances are new messages were added but none removed
 	mboxOffset = previousSize;
 
-	// Come up with a label for this mbox file's messages
-	string sourceLabel = "mailbox://";
-	sourceLabel += fileName;
-
-	// Get the mail index
-	XapianIndex index(PinotSettings::getInstance().m_mailIndexLocation);
-	if (index.isGood() == false)
-	{
-		cerr << "MboxHandler::fileModified: couldn't get mail index" << endl;
-		return false;
-	}
-
-	// Get a parser
-	MboxParser boxParser(fileName, mboxOffset);
-
-	bool indexedFile = parseMailAccount(boxParser, &index,
-		mailAccount.m_lastMessageTime, sourceLabel, "");
-	if (indexedFile == true)
-	{
-		// Do not attempt to find out if some of the messages were removed
-		// Some messages may also be indexed twice now, eg if another message
-		// was inserted and changed offsets
-		// Let the next fileExists() deal with it and clean up the whole thing
-
-		// Flush the index
-		index.flush();
-	}
-
-	// Update this mail account in the list
-	set<PinotSettings::MailAccount> &mailAccounts = PinotSettings::getInstance().m_mailAccounts;
-	set<PinotSettings::MailAccount>::iterator mailIter = mailAccounts.find(mailAccount);
-	if (mailIter != mailAccounts.end())
-	{
-		mailAccounts.erase(mailIter);
-	}
-	mailAccounts.insert(mailAccount);
-
-	return indexedFile;
+	return indexMessages(fileName, mailAccount, mboxOffset);
 }
 
 bool MboxHandler::fileMoved(const string &fileName)
@@ -441,8 +389,11 @@
 
 bool MboxHandler::fileDeleted(const string &fileName)
 {
-	string sourceLabel = string("mailbox://") + fileName;
+	set<unsigned int> docIdList;
+	string sourceLabel(string("mailbox://"));
 
+	sourceLabel += fileName;
+
 	// Get the mail index
 	XapianIndex index(PinotSettings::getInstance().m_mailIndexLocation);
 	if (index.isGood() == false)
@@ -451,9 +402,11 @@
 		return false;
 	}
 
-	// Unindex all documents labeled with this source label
-	if (deleteMessages(&index, sourceLabel) == true)
+	// Get a list of documents labeled with this source label
+	if (index.listDocumentsWithLabel(sourceLabel, docIdList) == true)
 	{
+		// Unindex all documents labeled with this source label
+		deleteMessages(&index, docIdList); 
 		// Delete the label
 		index.deleteLabel(sourceLabel);
 

Modified: trunk/UI/GTK2/src/MboxHandler.h
===================================================================
--- trunk/UI/GTK2/src/MboxHandler.h	2006-06-16 11:14:55 UTC (rev 319)
+++ trunk/UI/GTK2/src/MboxHandler.h	2006-06-16 13:21:48 UTC (rev 320)
@@ -20,7 +20,6 @@
 #include <time.h>
 #include <string>
 #include <set>
-#include <map>
 #include <sigc++/slot.h>
 
 #include "IndexedDocument.h"
@@ -61,11 +60,13 @@
 		bool checkMailAccount(const std::string &fileName, PinotSettings::MailAccount &mailAccount,
 			off_t &previousSize);
 
+		bool indexMessages(const std::string &fileName, PinotSettings::MailAccount &mailAccount,
+			off_t mboxOffset);
+
 		bool parseMailAccount(MboxParser &boxParser, IndexInterface *pIndex,
-			time_t &lastMessageTime, const std::string &tempSourceLabel,
-			const std::string &sourceLabel);
+			time_t &lastMessageTime, const std::string &sourceLabel);
 
-		bool deleteMessages(IndexInterface *pIndex, const std::string &sourceLabel);
+		bool deleteMessages(IndexInterface *pIndex, std::set<unsigned int> &docIdList);
 
 	private:
 		MboxHandler(const MboxHandler &other);



From fabricecolin at berlios.de  Fri Jun 16 15:36:03 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Fri, 16 Jun 2006 15:36:03 +0200
Subject: [Pinot-svn] r321 - trunk/Tokenize
Message-ID: <200606161336.k5GDa3Pr031277@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-16 15:36:02 +0200 (Fri, 16 Jun 2006)
New Revision: 321

Modified:
   trunk/Tokenize/PdfTokenizer.cpp
   trunk/Tokenize/PdfTokenizer.h
Log:
Switched to pdftotext, which seems to support more files than pdftohtml.


Modified: trunk/Tokenize/PdfTokenizer.cpp
===================================================================
--- trunk/Tokenize/PdfTokenizer.cpp	2006-06-16 13:21:48 UTC (rev 320)
+++ trunk/Tokenize/PdfTokenizer.cpp	2006-06-16 13:36:02 UTC (rev 321)
@@ -38,23 +38,13 @@
 }
 
 PdfTokenizer::PdfTokenizer(const Document *pDocument) :
-	HtmlTokenizer(NULL, false)
+	Tokenizer(NULL)
 {
-	Document *pHtmlDocument = runHelperProgram(pDocument, "pdftohtml -stdout");
-	if (pHtmlDocument != NULL)
+	Document *pTextDocument = runHelperProgram(pDocument, "pdftotext", "-");
+	if (pTextDocument != NULL)
 	{
-		if (parseHTML(pHtmlDocument) == true)
-		{
-			// Pass the result to the parent class
-			Document *pStrippedDoc = new Document(pHtmlDocument->getTitle(),
-				pHtmlDocument->getLocation(), pHtmlDocument->getType(),
-				pHtmlDocument->getLanguage());
-			pStrippedDoc->setData(m_state.m_text.c_str(), m_state.m_text.length());
-
-			setDocument(pStrippedDoc);
-		}
-
-		delete pHtmlDocument;
+		// Pass the result to the parent class
+		setDocument(pTextDocument);
 	}
 }
 

Modified: trunk/Tokenize/PdfTokenizer.h
===================================================================
--- trunk/Tokenize/PdfTokenizer.h	2006-06-16 13:21:48 UTC (rev 320)
+++ trunk/Tokenize/PdfTokenizer.h	2006-06-16 13:36:02 UTC (rev 321)
@@ -21,14 +21,14 @@
 #include <set>
 
 #include "Document.h"
-#include "HtmlTokenizer.h"
+#include "Tokenizer.h"
 
 /// This returns the MIME types supported by the library's tokenizer.
 bool getTokenizerTypes(std::set<std::string> &types);
 /// This returns a pointer to a Tokenizer, allocated with new.
 Tokenizer *getTokenizer(const Document *pDocument);
 
-class PdfTokenizer : public HtmlTokenizer
+class PdfTokenizer : public Tokenizer
 {
 	public:
 		PdfTokenizer(const Document *pDocument);



From fabricecolin at berlios.de  Fri Jun 16 18:06:55 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Fri, 16 Jun 2006 18:06:55 +0200
Subject: [Pinot-svn] r322 - trunk/Index
Message-ID: <200606161606.k5GG6tA8029555@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-16 18:06:53 +0200 (Fri, 16 Jun 2006)
New Revision: 322

Modified:
   trunk/Index/IndexInterface.h
   trunk/Index/XapianIndex.cpp
   trunk/Index/XapianIndex.h
Log:
Index can obtain expand terms based on one or more documents. This should be
useful for a "more like this"-type feature.


Modified: trunk/Index/IndexInterface.h
===================================================================
--- trunk/Index/IndexInterface.h	2006-06-16 13:36:02 UTC (rev 321)
+++ trunk/Index/IndexInterface.h	2006-06-16 16:06:53 UTC (rev 322)
@@ -72,9 +72,12 @@
 		/// Unindexes documents with the given label.
 		virtual bool unindexDocuments(const std::string &labelName) = 0;
 
-		/// Suggests terms.
+		/// Gets terms with the same root.
 		virtual unsigned int getCloseTerms(const std::string &term, std::set<std::string> &suggestions) = 0;
 
+		/// Gets expand terms.
+		virtual unsigned int getExpandTerms(const std::set<unsigned int> &docIds, std::set<std::string> &suggestions) = 0;
+
 		/// Renames a label.
 		virtual bool renameLabel(const std::string &name, const std::string &newName) = 0;
 

Modified: trunk/Index/XapianIndex.cpp
===================================================================
--- trunk/Index/XapianIndex.cpp	2006-06-16 13:36:02 UTC (rev 321)
+++ trunk/Index/XapianIndex.cpp	2006-06-16 16:06:53 UTC (rev 322)
@@ -922,7 +922,7 @@
 	return unindexed;
 }
 
-/// Suggests terms.
+/// Gets terms with the same root.
 unsigned int XapianIndex::getCloseTerms(const string &term, set<string> &suggestions)
 {
 	XapianDatabase *pDatabase = XapianDatabaseFactory::getDatabase(m_databaseName, false);
@@ -979,6 +979,56 @@
 	return suggestions.size();
 }
 
+/// Gets expand terms.
+unsigned int XapianIndex::getExpandTerms(const set<unsigned int> &docIds, set<string> &suggestions)
+{
+	XapianDatabase *pDatabase = XapianDatabaseFactory::getDatabase(m_databaseName, false);
+	if (pDatabase == NULL)
+	{
+		cerr << "Bad index " << m_databaseName << endl;
+		return 0;
+	}
+
+	suggestions.clear();
+	try
+	{
+		Xapian::Database *pIndex = pDatabase->readLock();
+		if (pIndex != NULL)
+		{
+			Xapian::Enquire enquire(*pIndex);
+			Xapian::RSet relevantDocs;
+
+			for (set<unsigned int>::const_iterator docIter = docIds.begin();
+				docIter != docIds.end(); ++docIter)
+			{
+				relevantDocs.add_document(*docIter);
+			}
+
+			// Get 10 terms
+			Xapian::ESet expandTerms = enquire.get_eset(10, relevantDocs);
+			for (Xapian::ESetIterator termIter = expandTerms.begin();
+				termIter != expandTerms.end(); ++termIter)
+			{
+				if (isupper((int)((*termIter)[0])) == 0)
+				{
+					suggestions.insert(*termIter);
+				}
+			}
+		}
+	}
+	catch (const Xapian::Error &error)
+	{
+		cerr << "Couldn't get terms: " << error.get_msg() << endl;
+	}
+	catch (...)
+	{
+		cerr << "Couldn't get terms, unknown exception occured" << endl;
+	}
+	pDatabase->unlock();
+
+	return suggestions.size();
+}
+
 /// Renames a label.
 bool XapianIndex::renameLabel(const string &name, const string &newName)
 {

Modified: trunk/Index/XapianIndex.h
===================================================================
--- trunk/Index/XapianIndex.h	2006-06-16 13:36:02 UTC (rev 321)
+++ trunk/Index/XapianIndex.h	2006-06-16 16:06:53 UTC (rev 322)
@@ -66,9 +66,12 @@
 		/// Unindexes documents with the given label.
 		virtual bool unindexDocuments(const std::string &labelName);
 
-		/// Suggests terms.
+		/// Gets terms with the same root.
 		virtual unsigned int getCloseTerms(const std::string &term, std::set<std::string> &suggestions);
 
+		/// Gets expand terms.
+		virtual unsigned int getExpandTerms(const std::set<unsigned int> &docIds, std::set<std::string> &suggestions);
+
 		/// Renames a label.
 		virtual bool renameLabel(const std::string &name, const std::string &newName);
 



From fabricecolin at berlios.de  Wed Jun 21 15:31:39 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Wed, 21 Jun 2006 15:31:39 +0200
Subject: [Pinot-svn] r323 - trunk/UI/GTK2/src
Message-ID: <200606211331.k5LDVdFM020111@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-21 15:31:38 +0200 (Wed, 21 Jun 2006)
New Revision: 323

Modified:
   trunk/UI/GTK2/src/ResultsTree.cpp
   trunk/UI/GTK2/src/ResultsTree.h
Log:
View results on double-click. Removed checkSelection() method.


Modified: trunk/UI/GTK2/src/ResultsTree.cpp
===================================================================
--- trunk/UI/GTK2/src/ResultsTree.cpp	2006-06-16 16:06:53 UTC (rev 322)
+++ trunk/UI/GTK2/src/ResultsTree.cpp	2006-06-21 13:31:38 UTC (rev 323)
@@ -286,23 +286,7 @@
 #ifdef DEBUG
 		cout << "ResultsTree::onButtonPressEvent: double click on button " << ev->button << endl;
 #endif
-		// Get the selected result, if any
-		TreeModel::iterator iter = get_selection()->get_selected();
-		if (iter)
-		{
-			TreeModel::Path resultPath = m_refStore->get_path(iter);
-			// Is the row already expanded ?
-			if (row_expanded(resultPath) == false)
-			{
-				// Expand it
-				expand_row(resultPath, true);
-			}
-			else
-			{
-				// Collapse it
-				collapse_row(resultPath);
-			}
-		}
+		m_signalViewResults();
 	}
 }
 
@@ -319,15 +303,9 @@
 
 	m_indexNames.clear();
 
-	if (path_currently_selected == true)
+	if (path_currently_selected == false)
 	{
 #ifdef DEBUG
-		cout << "ResultsTree::onSelectionSelect: unselected entry " << row[m_resultsColumns.m_text] << endl;
-#endif
-	}
-	else
-	{
-#ifdef DEBUG
 		cout << "ResultsTree::onSelectionSelect: selected entry " << row[m_resultsColumns.m_text] << endl;
 #endif
 
@@ -449,7 +427,6 @@
 	const vector<Result> &resultsList, const string &charset, bool groupBySearchEngine)
 {
 	std::map<string, TreeModel::iterator> updatedGroups;
-	string registeredEngineName(engineName);
 	string queryName(queryProps.getName());
 	string language(queryProps.getLanguage());
 	string labelName(queryProps.getLabelName());
@@ -459,9 +436,6 @@
 	// Get this query's terms
 	queryProps.getTerms(m_queryTerms);
 
-	// Unselect all
-	get_selection()->unselect_all();
-
 	// What's the grouping criteria ?
 	if (groupBySearchEngine == true)
 	{
@@ -476,26 +450,26 @@
 
 	// Find out what the search engine ID is
 	unsigned int indexId = 0;
-	unsigned int engineId = m_settings.getEngineId(registeredEngineName);
+	unsigned int engineId = m_settings.getEngineId(engineName);
 	if (engineId == 0)
 	{
 		// Chances are this engine is an index
-		std::map<string, string>::const_iterator mapIter = m_settings.getIndexes().find(registeredEngineName);
+		std::map<string, string>::const_iterator mapIter = m_settings.getIndexes().find(engineName);
 		if (mapIter != m_settings.getIndexes().end())
 		{
 			// Yes, it is
-			indexId = m_settings.getIndexId(registeredEngineName);
+			indexId = m_settings.getIndexId(engineName);
 			engineId = m_settings.getEngineId("Xapian");
 #ifdef DEBUG
-			cout << "ResultsTree::addResults: engine is index " << registeredEngineName << endl;
+			cout << "ResultsTree::addResults: engine is index " << engineName << endl;
 #endif
 		}
 #ifdef DEBUG
-		else cout << "ResultsTree::addResults: " << registeredEngineName << " is not an index" <<  endl;
+		else cout << "ResultsTree::addResults: " << engineName << " is not an index" <<  endl;
 #endif
 	}
 #ifdef DEBUG
-	cout << "ResultsTree::addResults: ID for engine " << registeredEngineName << " is " << engineId <<  endl;
+	cout << "ResultsTree::addResults: ID for engine " << engineName << " is " << engineId <<  endl;
 #endif
 
 	QueryHistory history(m_settings.m_historyDatabase);
@@ -528,7 +502,7 @@
 		}
 		else
 		{
-			groupName = registeredEngineName;
+			groupName = engineName;
 		}
 
 		// Add the group or get its position if it's already in
@@ -540,19 +514,19 @@
 
 			// Has the result's ranking changed ?
 			float oldestScore = 0;
-			float previousScore = history.hasItem(queryName, registeredEngineName,
+			float previousScore = history.hasItem(queryName, engineName,
 				location, oldestScore);
 			if (previousScore > 0)
 			{
 				// Update this result whatever the current and previous rankings were
-				history.updateItem(queryName, registeredEngineName, location,
+				history.updateItem(queryName, engineName, location,
 					title, extract, language, currentScore);
 				rankDiff = (int)(currentScore - previousScore);
 			}
 			else
 			{
 				// No, this is a new result
-				history.insertItem(queryName, registeredEngineName, location,
+				history.insertItem(queryName, engineName, location,
 					resultIter->getTitle(), extract, language, currentScore);
 				// New results are displayed as such only if the query has already been run on the engine
 				if (isNewQuery == false)
@@ -597,7 +571,7 @@
 		{
 			// If this didn't return any result, add an empty group
 			TreeModel::iterator groupIter;
-			appendGroup(registeredEngineName, rootType, groupIter);
+			appendGroup(engineName, rootType, groupIter);
 			updateGroup(groupIter);
 
 			return true;
@@ -653,7 +627,7 @@
 	{
 		TreeModel::Row row = *iter;
 #ifdef DEBUG
-		cout << "ResultsTree::groupBySearchEngine: looking at " << row[m_resultsColumns.m_text] << endl;
+		cout << "ResultsTree::setGroupMode: looking at " << row[m_resultsColumns.m_text] << endl;
 #endif
 		ResultsModelColumns::ResultType type = row[m_resultsColumns.m_type];
 		// Skip new type rows
@@ -684,7 +658,7 @@
 				{
 					Url urlObj(url);
 #ifdef DEBUG
-					cout << "ResultsTree::groupBySearchEngine: row " << url << endl;
+					cout << "ResultsTree::setGroupMode: row " << url << endl;
 #endif
 					string groupName = urlObj.getHost();
 					// Add group
@@ -708,7 +682,7 @@
 					if (engineNames.empty() == false)
 					{
 #ifdef DEBUG
-						cout << "ResultsTree::groupBySearchEngine: row is for " << engineNames.size() << endl;
+						cout << "ResultsTree::setGroupMode: row is for " << engineNames.size() << endl;
 #endif
 						// Are there indexes in the list ?
 						set<string>::iterator xapianIter = engineNames.find("Xapian");
@@ -726,7 +700,7 @@
 								string indexName = (*iter);
 								engineNames.insert(indexName);
 #ifdef DEBUG
-								cout << "ResultsTree::groupBySearchEngine: row is for index " << indexName << endl;
+								cout << "ResultsTree::setGroupMode: row is for index " << indexName << endl;
 #endif
 							}
 						}
@@ -760,7 +734,7 @@
 									engineId, indexId,
 									newIter, &(*groupIter), true);
 #ifdef DEBUG
-								cout << "ResultsTree::groupBySearchEngine: row for " << *iter << endl;
+								cout << "ResultsTree::setGroupMode: row for " << *iter << endl;
 #endif
 							}
 						}
@@ -802,40 +776,6 @@
 }
 
 //
-// Determines if results are selected.
-//
-bool ResultsTree::checkSelection(void)
-{
-	bool goodSel = true;
-
-#ifdef DEBUG
-	cout << "ResultsTree::checkSelection: called" << endl;
-#endif
-	list<TreeModel::Path> selectedItems = get_selection()->get_selected_rows();
-	if (selectedItems.empty() == true)
-	{
-		return false;
-	}
-
-	// Go through selected items
-	for (list<TreeModel::Path>::iterator itemPath = selectedItems.begin();
-		itemPath != selectedItems.end(); ++itemPath)
-	{
-		TreeModel::iterator iter = m_refStore->get_iter(*itemPath);
-		TreeModel::Row row = *iter;
-
-		// Check only results are selected
-		ResultsModelColumns::ResultType type = row[m_resultsColumns.m_type];
-		if (type != ResultsModelColumns::RESULT_TITLE)
-		{
-			goodSel = false;
-		}
-	}
-
-	return goodSel;
-}
-
-//
 // Gets the first selected item.
 //
 Result ResultsTree::getFirstSelection(void)
@@ -872,6 +812,11 @@
 		TreeModel::iterator iter = m_refStore->get_iter(*itemPath);
 		TreeModel::Row row = *iter;
 
+		if (row[m_resultsColumns.m_type] != ResultsModelColumns::RESULT_TITLE)
+		{
+			continue;
+		}
+
 		resultsList.push_back(DocumentInfo(from_utf8(row[m_resultsColumns.m_text]),
 			from_utf8(row[m_resultsColumns.m_url]),
 			"", from_utf8(row[m_resultsColumns.m_language])));
@@ -901,6 +846,11 @@
 		TreeModel::iterator iter = m_refStore->get_iter(*itemPath);
 		TreeModel::Row row = *iter;
 
+		if (row[m_resultsColumns.m_type] != ResultsModelColumns::RESULT_TITLE)
+		{
+			continue;
+		}
+
 		row[m_resultsColumns.m_viewed] = viewed;
 	}
 }
@@ -931,7 +881,7 @@
 			{
 				m_resultsGroups.erase(mapIter);
 #ifdef DEBUG
-				cout << "ResultsTree::deleteResults: erased group " << groupName << endl;
+				cout << "ResultsTree::deleteSelection: erased group " << groupName << endl;
 #endif
 			}
 		}
@@ -966,6 +916,78 @@
 }
 
 //
+// Deletes results.
+//
+bool ResultsTree::deleteResults(QueryProperties &queryProps, const string &engineName)
+{
+	ustring queryName(queryProps.getName());
+	unsigned int indexId = 0;
+	unsigned int engineId = m_settings.getEngineId(engineName);
+	unsigned int count = 0;
+
+	if (engineId == 0)
+	{
+		// Chances are this engine is an index
+		std::map<string, string>::const_iterator mapIter = m_settings.getIndexes().find(engineName);
+		if (mapIter != m_settings.getIndexes().end())
+		{
+			// Yes, it is
+			indexId = m_settings.getIndexId(engineName);
+			engineId = m_settings.getEngineId("Xapian");
+		}
+	}
+
+	TreeModel::Children groups = m_refStore->children();
+	for (TreeModel::Children::iterator parentIter = groups.begin();
+		parentIter != groups.end(); ++parentIter)
+	{
+		TreeModel::Row row = *parentIter;
+
+		if ((row[m_resultsColumns.m_type] != ResultsModelColumns::RESULT_ROOT) &&
+			(row[m_resultsColumns.m_type] != ResultsModelColumns::RESULT_HOST))
+		{
+			continue;
+		}
+
+		TreeModel::Children children = parentIter->children();
+		TreeModel::Children::iterator iter = children.begin();
+		while (iter != children.end())
+		{
+			row = *iter;
+
+			if ((row[m_resultsColumns.m_type] == ResultsModelColumns::RESULT_TITLE) &&
+				(row[m_resultsColumns.m_queryName] == queryName) &&
+				(row[m_resultsColumns.m_engines] == engineId) &&
+				(row[m_resultsColumns.m_indexes] == indexId))
+			{
+				TreeModel::Children::iterator nextIter = iter;
+				++nextIter;
+				++count;
+
+				// Erase this row
+				m_refStore->erase(*iter);
+				iter = nextIter;
+				continue;
+			}
+
+			// Next
+			++iter;
+		}
+	}
+
+	if (count > 0)
+	{
+		onSelectionChanged();
+#ifdef DEBUG
+		cout << "ResultsTree::deleteResults: erased " << count << " rows" << endl;
+#endif
+		return true;
+	}
+
+	return false;
+}
+
+//
 // Refreshes the tree.
 //
 void ResultsTree::refresh(void)
@@ -1038,6 +1060,14 @@
 }
 
 //
+// Returns the view results signal.
+//
+Signal0<void>& ResultsTree::getViewResultsSignal(void)
+{
+	return m_signalViewResults;
+}
+
+//
 // Adds a new row in the results tree.
 //
 bool ResultsTree::appendResult(const ustring &text, const ustring &url,
@@ -1060,8 +1090,8 @@
 			TreeModel::Children children = parentRow->children();
 			if (children.empty() == false)
 			{
-				TreeModel::Children::iterator childIter = children.begin();
-				for (; childIter != children.end(); ++childIter)
+				for (TreeModel::Children::iterator childIter = children.begin();
+					childIter != children.end(); ++childIter)
 				{
 					TreeModel::Row row = *childIter;
 					if ((row[m_resultsColumns.m_url] == to_utf8(url)) &&
@@ -1118,8 +1148,8 @@
 //
 // Adds a results group
 //
-bool ResultsTree::appendGroup(const string &groupName,
-	ResultsModelColumns::ResultType groupType, TreeModel::iterator &groupIter)
+bool ResultsTree::appendGroup(const string &groupName, ResultsModelColumns::ResultType groupType,
+	TreeModel::iterator &groupIter)
 {
 	bool success = false;
 
@@ -1131,8 +1161,8 @@
 		groupIter = m_refStore->append();
 		TreeModel::Row groupRow = *groupIter;
 		updateRow(groupRow, to_utf8(groupName),
-				"", "", "", "", 0, 0, groupType,
-				false, false, false);
+			"", "", "", "", 0, 0, groupType,
+			false, false, false);
 
 		// Update the map
 		m_resultsGroups[groupName] = groupIter;

Modified: trunk/UI/GTK2/src/ResultsTree.h
===================================================================
--- trunk/UI/GTK2/src/ResultsTree.h	2006-06-16 16:06:53 UTC (rev 322)
+++ trunk/UI/GTK2/src/ResultsTree.h	2006-06-21 13:31:38 UTC (rev 323)
@@ -62,9 +62,6 @@
 		/// Sets how results are grouped.
 		void setGroupMode(bool groupBySearchEngine);
 
-		/// Determines if results are selected.
-		bool checkSelection(void);
-
 		/// Gets the first selected item.
 		Result getFirstSelection(void);
 
@@ -80,6 +77,9 @@
 		  */
 		bool deleteSelection(void);
 
+		/// Deletes results.
+		bool deleteResults(QueryProperties &queryProps, const std::string &engineName);
+
 		/// Refreshes the tree.
 		void refresh(void);
 
@@ -92,12 +92,16 @@
 		/// Returns the changed selection signal.
 		SigC::Signal1<void, Glib::ustring>& getSelectionChangedSignal(void);
 
+		/// Returns the view results signal.
+		SigC::Signal0<void>& getViewResultsSignal(void);
+
 	protected:
 		Glib::ustring m_queryName;
 		Gtk::Menu *m_pPopupMenu;
 		Gtk::ScrolledWindow *m_pResultsScrolledwindow;
 		Glib::RefPtr<Gtk::TreeStore> m_refStore;
 		SigC::Signal1<void, Glib::ustring> m_signalSelectionChanged;
+		SigC::Signal0<void> m_signalViewResults;
 		PinotSettings &m_settings;
 		Glib::RefPtr<Gdk::Pixbuf> m_indexedIconPixbuf;
 		Glib::RefPtr<Gdk::Pixbuf> m_viewededIconPixbuf;



From fabricecolin at berlios.de  Thu Jun 22 12:47:51 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Thu, 22 Jun 2006 12:47:51 +0200
Subject: [Pinot-svn] r324 - in trunk: UI/GTK2/src Utils
Message-ID: <200606221047.k5MAlpjm013910@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-22 12:47:46 +0200 (Thu, 22 Jun 2006)
New Revision: 324

Modified:
   trunk/UI/GTK2/src/pinot.cc
   trunk/UI/GTK2/src/propertiesDialog.cc
   trunk/Utils/Languages.cpp
Log:
Unknown is now in the languages list. This enables to search for documents
for which language detection failed.


Modified: trunk/UI/GTK2/src/pinot.cc
===================================================================
--- trunk/UI/GTK2/src/pinot.cc	2006-06-21 13:31:38 UTC (rev 323)
+++ trunk/UI/GTK2/src/pinot.cc	2006-06-22 10:47:46 UTC (rev 324)
@@ -153,18 +153,19 @@
 	cerr.rdbuf(outputFile.rdbuf());
 
 	// Localize language names
-	Languages::setIntlName(0, _("Danish"));
-	Languages::setIntlName(1, _("Dutch"));
-	Languages::setIntlName(2, _("English"));
-	Languages::setIntlName(3, _("Finnish"));
-	Languages::setIntlName(4, _("French"));
-	Languages::setIntlName(5, _("German"));
-	Languages::setIntlName(6, _("Italian"));
-	Languages::setIntlName(7, _("Norwegian"));
-	Languages::setIntlName(8, _("Portuguese"));
-	Languages::setIntlName(9, _("Russian"));
-	Languages::setIntlName(10, _("Spanish"));
-	Languages::setIntlName(11, _("Swedish"));
+	Languages::setIntlName(0, _("Unknown"));
+	Languages::setIntlName(1, _("Danish"));
+	Languages::setIntlName(2, _("Dutch"));
+	Languages::setIntlName(3, _("English"));
+	Languages::setIntlName(4, _("Finnish"));
+	Languages::setIntlName(5, _("French"));
+	Languages::setIntlName(6, _("German"));
+	Languages::setIntlName(7, _("Italian"));
+	Languages::setIntlName(8, _("Norwegian"));
+	Languages::setIntlName(9, _("Portuguese"));
+	Languages::setIntlName(10, _("Russian"));
+	Languages::setIntlName(11, _("Spanish"));
+	Languages::setIntlName(12, _("Swedish"));
 
 	// Load search engines
 	settings.loadSearchEngines(prefixDir + string("/share/pinot/engines"));

Modified: trunk/UI/GTK2/src/propertiesDialog.cc
===================================================================
--- trunk/UI/GTK2/src/propertiesDialog.cc	2006-06-21 13:31:38 UTC (rev 323)
+++ trunk/UI/GTK2/src/propertiesDialog.cc	2006-06-22 10:47:46 UTC (rev 324)
@@ -54,11 +54,6 @@
 	{
 		titleEntry->set_text(to_utf8(docInfo.getTitle()));
 		typeEntry->set_text(to_utf8(docInfo.getType()));
-		if (language.empty() == true)
-		{
-			language = _("Unknown");
-			notALanguageName = true;
-		}
 	}
 	else
 	{
@@ -87,6 +82,7 @@
 	TreeModel::iterator iter;
 	TreeModel::Row row;
 	unsigned int languageStart = 0;
+	bool foundLanguage = false;
 
 	if (notALanguageName == true)
 	{
@@ -111,8 +107,16 @@
 			(languageName == language))
 		{
 			languageCombobox->set_active(languageNum + languageStart);
+			foundLanguage = true;
 		}
 	}
+
+	// Did we find the given language ?
+	if (foundLanguage == false)
+	{
+		// Select the first language in the list
+		languageCombobox->set_active(languageStart);
+	}
 }
 
 void propertiesDialog::populate_labelsTreeview(const set<string> &docLabels)

Modified: trunk/Utils/Languages.cpp
===================================================================
--- trunk/Utils/Languages.cpp	2006-06-21 13:31:38 UTC (rev 323)
+++ trunk/Utils/Languages.cpp	2006-06-22 10:47:46 UTC (rev 324)
@@ -24,13 +24,13 @@
 using std::pair;
 using std::min;
 
-unsigned int Languages::m_count = 12;
+unsigned int Languages::m_count = 13;
 
-char *Languages::m_names[] = {"Danish", "Dutch", "English", "Finnish", \
-	"French", "German", "Italian", "Norwegian", "Portuguese", "Russian", \
-	"Spanish", "Swedish" };
+char *Languages::m_names[] = { "Unknown", "Danish", "Dutch", "English",
+	"Finnish", "French", "German", "Italian", "Norwegian", "Portuguese",
+	"Russian", "Spanish", "Swedish" };
 
-char *Languages::m_codes[] = { "da", "nl", "en", "fi", "fr", "de", \
+char *Languages::m_codes[] = { "", "da", "nl", "en", "fi", "fr", "de", \
 	"it", "nn", "pt", "ru", "es", "sv" };
 
 map<unsigned int, string> Languages::m_intlNames;



From fabricecolin at berlios.de  Thu Jun 22 12:51:41 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Thu, 22 Jun 2006 12:51:41 +0200
Subject: [Pinot-svn] r325 - in trunk: Index Search
Message-ID: <200606221051.k5MApf9t015820@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-22 12:51:34 +0200 (Thu, 22 Jun 2006)
New Revision: 325

Modified:
   trunk/Index/IndexInterface.h
   trunk/Index/XapianIndex.cpp
   trunk/Search/SearchEngineInterface.cpp
   trunk/Search/SearchEngineInterface.h
   trunk/Search/XapianEngine.cpp
   trunk/Search/XapianEngine.h
Log:
Moved getExpandTerms() functionality to Search/XapianEngine.


Modified: trunk/Index/IndexInterface.h
===================================================================
--- trunk/Index/IndexInterface.h	2006-06-22 10:47:46 UTC (rev 324)
+++ trunk/Index/IndexInterface.h	2006-06-22 10:51:34 UTC (rev 325)
@@ -75,9 +75,6 @@
 		/// Gets terms with the same root.
 		virtual unsigned int getCloseTerms(const std::string &term, std::set<std::string> &suggestions) = 0;
 
-		/// Gets expand terms.
-		virtual unsigned int getExpandTerms(const std::set<unsigned int> &docIds, std::set<std::string> &suggestions) = 0;
-
 		/// Renames a label.
 		virtual bool renameLabel(const std::string &name, const std::string &newName) = 0;
 

Modified: trunk/Index/XapianIndex.cpp
===================================================================
--- trunk/Index/XapianIndex.cpp	2006-06-22 10:47:46 UTC (rev 324)
+++ trunk/Index/XapianIndex.cpp	2006-06-22 10:51:34 UTC (rev 325)
@@ -946,9 +946,8 @@
 				unsigned int count = 0;
 
 				// Get the next 10 terms
-				termIter.skip_to(baseTerm);
-				while ((termIter != pIndex->allterms_end()) &&
-					(count < 10))
+				for (termIter.skip_to(baseTerm);
+					(termIter != pIndex->allterms_end()) && (count < 10); ++termIter)
 				{
 					string suggestedTerm(*termIter);
 
@@ -958,10 +957,7 @@
 						break;
 					}
 					suggestions.insert(*termIter);
-
-					// Next
 					++count;
-					++termIter;
 				}
 			}
 		}
@@ -979,56 +975,6 @@
 	return suggestions.size();
 }
 
-/// Gets expand terms.
-unsigned int XapianIndex::getExpandTerms(const set<unsigned int> &docIds, set<string> &suggestions)
-{
-	XapianDatabase *pDatabase = XapianDatabaseFactory::getDatabase(m_databaseName, false);
-	if (pDatabase == NULL)
-	{
-		cerr << "Bad index " << m_databaseName << endl;
-		return 0;
-	}
-
-	suggestions.clear();
-	try
-	{
-		Xapian::Database *pIndex = pDatabase->readLock();
-		if (pIndex != NULL)
-		{
-			Xapian::Enquire enquire(*pIndex);
-			Xapian::RSet relevantDocs;
-
-			for (set<unsigned int>::const_iterator docIter = docIds.begin();
-				docIter != docIds.end(); ++docIter)
-			{
-				relevantDocs.add_document(*docIter);
-			}
-
-			// Get 10 terms
-			Xapian::ESet expandTerms = enquire.get_eset(10, relevantDocs);
-			for (Xapian::ESetIterator termIter = expandTerms.begin();
-				termIter != expandTerms.end(); ++termIter)
-			{
-				if (isupper((int)((*termIter)[0])) == 0)
-				{
-					suggestions.insert(*termIter);
-				}
-			}
-		}
-	}
-	catch (const Xapian::Error &error)
-	{
-		cerr << "Couldn't get terms: " << error.get_msg() << endl;
-	}
-	catch (...)
-	{
-		cerr << "Couldn't get terms, unknown exception occured" << endl;
-	}
-	pDatabase->unlock();
-
-	return suggestions.size();
-}
-
 /// Renames a label.
 bool XapianIndex::renameLabel(const string &name, const string &newName)
 {

Modified: trunk/Search/SearchEngineInterface.cpp
===================================================================
--- trunk/Search/SearchEngineInterface.cpp	2006-06-22 10:47:46 UTC (rev 324)
+++ trunk/Search/SearchEngineInterface.cpp	2006-06-22 10:51:34 UTC (rev 325)
@@ -34,12 +34,6 @@
 {
 }
 
-/// Indicates if the search engine is available in several languages/countries.
-bool SearchEngineInterface::isInternational(void) const
-{
-	return false;
-}
-
 /// Sets the search engine's key, if applicable.
 void SearchEngineInterface::setKey(const string &key)
 {
@@ -59,6 +53,13 @@
 	m_maxResultsCount = count;
 }
 
+/// Sets whether the query should be expanded.
+bool SearchEngineInterface::setQueryExpansion(set<unsigned int> &relevantDocuments)
+{
+	// Not all engines support this
+	return false;
+}
+
 /// Returns the results for the previous query.
 const vector<Result> &SearchEngineInterface::getResults(void) const
 {
@@ -71,6 +72,12 @@
 	return m_charset;
 }
 
+/// Returns expand terms from the previous query.
+const set<string> &SearchEngineInterface::getExpandTerms(void) const
+{
+	return m_expandTerms;
+}
+
 void SearchEngineInterface::setHostNameFilter(const string &filter)
 {
 	m_hostFilter = filter;

Modified: trunk/Search/SearchEngineInterface.h
===================================================================
--- trunk/Search/SearchEngineInterface.h	2006-06-22 10:47:46 UTC (rev 324)
+++ trunk/Search/SearchEngineInterface.h	2006-06-22 10:51:34 UTC (rev 325)
@@ -19,6 +19,7 @@
 
 #include <time.h>
 #include <string>
+#include <set>
 #include <vector>
 
 #include "QueryProperties.h"
@@ -34,9 +35,6 @@
 	public:
 		virtual ~SearchEngineInterface();
 
-		/// Indicates if the search engine is available in several languages/countries.
-		virtual bool isInternational(void) const;
-
 		/// Sets the search engine's key, if applicable.
 		virtual void setKey(const string &key);
 
@@ -46,6 +44,9 @@
 		/// Sets the maximum number of results to return.
 		virtual void setMaxResultsCount(unsigned int count);
 
+		/// Sets whether the query should be expanded.
+		virtual bool setQueryExpansion(set<unsigned int> &relevantDocuments);
+
 		/// Runs a query; true if success.
 		virtual bool runQuery(QueryProperties& queryProps) = 0;
 
@@ -55,15 +56,20 @@
 		/// Returns the charset for the previous query's results.
 		virtual string getResultsCharset(void) const;
 
+		/// Returns expand terms from the previous query.
+		virtual const set<string> &getExpandTerms(void) const;
+
 	protected:
 		string m_key;
 		unsigned int m_callsCount;
 		time_t m_startTime;
 		unsigned int m_maxResultsCount;
+		bool m_expandQueries;
 		string m_hostFilter;
 		string m_fileFilter;
 		vector<Result> m_resultsList;
 		string m_charset;
+		set<string> m_expandTerms;
 
 		SearchEngineInterface();
 

Modified: trunk/Search/XapianEngine.cpp
===================================================================
--- trunk/Search/XapianEngine.cpp	2006-06-22 10:47:46 UTC (rev 324)
+++ trunk/Search/XapianEngine.cpp	2006-06-22 10:51:34 UTC (rev 325)
@@ -20,6 +20,7 @@
 #include <string>
 #include <vector>
 #include <iostream>
+#include <algorithm>
 
 #include "Languages.h"
 #include "StringManip.h"
@@ -36,6 +37,7 @@
 using std::cout;
 using std::cerr;
 using std::endl;
+using std::inserter;
 
 static bool extractWords(const string &text, const string &stemLanguage, vector<string> &wordsList)
 {
@@ -206,6 +208,33 @@
 				}
 			}
 
+			m_expandTerms.clear();
+
+			// Expand the query ?
+			if (m_relevantDocuments.empty() == false)
+			{
+				Xapian::RSet relevantDocs;
+				unsigned int count = 0;
+
+				for (set<unsigned int>::const_iterator docIter = m_relevantDocuments.begin();
+					docIter != m_relevantDocuments.end(); ++docIter)
+				{
+					relevantDocs.add_document(*docIter);
+				}
+
+				// Get 10 non-prefixed terms
+				Xapian::ESet expandTerms = enquire.get_eset(20, relevantDocs);
+				for (Xapian::ESetIterator termIter = expandTerms.begin();
+					(termIter != expandTerms.end()) && (count < 10); ++termIter)
+				{
+					if (isupper((int)((*termIter)[0])) == 0)
+					{
+						m_expandTerms.insert(*termIter);
+						++count;
+					}
+				}
+			}
+
 			bStatus = true;
 		}
 		catch (const Xapian::Error &error)
@@ -408,6 +437,15 @@
 // Implementation of SearchEngineInterface
 //
 
+/// Sets whether the query should be expanded.
+bool XapianEngine::setQueryExpansion(set<unsigned int> &relevantDocuments)
+{
+	copy(relevantDocuments.begin(), relevantDocuments.end(),
+		inserter(m_relevantDocuments, m_relevantDocuments.begin()));
+
+        return true;
+}
+
 /// Runs a query; true if success.
 bool XapianEngine::runQuery(QueryProperties& queryProps)
 {

Modified: trunk/Search/XapianEngine.h
===================================================================
--- trunk/Search/XapianEngine.h	2006-06-22 10:47:46 UTC (rev 324)
+++ trunk/Search/XapianEngine.h	2006-06-22 10:51:34 UTC (rev 325)
@@ -18,6 +18,7 @@
 #define _XAPIAN_ENGINE_H
 
 #include <string>
+#include <set>
 #include <vector>
 #include <stack>
 
@@ -32,6 +33,9 @@
 		XapianEngine(const std::string &database);
 		virtual ~XapianEngine();
 
+		/// Sets whether the query should be expanded.
+		bool setQueryExpansion(std::set<unsigned int> &relevantDocuments);
+
 		/// Runs a boolean query; true if success.
 		virtual bool runQuery(const std::string &keyword);
 
@@ -46,6 +50,7 @@
 
 	protected:
 		std::string m_databaseName;
+		std::set<unsigned int> m_relevantDocuments;
 
 		bool queryDatabase(Xapian::Query &query);
 



From fabricecolin at berlios.de  Thu Jun 22 12:52:27 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Thu, 22 Jun 2006 12:52:27 +0200
Subject: [Pinot-svn] r326 - trunk/Index
Message-ID: <200606221052.k5MAqRjm016124@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-22 12:52:26 +0200 (Thu, 22 Jun 2006)
New Revision: 326

Modified:
   trunk/Index/XapianIndex.h
Log:
Last commit should have included this file too...


Modified: trunk/Index/XapianIndex.h
===================================================================
--- trunk/Index/XapianIndex.h	2006-06-22 10:51:34 UTC (rev 325)
+++ trunk/Index/XapianIndex.h	2006-06-22 10:52:26 UTC (rev 326)
@@ -69,9 +69,6 @@
 		/// Gets terms with the same root.
 		virtual unsigned int getCloseTerms(const std::string &term, std::set<std::string> &suggestions);
 
-		/// Gets expand terms.
-		virtual unsigned int getExpandTerms(const std::set<unsigned int> &docIds, std::set<std::string> &suggestions);
-
 		/// Renames a label.
 		virtual bool renameLabel(const std::string &name, const std::string &newName);
 



From fabricecolin at berlios.de  Thu Jun 22 12:54:33 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Thu, 22 Jun 2006 12:54:33 +0200
Subject: [Pinot-svn] r327 - in trunk/UI/GTK2: . src
Message-ID: <200606221054.k5MAsXSG016989@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-22 12:54:31 +0200 (Thu, 22 Jun 2006)
New Revision: 327

Modified:
   trunk/UI/GTK2/metase-gtk2.glade
   trunk/UI/GTK2/src/mainWindow_glade.cc
   trunk/UI/GTK2/src/mainWindow_glade.hh
Log:
Added More Like This item to the Results menu.


Modified: trunk/UI/GTK2/metase-gtk2.glade
===================================================================
--- trunk/UI/GTK2/metase-gtk2.glade	2006-06-22 10:52:26 UTC (rev 326)
+++ trunk/UI/GTK2/metase-gtk2.glade	2006-06-22 10:54:31 UTC (rev 327)
@@ -196,7 +196,7 @@
 		      <signal name="activate" handler="on_clearresults_activate" last_modification_time="Wed, 03 Mar 2004 19:51:48 GMT"/>
 
 		      <child internal-child="image">
-			<widget class="GtkImage" id="image584">
+			<widget class="GtkImage" id="image603">
 			  <property name="visible">True</property>
 			  <property name="stock">gtk-clear</property>
 			  <property name="icon_size">1</property>
@@ -235,6 +235,28 @@
 		  </child>
 
 		  <child>
+		    <widget class="GtkImageMenuItem" id="morelikethis1">
+		      <property agent="glademm" name="cxx_visibility">protected</property>
+		      <property name="visible">True</property>
+		      <property name="label" translatable="yes">More Like This</property>
+		      <property name="use_underline">True</property>
+		      <signal name="activate" handler="on_morelikethis_activate" last_modification_time="Sun, 18 Jun 2006 10:50:56 GMT"/>
+
+		      <child internal-child="image">
+			<widget class="GtkImage" id="image604">
+			  <property name="visible">True</property>
+			  <property name="stock">gtk-find</property>
+			  <property name="icon_size">1</property>
+			  <property name="xalign">0.5</property>
+			  <property name="yalign">0.5</property>
+			  <property name="xpad">0</property>
+			  <property name="ypad">0</property>
+			</widget>
+		      </child>
+		    </widget>
+		  </child>
+
+		  <child>
 		    <widget class="GtkMenuItem" id="indexresults1">
 		      <property agent="glademm" name="cxx_visibility">protected</property>
 		      <property name="visible">True</property>
@@ -276,7 +298,7 @@
 		      <signal name="activate" handler="on_import_activate" last_modification_time="Tue, 02 Mar 2004 22:13:44 GMT"/>
 
 		      <child internal-child="image">
-			<widget class="GtkImage" id="image585">
+			<widget class="GtkImage" id="image605">
 			  <property name="visible">True</property>
 			  <property name="stock">gtk-open</property>
 			  <property name="icon_size">1</property>
@@ -314,7 +336,7 @@
 		      <signal name="activate" handler="on_refreshindex_activate" last_modification_time="Fri, 20 Feb 2004 18:57:09 GMT"/>
 
 		      <child internal-child="image">
-			<widget class="GtkImage" id="image586">
+			<widget class="GtkImage" id="image606">
 			  <property name="visible">True</property>
 			  <property name="stock">gtk-refresh</property>
 			  <property name="icon_size">1</property>
@@ -336,7 +358,7 @@
 		      <signal name="activate" handler="on_unindex_activate" last_modification_time="Thu, 28 Jul 2005 12:42:23 GMT"/>
 
 		      <child internal-child="image">
-			<widget class="GtkImage" id="image587">
+			<widget class="GtkImage" id="image607">
 			  <property name="visible">True</property>
 			  <property name="stock">gtk-delete</property>
 			  <property name="icon_size">1</property>
@@ -358,7 +380,7 @@
 		      <signal name="activate" handler="on_showfromindex_activate" last_modification_time="Sun, 06 Nov 2005 08:43:05 GMT"/>
 
 		      <child internal-child="image">
-			<widget class="GtkImage" id="image588">
+			<widget class="GtkImage" id="image608">
 			  <property name="visible">True</property>
 			  <property name="stock">gtk-properties</property>
 			  <property name="icon_size">1</property>

Modified: trunk/UI/GTK2/src/mainWindow_glade.cc
===================================================================
--- trunk/UI/GTK2/src/mainWindow_glade.cc	2006-06-22 10:52:26 UTC (rev 326)
+++ trunk/UI/GTK2/src/mainWindow_glade.cc	2006-06-22 10:54:31 UTC (rev 327)
@@ -1,9 +1,9 @@
-// generated 2006/5/17 8:25:37 SGT by fabrice at amra.dyndns.org.(none)
+// generated 2006/6/22 14:44:31 SGT by fabrice at fabrix.asgent-tech.com.(none)
 // using glademm V2.12.1
 //
 // DO NOT EDIT THIS FILE ! It was created using
-// glade-- /home/fabrice/Projects/MetaSE/pinot/UI/GTK2/metase-gtk2.glade
-// for gtk 2.8.17 and gtkmm 2.8.3
+// glade-- /home/fabrice/Desktop/pinot-0.49/UI/GTK2/metase-gtk2.glade
+// for gtk 2.8.19 and gtkmm 2.8.3
 //
 // Please modify the corresponding derived classes in ./src/mainWindow.cc
 
@@ -80,8 +80,11 @@
    hostnamegroup1 = NULL;
    Gtk::Menu *groupresults1_menu = Gtk::manage(new class Gtk::Menu());
    groupresults1 = NULL;
-   Gtk::Image *image584 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-clear"), Gtk::IconSize(1)));
+   Gtk::Image *image608 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-clear"), Gtk::IconSize(1)));
    clearresults1 = NULL;
+   Gtk::MenuItem *separator4 = NULL;
+   Gtk::Image *image609 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-find"), Gtk::IconSize(1)));
+   morelikethis1 = NULL;
    Gtk::MenuItem *separator1 = NULL;
    viewresults1 = NULL;
    viewcache1 = NULL;
@@ -89,15 +92,15 @@
    Gtk::Menu *resultsMenuitem_menu = Gtk::manage(new class Gtk::Menu());
    resultsMenuitem = NULL;
    list1 = NULL;
-   Gtk::Image *image585 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-open"), Gtk::IconSize(1)));
+   Gtk::Image *image610 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-open"), Gtk::IconSize(1)));
    import1 = NULL;
    Gtk::MenuItem *separator3 = NULL;
    viewfromindex1 = NULL;
-   Gtk::Image *image586 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-refresh"), Gtk::IconSize(1)));
+   Gtk::Image *image611 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-refresh"), Gtk::IconSize(1)));
    refreshindex1 = NULL;
-   Gtk::Image *image587 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-delete"), Gtk::IconSize(1)));
+   Gtk::Image *image612 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-delete"), Gtk::IconSize(1)));
    unindex1 = NULL;
-   Gtk::Image *image588 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-properties"), Gtk::IconSize(1)));
+   Gtk::Image *image613 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-properties"), Gtk::IconSize(1)));
    showfromindex1 = NULL;
    Gtk::Menu *indexMenuitem_menu = Gtk::manage(new class Gtk::Menu());
    indexMenuitem = NULL;
@@ -183,10 +186,16 @@
    resultsMenuitem_menu->items().push_back(Gtk::Menu_Helpers::MenuElem(_("Group By"), *groupresults1_menu));
    groupresults1 = (Gtk::MenuItem *)&resultsMenuitem_menu->items().back();
    
-   resultsMenuitem_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem(_("Clear List"), *image584));
+   resultsMenuitem_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem(_("Clear List"), *image608));
    clearresults1 = (Gtk::ImageMenuItem *)&resultsMenuitem_menu->items().back();
    
    resultsMenuitem_menu->items().push_back(Gtk::Menu_Helpers::SeparatorElem());
+   separator4 = (Gtk::MenuItem *)&resultsMenuitem_menu->items().back();
+   
+   resultsMenuitem_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem(_("More Like This"), *image609));
+   morelikethis1 = (Gtk::ImageMenuItem *)&resultsMenuitem_menu->items().back();
+   
+   resultsMenuitem_menu->items().push_back(Gtk::Menu_Helpers::SeparatorElem());
    separator1 = (Gtk::MenuItem *)&resultsMenuitem_menu->items().back();
    
    resultsMenuitem_menu->items().push_back(Gtk::Menu_Helpers::MenuElem(_("Vie_w")));
@@ -201,7 +210,7 @@
    indexMenuitem_menu->items().push_back(Gtk::Menu_Helpers::MenuElem(_("List Contents Of")));
    list1 = (Gtk::MenuItem *)&indexMenuitem_menu->items().back();
    
-   indexMenuitem_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem(_("Import"), *image585));
+   indexMenuitem_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem(_("Import"), *image610));
    import1 = (Gtk::ImageMenuItem *)&indexMenuitem_menu->items().back();
    
    indexMenuitem_menu->items().push_back(Gtk::Menu_Helpers::SeparatorElem());
@@ -210,13 +219,13 @@
    indexMenuitem_menu->items().push_back(Gtk::Menu_Helpers::MenuElem(_("View")));
    viewfromindex1 = (Gtk::MenuItem *)&indexMenuitem_menu->items().back();
    
-   indexMenuitem_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem(_("Update"), *image586));
+   indexMenuitem_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem(_("Update"), *image611));
    refreshindex1 = (Gtk::ImageMenuItem *)&indexMenuitem_menu->items().back();
    
-   indexMenuitem_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem(_("Unindex"), *image587));
+   indexMenuitem_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem(_("Unindex"), *image612));
    unindex1 = (Gtk::ImageMenuItem *)&indexMenuitem_menu->items().back();
    
-   indexMenuitem_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem(_("Properties"), *image588));
+   indexMenuitem_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem(_("Properties"), *image613));
    showfromindex1 = (Gtk::ImageMenuItem *)&indexMenuitem_menu->items().back();
    
    helpMenuitem_menu->items().push_back(Gtk::Menu_Helpers::MenuElem(_("_About")));
@@ -239,16 +248,18 @@
    showextract1->set_active(true);
    searchenginegroup1->set_active(true);
    hostnamegroup1->set_active(false);
-   image584->set_alignment(0.5,0.5);
-   image584->set_padding(0,0);
-   image585->set_alignment(0.5,0.5);
-   image585->set_padding(0,0);
-   image586->set_alignment(0.5,0.5);
-   image586->set_padding(0,0);
-   image587->set_alignment(0.5,0.5);
-   image587->set_padding(0,0);
-   image588->set_alignment(0.5,0.5);
-   image588->set_padding(0,0);
+   image608->set_alignment(0.5,0.5);
+   image608->set_padding(0,0);
+   image609->set_alignment(0.5,0.5);
+   image609->set_padding(0,0);
+   image610->set_alignment(0.5,0.5);
+   image610->set_padding(0,0);
+   image611->set_alignment(0.5,0.5);
+   image611->set_padding(0,0);
+   image612->set_alignment(0.5,0.5);
+   image612->set_padding(0,0);
+   image613->set_alignment(0.5,0.5);
+   image613->set_padding(0,0);
    image439->set_alignment(0.5,0.5);
    image439->set_padding(0,0);
    addIndexButton->set_flags(Gtk::CAN_FOCUS);
@@ -381,23 +392,26 @@
    searchenginegroup1->show();
    hostnamegroup1->show();
    groupresults1->show();
-   image584->show();
+   image608->show();
    clearresults1->show();
+   separator4->show();
+   image609->show();
+   morelikethis1->show();
    separator1->show();
    viewresults1->show();
    viewcache1->show();
    indexresults1->show();
    resultsMenuitem->show();
    list1->show();
-   image585->show();
+   image610->show();
    import1->show();
    separator3->show();
    viewfromindex1->show();
-   image586->show();
+   image611->show();
    refreshindex1->show();
-   image587->show();
+   image612->show();
    unindex1->show();
-   image588->show();
+   image613->show();
    showfromindex1->show();
    indexMenuitem->show();
    about1->show();
@@ -444,6 +458,7 @@
    showextract1->signal_activate().connect(SigC::slot(*this, &mainWindow_glade::on_showextract_activate), false);
    searchenginegroup1->signal_activate().connect(SigC::slot(*this, &mainWindow_glade::on_groupresults_activate), false);
    clearresults1->signal_activate().connect(SigC::slot(*this, &mainWindow_glade::on_clearresults_activate), false);
+   morelikethis1->signal_activate().connect(SigC::slot(*this, &mainWindow_glade::on_morelikethis_activate), false);
    viewresults1->signal_activate().connect(SigC::slot(*this, &mainWindow_glade::on_viewresults_activate), false);
    indexresults1->signal_activate().connect(SigC::slot(*this, &mainWindow_glade::on_indexresults_activate), false);
    import1->signal_activate().connect(SigC::slot(*this, &mainWindow_glade::on_import_activate), false);

Modified: trunk/UI/GTK2/src/mainWindow_glade.hh
===================================================================
--- trunk/UI/GTK2/src/mainWindow_glade.hh	2006-06-22 10:52:26 UTC (rev 326)
+++ trunk/UI/GTK2/src/mainWindow_glade.hh	2006-06-22 10:54:31 UTC (rev 327)
@@ -1,9 +1,9 @@
-// generated 2006/5/17 8:25:37 SGT by fabrice at amra.dyndns.org.(none)
+// generated 2006/6/22 14:44:31 SGT by fabrice at fabrix.asgent-tech.com.(none)
 // using glademm V2.12.1
 //
 // DO NOT EDIT THIS FILE ! It was created using
-// glade-- /home/fabrice/Projects/MetaSE/pinot/UI/GTK2/metase-gtk2.glade
-// for gtk 2.8.17 and gtkmm 2.8.3
+// glade-- /home/fabrice/Desktop/pinot-0.49/UI/GTK2/metase-gtk2.glade
+// for gtk 2.8.19 and gtkmm 2.8.3
 //
 // Please modify the corresponding derived classes in ./src/mainWindow.hh and./src/mainWindow.cc
 
@@ -70,6 +70,7 @@
         class Gtk::RadioMenuItem * hostnamegroup1;
         class Gtk::MenuItem * groupresults1;
         class Gtk::ImageMenuItem * clearresults1;
+        class Gtk::ImageMenuItem * morelikethis1;
         class Gtk::MenuItem * viewresults1;
         class Gtk::MenuItem * viewcache1;
         class Gtk::MenuItem * indexresults1;
@@ -116,6 +117,7 @@
         virtual void on_showextract_activate() = 0;
         virtual void on_groupresults_activate() = 0;
         virtual void on_clearresults_activate() = 0;
+        virtual void on_morelikethis_activate() = 0;
         virtual void on_viewresults_activate() = 0;
         virtual void on_indexresults_activate() = 0;
         virtual void on_import_activate() = 0;



From fabricecolin at berlios.de  Thu Jun 22 12:57:01 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Thu, 22 Jun 2006 12:57:01 +0200
Subject: [Pinot-svn] r328 - trunk/UI/GTK2/src
Message-ID: <200606221057.k5MAv1AO017864@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-22 12:56:55 +0200 (Thu, 22 Jun 2006)
New Revision: 328

Modified:
   trunk/UI/GTK2/src/ModelColumns.cpp
   trunk/UI/GTK2/src/ModelColumns.h
   trunk/UI/GTK2/src/ResultsTree.cpp
   trunk/UI/GTK2/src/ResultsTree.h
Log:
Trimmed down ResultsModelColumns. Method setSelectionState() replaces
setSelectionViewedState() and should be used when a result is indexed.


Modified: trunk/UI/GTK2/src/ModelColumns.cpp
===================================================================
--- trunk/UI/GTK2/src/ModelColumns.cpp	2006-06-22 10:54:31 UTC (rev 327)
+++ trunk/UI/GTK2/src/ModelColumns.cpp	2006-06-22 10:56:55 UTC (rev 328)
@@ -59,8 +59,6 @@
 	add(m_viewed);
 	add(m_rankDiff);
 	add(m_score);
-	add(m_language);
-	add(m_queryName);
 	add(m_engines);
 	add(m_indexes);
 	add(m_type);

Modified: trunk/UI/GTK2/src/ModelColumns.h
===================================================================
--- trunk/UI/GTK2/src/ModelColumns.h	2006-06-22 10:54:31 UTC (rev 327)
+++ trunk/UI/GTK2/src/ModelColumns.h	2006-06-22 10:56:55 UTC (rev 328)
@@ -81,8 +81,6 @@
 	Gtk::TreeModelColumn<bool> m_viewed;
 	Gtk::TreeModelColumn<int> m_rankDiff;
 	Gtk::TreeModelColumn<Glib::ustring> m_score;
-	Gtk::TreeModelColumn<Glib::ustring> m_language;
-	Gtk::TreeModelColumn<Glib::ustring> m_queryName;
 	Gtk::TreeModelColumn<unsigned int> m_engines;
 	Gtk::TreeModelColumn<unsigned int> m_indexes;
 	typedef enum { RESULT_ROOT = 0, RESULT_TITLE, RESULT_HOST, RESULT_OTHER } ResultType;

Modified: trunk/UI/GTK2/src/ResultsTree.cpp
===================================================================
--- trunk/UI/GTK2/src/ResultsTree.cpp	2006-06-22 10:54:31 UTC (rev 327)
+++ trunk/UI/GTK2/src/ResultsTree.cpp	2006-06-22 10:56:55 UTC (rev 328)
@@ -317,7 +317,6 @@
 			set<string> engineNames, indexNames;
 			string extract;
 
-			// The query name and row[m_resultsColumns.m_queryName] should be equal
 			string url = from_utf8(row[m_resultsColumns.m_url]);
 			unsigned int engineIds = row[m_resultsColumns.m_engines];
 			unsigned int indexIds = row[m_resultsColumns.m_indexes];
@@ -428,8 +427,6 @@
 {
 	std::map<string, TreeModel::iterator> updatedGroups;
 	string queryName(queryProps.getName());
-	string language(queryProps.getLanguage());
-	string labelName(queryProps.getLabelName());
 	unsigned int count = 0;
 	ResultsModelColumns::ResultType rootType;
 
@@ -519,15 +516,15 @@
 			if (previousScore > 0)
 			{
 				// Update this result whatever the current and previous rankings were
-				history.updateItem(queryName, engineName, location,
-					title, extract, language, currentScore);
+				history.updateItem(m_queryName, engineName, location,
+					title, extract, "", currentScore);
 				rankDiff = (int)(currentScore - previousScore);
 			}
 			else
 			{
 				// No, this is a new result
-				history.insertItem(queryName, engineName, location,
-					resultIter->getTitle(), extract, language, currentScore);
+				history.insertItem(m_queryName, engineName, location,
+					resultIter->getTitle(), extract, "", currentScore);
 				// New results are displayed as such only if the query has already been run on the engine
 				if (isNewQuery == false)
 				{
@@ -537,8 +534,8 @@
 			}
 
 			++count;
-			if (appendResult(title, location, currentScore, language, rankDiff,
-				queryName, engineId, indexId, titleIter, &(*groupIter), true) == true)
+			if (appendResult(title, location, currentScore, rankDiff,
+				engineId, indexId, titleIter, &(*groupIter), true) == true)
 			{
 #ifdef DEBUG
 				cout << "ResultsTree::addResults: added row for result " << count << endl;
@@ -668,9 +665,7 @@
 						success = appendResult(childRow[m_resultsColumns.m_text],
 							childRow[m_resultsColumns.m_url],
 							(float)atof(from_utf8(childRow[m_resultsColumns.m_score]).c_str()),
-							from_utf8(childRow[m_resultsColumns.m_language]),
 							childRow[m_resultsColumns.m_rankDiff],
-							from_utf8(childRow[m_resultsColumns.m_queryName]),
 							engineIds, indexIds, newIter, &(*groupIter), true);
 					}
 				}
@@ -728,9 +723,7 @@
 								appendResult(childRow[m_resultsColumns.m_text],
 									childRow[m_resultsColumns.m_url],
 									(float)atof(from_utf8(childRow[m_resultsColumns.m_score]).c_str()),
-									from_utf8(childRow[m_resultsColumns.m_language]),
 									childRow[m_resultsColumns.m_rankDiff],
-									from_utf8(childRow[m_resultsColumns.m_queryName]),
 									engineId, indexId,
 									newIter, &(*groupIter), true);
 #ifdef DEBUG
@@ -791,7 +784,7 @@
 	TreeModel::Row row = *iter;
 	return Result(from_utf8(row[m_resultsColumns.m_url]),
 		from_utf8(row[m_resultsColumns.m_text]),
-		"", from_utf8(row[m_resultsColumns.m_language]));
+		"", "");
 }
 
 //
@@ -819,7 +812,7 @@
 
 		resultsList.push_back(DocumentInfo(from_utf8(row[m_resultsColumns.m_text]),
 			from_utf8(row[m_resultsColumns.m_url]),
-			"", from_utf8(row[m_resultsColumns.m_language])));
+			"", ""));
 	}
 #ifdef DEBUG
 	cout << "ResultsTree::getSelection: " << resultsList.size() << " results selected" << endl;
@@ -829,9 +822,9 @@
 }
 
 //
-// Sets the selected items' viewed state.
+// Sets the selected items' state.
 //
-void ResultsTree::setSelectionViewedState(bool viewed)
+void ResultsTree::setSelectionState(bool viewed, bool indexed)
 {
 	list<TreeModel::Path> selectedItems = get_selection()->get_selected_rows();
 	if (selectedItems.empty() == true)
@@ -851,7 +844,14 @@
 			continue;
 		}
 
-		row[m_resultsColumns.m_viewed] = viewed;
+		if (viewed == true)
+		{
+			row[m_resultsColumns.m_viewed] = true;
+		}
+		if (indexed == true)
+		{
+			row[m_resultsColumns.m_indexed] = true;
+		}
 	}
 }
 
@@ -956,7 +956,6 @@
 			row = *iter;
 
 			if ((row[m_resultsColumns.m_type] == ResultsModelColumns::RESULT_TITLE) &&
-				(row[m_resultsColumns.m_queryName] == queryName) &&
 				(row[m_resultsColumns.m_engines] == engineId) &&
 				(row[m_resultsColumns.m_indexes] == indexId))
 			{
@@ -1071,8 +1070,7 @@
 // Adds a new row in the results tree.
 //
 bool ResultsTree::appendResult(const ustring &text, const ustring &url,
-	float score, const string &language, int rankDiff,
-	const string &queryName, unsigned int engineId, unsigned int indexId,
+	float score, int rankDiff, unsigned int engineId, unsigned int indexId,
 	TreeModel::iterator &newRowIter, const TreeModel::Row *parentRow, bool noDuplicates)
 {
 	if (parentRow == NULL)
@@ -1094,8 +1092,7 @@
 					childIter != children.end(); ++childIter)
 				{
 					TreeModel::Row row = *childIter;
-					if ((row[m_resultsColumns.m_url] == to_utf8(url)) &&
-						(row[m_resultsColumns.m_queryName] == to_utf8(queryName)))
+					if (row[m_resultsColumns.m_url] == to_utf8(url))
 					{
 						// Update the engines column...
 						row[m_resultsColumns.m_engines] = row[m_resultsColumns.m_engines] | engineId;
@@ -1138,7 +1135,7 @@
 
 	TreeModel::Row childRow = *newRowIter;
 	updateRow(childRow, text, url, scoreStr,
-		to_utf8(language), to_utf8(queryName), engineId, indexId,
+		engineId, indexId,
 		ResultsModelColumns::RESULT_TITLE, isIndexed,
 		wasViewed, rankDiff);
 
@@ -1161,7 +1158,7 @@
 		groupIter = m_refStore->append();
 		TreeModel::Row groupRow = *groupIter;
 		updateRow(groupRow, to_utf8(groupName),
-			"", "", "", "", 0, 0, groupType,
+			"", "", 0, 0, groupType,
 			false, false, false);
 
 		// Update the map
@@ -1215,15 +1212,13 @@
 // Updates a row.
 //
 void ResultsTree::updateRow(TreeModel::Row &row, const ustring &text,
-	const ustring &url, const ustring &score, const ustring &language,
-	const ustring &queryName, unsigned int engineId,  unsigned int indexId,
+	const ustring &url, const ustring &score,
+	unsigned int engineId,  unsigned int indexId,
 	ResultsModelColumns::ResultType type, bool indexed, bool viewed, int rankDiff)
 {
 	row[m_resultsColumns.m_text] = text;
 	row[m_resultsColumns.m_url] = url;
 	row[m_resultsColumns.m_score] = score;
-	row[m_resultsColumns.m_language] = language;
-	row[m_resultsColumns.m_queryName] = queryName;
 	row[m_resultsColumns.m_engines] = engineId;
 	row[m_resultsColumns.m_indexes] = indexId;
 	row[m_resultsColumns.m_type] = type;

Modified: trunk/UI/GTK2/src/ResultsTree.h
===================================================================
--- trunk/UI/GTK2/src/ResultsTree.h	2006-06-22 10:54:31 UTC (rev 327)
+++ trunk/UI/GTK2/src/ResultsTree.h	2006-06-22 10:56:55 UTC (rev 328)
@@ -68,8 +68,8 @@
 		/// Gets a list of selected items.
 		bool getSelection(std::vector<DocumentInfo> &resultsList);
 
-		/// Sets the selected items' viewed state.
-		void setSelectionViewedState(bool viewed);
+		/// Sets the selected items' state.
+		void setSelectionState(bool viewed, bool indexed);
 
 		/**
 		  * Deletes the current selection.
@@ -140,8 +140,7 @@
 
 		/// Adds a new row in the results tree.
 		bool appendResult(const Glib::ustring &text, const Glib::ustring &url,
-			float score, const std::string &language, int rankDiff,
-			const std::string &queryName, unsigned int engineId, unsigned int indexId,
+			float score, int rankDiff, unsigned int engineId, unsigned int indexId,
 			Gtk::TreeModel::iterator &newRowIter,
 			const Gtk::TreeModel::Row *parentRow = NULL, bool noDuplicates = false);
 
@@ -150,8 +149,8 @@
 
 		/// Updates a row.
 		void updateRow(Gtk::TreeModel::Row &row, const Glib::ustring &text,
-			const Glib::ustring &url, const Glib::ustring &score, const Glib::ustring &language,
-			const Glib::ustring &queryName, unsigned int engineId, unsigned int indexId,
+			const Glib::ustring &url, const Glib::ustring &score,
+			unsigned int engineId, unsigned int indexId,
 			ResultsModelColumns::ResultType type, bool indexed, bool viewed, int rankDiff);
 
 	private:



From fabricecolin at berlios.de  Thu Jun 22 13:01:26 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Thu, 22 Jun 2006 13:01:26 +0200
Subject: [Pinot-svn] r329 - trunk/UI/GTK2/src
Message-ID: <200606221101.k5MB1QFj019165@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-22 13:01:23 +0200 (Thu, 22 Jun 2006)
New Revision: 329

Modified:
   trunk/UI/GTK2/src/WorkerThreads.cpp
   trunk/UI/GTK2/src/WorkerThreads.h
   trunk/UI/GTK2/src/mainWindow.cc
   trunk/UI/GTK2/src/mainWindow.hh
Log:
More Like This is activated if at least one indexed result is selected. It runs
the query against My Documents, gets expand terms and adds those to a copy
of the query object ("More Like query_name") that can be edited, stored and
run again.
Several other small changes and fixes.


Modified: trunk/UI/GTK2/src/WorkerThreads.cpp
===================================================================
--- trunk/UI/GTK2/src/WorkerThreads.cpp	2006-06-22 10:56:55 UTC (rev 328)
+++ trunk/UI/GTK2/src/WorkerThreads.cpp	2006-06-22 11:01:23 UTC (rev 329)
@@ -507,6 +507,19 @@
 {
 }
 
+QueryingThread::QueryingThread(const string &engineName, const string &engineDisplayableName,
+	const string &engineOption, const QueryProperties &queryProps,
+	const set<unsigned int> &relevantDocs) :
+	WorkerThread(),
+	m_engineName(engineName),
+	m_engineDisplayableName(engineDisplayableName),
+	m_engineOption(engineOption),
+	m_queryProps(queryProps)
+{
+	copy(relevantDocs.begin(), relevantDocs.end(),
+		inserter(m_relevantDocs, m_relevantDocs.begin()));
+}
+
 QueryingThread::~QueryingThread()
 {
 }
@@ -536,6 +549,11 @@
 	return m_resultsList;
 }
 
+const set<string> &QueryingThread::getExpandTerms(void) const
+{
+	return m_expandTerms;
+}
+
 bool QueryingThread::stop(void)
 {
 	m_done = true;
@@ -548,19 +566,25 @@
 void QueryingThread::doWork(void)
 {
 	// Get the SearchEngine
-	SearchEngineInterface *engine = SearchEngineFactory::getSearchEngine(m_engineName, m_engineOption);
-	if (engine == NULL)
+	SearchEngineInterface *pEngine = SearchEngineFactory::getSearchEngine(m_engineName, m_engineOption);
+	if (pEngine == NULL)
 	{
 		m_status = _("Couldn't create search engine");
 		m_status += " ";
 		m_status += m_engineDisplayableName;
 		return;
 	}
+
 	// Set the maximum number of results
-	engine->setMaxResultsCount(m_queryProps.getMaximumResultsCount());
+	pEngine->setMaxResultsCount(m_queryProps.getMaximumResultsCount());
+	if (m_relevantDocs.empty() == false)
+	{
+		// Set whether to expand the query
+		pEngine->setQueryExpansion(m_relevantDocs);
+	}
 
 	// Run the query
-	if (engine->runQuery(m_queryProps) == false)
+	if (pEngine->runQuery(m_queryProps) == false)
 	{
 		m_status = _("Couldn't run query on search engine");
 		m_status += " ";
@@ -568,11 +592,11 @@
 	}
 	else
 	{
-		const vector<Result> &resultsList = engine->getResults();
+		const vector<Result> &resultsList = pEngine->getResults();
 
 		m_resultsList.clear();
 		m_resultsList.reserve(resultsList.size());
-		m_resultsCharset = engine->getResultsCharset();
+		m_resultsCharset = pEngine->getResultsCharset();
 
 		// Copy the results list
 		for (vector<Result>::const_iterator resultIter = resultsList.begin();
@@ -603,8 +627,14 @@
 				language,
 				resultIter->getScore()));
 		}
+
+		// Copy the expand terms
+		const set<string> &expandTerms = pEngine->getExpandTerms();
+		copy(expandTerms.begin(), expandTerms.end(),
+			inserter(m_expandTerms, m_expandTerms.begin()));
 	}
-	delete engine;
+
+	delete pEngine;
 }
 
 LabelUpdateThread::LabelUpdateThread(const set<string> &labelsToDelete,

Modified: trunk/UI/GTK2/src/WorkerThreads.h
===================================================================
--- trunk/UI/GTK2/src/WorkerThreads.h	2006-06-22 10:56:55 UTC (rev 328)
+++ trunk/UI/GTK2/src/WorkerThreads.h	2006-06-22 11:01:23 UTC (rev 329)
@@ -168,6 +168,9 @@
 	public:
 		QueryingThread(const std::string &engineName, const std::string &engineDisplayableName,
 			const std::string &engineOption, const QueryProperties &queryProps);
+		QueryingThread(const std::string &engineName, const std::string &engineDisplayableName,
+			const std::string &engineOption, const QueryProperties &queryProps,
+			const std::set<unsigned int> &relevantDocs);
 		virtual ~QueryingThread();
 
 		virtual std::string getType(void) const;
@@ -178,6 +181,8 @@
 
 		const std::vector<Result> &getResults(std::string &charset) const;
 
+		const std::set<std::string> &getExpandTerms(void) const;
+
 		virtual bool stop(void);
 
 	protected:
@@ -185,8 +190,10 @@
 		std::string m_engineDisplayableName;
 		std::string m_engineOption;
 		QueryProperties m_queryProps;
+		std::set<unsigned int> m_relevantDocs;
 		std::vector<Result> m_resultsList;
 		std::string m_resultsCharset;
+		std::set<std::string> m_expandTerms;
 
 		virtual void doWork(void);
 

Modified: trunk/UI/GTK2/src/mainWindow.cc
===================================================================
--- trunk/UI/GTK2/src/mainWindow.cc	2006-06-22 10:56:55 UTC (rev 328)
+++ trunk/UI/GTK2/src/mainWindow.cc	2006-06-22 11:01:23 UTC (rev 329)
@@ -255,8 +255,8 @@
 	m_refQueryTree->clear();
 
 	// Add all user-defined queries
-	std::map<string, QueryProperties>::const_iterator queryIter = queries.begin();
-	for (; queryIter != queries.end(); ++queryIter)
+	for (std::map<string, QueryProperties>::const_iterator queryIter = queries.begin();
+		queryIter != queries.end(); ++queryIter)
 	{
 		TreeModel::iterator iter = m_refQueryTree->append();
 		TreeModel::Row row = *iter;
@@ -471,17 +471,16 @@
 			ResultsTree *pResultsTree = pResultsPage->getTree();
 			if (pResultsTree != NULL)
 			{
-				if (pResultsTree->checkSelection() == true)
-				{
-					hasSelection = pResultsTree->getSelection(resultsList);
-				}
+				hasSelection = pResultsTree->getSelection(resultsList);
 			}
 		}
 	}
 
-	if (hasSelection == true)
+	if ((hasSelection == true) &&
+		(resultsList.empty() == false))
 	{
-		bool firstResult = true, isViewable = true, isIndexable = true, isCached = false;
+		XapianIndex docsIndex(m_settings.m_indexLocation);
+		bool firstResult = true, isViewable = true, isCached = false, isIndexed = false, isIndexable = false;
 
 		for (vector<DocumentInfo>::iterator resultIter = resultsList.begin();
 			resultIter != resultsList.end(); ++resultIter)
@@ -490,6 +489,9 @@
 			Url urlObj(url);
 			string protocol(urlObj.getProtocol());
 
+#ifdef DEBUG
+			cout << "mainWindow::on_resultsTreeviewSelection_changed: " << url << endl;
+#endif
 			if (firstResult == true)
 			{
 				// Show the URL of the first result in the status bar
@@ -503,22 +505,31 @@
 			// FIXME: there should be a way to know which protocols can be viewed/indexed
 			if (protocol == "xapian")
 			{
-#ifdef DEBUG
-				cout << "mainWindow::on_resultsTreeviewSelection_changed: internal URL" << endl;
-#endif
-				isViewable = isIndexable = isCached = false;
+				isViewable = isCached = isIndexed = isIndexable = false;
 				break;
 			}
-			else if (m_settings.m_cacheProtocols.find(protocol) != m_settings.m_cacheProtocols.end())
+			else
 			{
-				// One document with a supported protocol is good enough
-				isCached = true;
+				if (m_settings.m_cacheProtocols.find(protocol) != m_settings.m_cacheProtocols.end())
+				{
+					// One document with a supported protocol is good enough
+					isCached = true;
+				}
+
+				if (docsIndex.isGood() == true)
+				{
+					if (docsIndex.hasDocument(url) > 0)
+					{
+						isIndexed = true;
+					}
+				}
 			}
 		}
 
 		// Enable these menu items
 		viewresults1->set_sensitive(isViewable);
 		viewcache1->set_sensitive(isCached);
+		morelikethis1->set_sensitive(isIndexed);
 		indexresults1->set_sensitive(isIndexable);
 	}
 	else
@@ -526,6 +537,7 @@
 		// Disable these menu items
 		viewresults1->set_sensitive(false);
 		viewcache1->set_sensitive(false);
+		morelikethis1->set_sensitive(false);
 		indexresults1->set_sensitive(false);
 
 		// Reset
@@ -720,12 +732,11 @@
 #endif
 					}
 
+					view_documents(resultsList);
+
+					// Update the rows right now
+					pResultsTree->setSelectionState(true, false);
 				}
-
-				view_documents(resultsList);
-
-				// Update the rows right now
-				pResultsTree->setSelectionViewedState(true);
 			}
 		}
 	}
@@ -965,6 +976,9 @@
 			// Connect to the "changed" signal
 			pResultsTree->getSelectionChangedSignal().connect(
 				SigC::slot(*this, &mainWindow::on_resultsTreeviewSelection_changed));
+			// Connect to the view results signal
+			pResultsTree->getViewResultsSignal().connect(
+				SigC::slot(*this, &mainWindow::on_viewresults_activate));
 
 			// Append the page
 			if (m_state.write_lock_lists(3) == true)
@@ -982,6 +996,7 @@
 			(pResultsTree != NULL))
 		{
 			// Add the results to the tree
+			pResultsTree->deleteResults(queryProps, engineName);
 			pResultsTree->addResults(queryProps, engineName,
 				resultsList, resultsCharset,
 				searchenginegroup1->get_active());
@@ -1005,6 +1020,59 @@
 					labelName);
 			}
 		}
+
+		// Any expand terms ?
+		const set<string> &expandTerms = pQueryThread->getExpandTerms();
+		if (expandTerms.empty() == false)
+		{
+			string queryName(_("More Like"));
+			string moreLike;
+			bool newQuery = true;
+
+			if (queryProps.getName().empty() == true)
+			{
+				queryName += "...";
+			}
+			else
+			{
+				queryName += " ";
+				queryName += queryProps.getName();
+			}
+			queryProps.setName(queryName);
+
+			moreLike.clear();
+			if (queryProps.getAnyWords().empty() == false)
+			{
+				moreLike = " ";
+			}
+			for (set<string>::const_iterator termIter = expandTerms.begin();
+				termIter != expandTerms.end(); ++termIter)
+			{
+				if (moreLike.empty() == false)
+				{
+					moreLike += " ";
+				}
+				moreLike += *termIter;
+			}
+
+			// Does such a query already exist ?
+			TreeModel::Children children = m_refQueryTree->children();
+			for (TreeModel::Children::iterator iter = children.begin();
+				iter != children.end(); ++iter)
+			{
+				TreeModel::Row row = *iter;
+
+				if (queryName == from_utf8(row[m_queryColumns.m_name]))
+				{
+					newQuery = false;
+					break;
+				}
+			}
+
+			// Add these terms and edit the new query
+			queryProps.setAnyWords(queryProps.getAnyWords() + moreLike);
+			edit_query(queryProps, newQuery);
+		}
 	}
 	else if (type == "LabelUpdateThread")
 	{
@@ -1639,7 +1707,7 @@
 					view_documents(resultsList);
 
 					// We can update the rows right now
-					pResultsTree->setSelectionViewedState(true);
+					pResultsTree->setSelectionState(true, false);
 				}
 			}
 		}
@@ -1647,6 +1715,86 @@
 }
 
 //
+// Results > More Like This menu selected
+//
+void mainWindow::on_morelikethis_activate()
+{
+	QueryProperties queryProps;
+	vector<DocumentInfo> resultsList;
+	string queryName;
+
+	NotebookPageBox *pNotebookPage = get_current_page();
+	if (pNotebookPage != NULL)
+	{
+		ResultsPage *pResultsPage = dynamic_cast<ResultsPage*>(pNotebookPage);
+		if (pResultsPage != NULL)
+		{
+			ResultsTree *pResultsTree = pResultsPage->getTree();
+			if (pResultsTree != NULL)
+			{
+				pResultsTree->getSelection(resultsList);
+			}
+
+			queryName = from_utf8(pResultsPage->getTitle());
+		}
+	}
+
+	// Find this query
+	if (queryName == _("Live query"))
+	{
+		queryProps.setAndWords(from_utf8(liveQueryEntry->get_text()));
+	}
+	else
+	{
+		bool foundQuery = false;
+
+		TreeModel::Children children = m_refQueryTree->children();
+		for (TreeModel::Children::iterator iter = children.begin();
+			iter != children.end(); ++iter)
+		{
+			TreeModel::Row row = *iter;
+
+			if (queryName == from_utf8(row[m_queryColumns.m_name]))
+			{
+				queryProps = row[m_queryColumns.m_properties];
+				foundQuery = true;
+				break;
+			}
+		}
+
+		// Maybe the query was deleted
+		if (foundQuery == false)
+		{
+			ustring status(_("Couldn't find query"));
+			status += " ";
+			status += queryName;
+			set_status(status);
+			return;
+		}
+	}
+
+        XapianIndex docsIndex(m_settings.m_indexLocation);
+        set<unsigned int> docIdList;
+
+        if (docsIndex.isGood() == true)
+        {
+                for (vector<DocumentInfo>::const_iterator docIter = resultsList.begin();
+                        docIter != resultsList.end(); ++docIter)
+                {
+                        unsigned int docId = docsIndex.hasDocument(docIter->getLocation());
+                        if (docId > 0)
+                        {
+                                docIdList.insert(docId);
+                        }
+                }
+
+		// Spawn a new thread
+		start_thread(new QueryingThread("xapian", _("My Documents"),
+			m_settings.m_indexLocation, queryProps, docIdList));
+        }
+}
+
+//
 // Results > Index menu selected
 //
 void mainWindow::on_indexresults_activate()
@@ -1670,18 +1818,21 @@
 			if (pResultsTree != NULL)
 			{
 				pResultsTree->getSelection(resultsList);
-			}
-		}
-	}
 
-	// Go through selected results
-	for (vector<DocumentInfo>::const_iterator resultIter = resultsList.begin();
-		resultIter != resultsList.end(); ++resultIter)
-	{
+				// Go through selected results
+				for (vector<DocumentInfo>::const_iterator resultIter = resultsList.begin();
+					resultIter != resultsList.end(); ++resultIter)
+				{
 #ifdef DEBUG
-		cout << "mainWindow::on_indexresults_activate: URL is " << resultIter->getLocation() << endl;
+					cout << "mainWindow::on_indexresults_activate: URL is " << resultIter->getLocation() << endl;
 #endif
-		queue_index(*resultIter, "");
+					queue_index(*resultIter, "");
+				}
+
+				// We can update the rows right now
+				pResultsTree->setSelectionState(false, true);
+			}
+		}
 	}
 }
 
@@ -1785,7 +1936,7 @@
 		DocumentInfo docInfo(docIter->getTitle(), url,
 			docIter->getType(), docIter->getLanguage());
 		docInfo.setTimestamp(docIter->getTimestamp());
-		queue_index(docInfo, "", docId);
+		queue_index(docInfo, "");
 	}
 }
 
@@ -2428,15 +2579,16 @@
 void mainWindow::show_selectionbased_menuitems(bool showItems)
 {
 	// Results menuitems that depend on selection
-	viewresults1->set_sensitive(false);
-	viewcache1->set_sensitive(false);
-	indexresults1->set_sensitive(false);
+	viewresults1->set_sensitive(showItems);
+	viewcache1->set_sensitive(showItems);
+	morelikethis1->set_sensitive(showItems);
+	indexresults1->set_sensitive(showItems);
 
 	// Index menuitems that depend on selection
-	viewfromindex1->set_sensitive(false);
-	refreshindex1->set_sensitive(false);
-	unindex1->set_sensitive(false);
-	showfromindex1->set_sensitive(false);
+	viewfromindex1->set_sensitive(showItems);
+	refreshindex1->set_sensitive(showItems);
+	unindex1->set_sensitive(showItems);
+	showfromindex1->set_sensitive(showItems);
 }
 
 //
@@ -2538,7 +2690,7 @@
 // Queues additions to the index.
 //
 bool mainWindow::queue_index(const DocumentInfo &docInfo,
-	const string &labelName, unsigned int docId)
+	const string &labelName)
 {
 	if (m_state.get_threads_count() >= m_maxThreads)
 	{
@@ -2552,14 +2704,16 @@
 		return true;
 	}
 
+	// Is it an update ?
+	XapianIndex docsIndex(m_settings.m_indexLocation);
+	unsigned int docId = docsIndex.hasDocument(docInfo.getLocation());
 	if (docId > 0)
 	{
-		// Update the document
+		// Yes, it is
 		index_document(docInfo, labelName, docId);
 	}
 	else
 	{
-		// Index the document
 		index_document(docInfo, labelName);
 	}
 
@@ -2814,37 +2968,54 @@
 void mainWindow::index_document(const DocumentInfo &docInfo,
 	const string &labelName, unsigned int docId)
 {
-	Url urlObj(docInfo.getLocation());
-	string indexLocation = m_settings.m_indexLocation;
+	string location(docInfo.getLocation());
 
-	// If the document is mail, we need to check My Email
+	if (location.empty() == true)
+	{
+		// Nothing to do
+#ifdef DEBUG
+		cout << "mainWindow::index_document: empty queue" << endl;
+#endif
+		return;
+	}
+
+	Url urlObj(location);
+	string indexLocation(m_settings.m_indexLocation);
+
+	// If the document is mail, we need the My Email index
 	if (urlObj.getProtocol() == "mailbox")
 	{
 		indexLocation = m_settings.m_mailIndexLocation;
 	}
 
-	XapianIndex index(indexLocation);
-
 	// Is it an update ?
 	if (docId > 0)
 	{
 		// Yes, it is
 		start_thread(new IndexingThread(docInfo, labelName, docId));
+
+		// We may have to update its labels
+		if (labelName.empty() == false)
+		{
+			XapianIndex index(indexLocation);
+			set<string> docLabels;
+
+			// Add this new label
+	#ifdef DEBUG
+			cout << "mainWindow::index_document: applying label " << labelName << " to document " << docId << endl;
+	#endif
+			docLabels.insert(labelName);
+			index.setDocumentLabels(docId, docLabels, false);
+		}
 	}
 	else
 	{
 		string url(docInfo.getLocation());
 		bool isNewDocument = false;
 
-		// No : see if the document is already indexed
-		// or is being indexed
-		if (index.isGood() == true)
+		// Is the document being indexed ?
+		if (m_state.write_lock_lists(10) == true)
 		{
-			docId = index.hasDocument(url);
-		}
-		if ((docId == 0) &&
-			(m_state.write_lock_lists(10) == true))
-		{
 			if (m_state.m_beingIndexed.find(url) == m_state.m_beingIndexed.end())
 			{
 				m_state.m_beingIndexed.insert(url);
@@ -2868,20 +3039,6 @@
 			set_status(status);
 		}
 	}
-
-	// If the document is indexed, we may have to update its labels
-	if ((docId > 0) &&
-		(labelName.empty() == false))
-	{
-		set<string> docLabels;
-
-		// Add this new label
-#ifdef DEBUG
-		cout << "mainWindow::index_document: applying label " << labelName << " to document " << docId << endl;
-#endif
-		docLabels.insert(labelName);
-		index.setDocumentLabels(docId, docLabels, false);
-	}
 }
 
 //
@@ -2889,6 +3046,7 @@
 //
 void mainWindow::view_documents(vector<DocumentInfo> &documentsList)
 {
+	ViewHistory viewHistory(m_settings.m_historyDatabase);
 	multimap<string, string> locationsByType;
 	vector<DocumentInfo>::iterator docIter = documentsList.begin();
 
@@ -2903,6 +3061,24 @@
 			continue;
 		}
 
+		Url urlObj(url);
+
+		// FIXME: there should be a way to know which protocols can be viewed/indexed
+		if (urlObj.getProtocol() == "mailbox")
+		{
+			DocumentInfo docInfo("", url, "", "");
+
+			// Get that message
+			start_thread(new DownloadingThread(docInfo, false));
+
+			// Record this into the history now, even though it may fail
+			if (viewHistory.hasItem(url) == false)
+			{
+				viewHistory.insertItem(url);
+			}
+			continue;
+		}
+
 		// What's the MIME type ?
 		if (mimeType.empty() == true)
 		{
@@ -2934,14 +3110,12 @@
 	for (multimap<string, string>::iterator locationIter = locationsByType.begin();
 		locationIter != locationsByType.end(); ++locationIter)
 	{
+		string url(locationIter->second);
+
 		if (locationIter->first != currentType)
 		{
 			if (arguments.empty() == false)
 			{
-#ifdef DEBUG
-				cout << "mainWindow::view_documents: " << arguments.size()
-					<< " arguments for type " << currentType << endl;
-#endif
 				// Run the default program for this type
 				if (CommandLine::runAsync(action, arguments) == false)
 				{
@@ -2967,24 +3141,9 @@
 		}
 		currentType = locationIter->first;
 
-		string url(locationIter->second);
-		Url urlObj(url);
-
-		// FIXME: there should be a way to know which protocols can be viewed/indexed
-		if (urlObj.getProtocol() == "mailbox")
-		{
-			DocumentInfo docInfo("", url, "", "");
-
-			// Get that message
-			start_thread(new DownloadingThread(docInfo, false));
-			// FIXME: at this time, only one mail message can be viewed at any one time
-			break;
-		}
-
 		arguments.push_back(url);
 
 		// Record this into the history now, even though it may fail
-		ViewHistory viewHistory(m_settings.m_historyDatabase);
 		if (viewHistory.hasItem(url) == false)
 		{
 			viewHistory.insertItem(url);
@@ -2993,10 +3152,6 @@
 
 	if (arguments.empty() == false)
 	{
-#ifdef DEBUG
-		cout << "mainWindow::view_documents: " << arguments.size()
-			<< " arguments for type " << currentType << endl;
-#endif
 		// Run the default program for this type
 		if (CommandLine::runAsync(action, arguments) == false)
 		{
@@ -3097,6 +3252,7 @@
 
 	DocumentInfo docInfo;
 	string labelName;
+	bool foundItem = false;
 
 	if (m_state.write_lock_lists(12) == true)
 	{
@@ -3108,6 +3264,7 @@
 			{
 				docInfo = queueIter->first;
 				labelName = queueIter->second;
+				foundItem = true;
 
 				m_state.m_indexQueue.erase(queueIter);
 			}
@@ -3116,19 +3273,15 @@
 		m_state.unlock_lists();
 	}
 
-	string location = docInfo.getLocation();
-	if (location.empty() == true)
+	if (foundItem == false)
 	{
 		// Nothing to do
-#ifdef DEBUG
-		cout << "mainWindow::check_queue: empty queue" << endl;
-#endif
 		return false;
 	}
 
 	// Is it an update ?
 	XapianIndex docsIndex(m_settings.m_indexLocation);
-	unsigned int docId = docsIndex.hasDocument(location);
+	unsigned int docId = docsIndex.hasDocument(docInfo.getLocation());
 	if (docId > 0)
 	{
 		// Yes, it is

Modified: trunk/UI/GTK2/src/mainWindow.hh
===================================================================
--- trunk/UI/GTK2/src/mainWindow.hh	2006-06-22 10:56:55 UTC (rev 328)
+++ trunk/UI/GTK2/src/mainWindow.hh	2006-06-22 11:01:23 UTC (rev 329)
@@ -89,13 +89,14 @@
 	virtual void on_showextract_activate();
 	virtual void on_groupresults_activate();
 	virtual void on_viewresults_activate();
+	virtual void on_morelikethis_activate();
 	virtual void on_indexresults_activate();
 
 	virtual void on_import_activate();
 	virtual void on_viewfromindex_activate();
 	virtual void on_refreshindex_activate();
+	virtual void on_unindex_activate();
 	virtual void on_showfromindex_activate();
-	virtual void on_unindex_activate();
 
 	virtual void on_about_activate();
 
@@ -124,8 +125,7 @@
 		NotebookPageBox::PageType type);
 	int get_page_number(const Glib::ustring &title,
 		NotebookPageBox::PageType type);
-	bool queue_index(const DocumentInfo &docInfo, const std::string &labelName,
-		unsigned int docId = 0);
+	bool queue_index(const DocumentInfo &docInfo, const std::string &labelName);
 	void edit_query(QueryProperties &queryProps, bool newQuery);
 	void run_search(const QueryProperties &queryProps);
 	void browse_index(const Glib::ustring &indexName,



From fabricecolin at berlios.de  Thu Jun 22 15:58:42 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Thu, 22 Jun 2006 15:58:42 +0200
Subject: [Pinot-svn] r330 - trunk/UI/GTK2/src
Message-ID: <200606221358.k5MDwgfM002247@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-22 15:58:35 +0200 (Thu, 22 Jun 2006)
New Revision: 330

Modified:
   trunk/UI/GTK2/src/mainWindow.cc
Log:
Rather than opening the new More Like query for editing, just add it/update
its details in the queries list.


Modified: trunk/UI/GTK2/src/mainWindow.cc
===================================================================
--- trunk/UI/GTK2/src/mainWindow.cc	2006-06-22 11:01:23 UTC (rev 329)
+++ trunk/UI/GTK2/src/mainWindow.cc	2006-06-22 13:58:35 UTC (rev 330)
@@ -1027,7 +1027,6 @@
 		{
 			string queryName(_("More Like"));
 			string moreLike;
-			bool newQuery = true;
 
 			if (queryProps.getName().empty() == true)
 			{
@@ -1064,14 +1063,19 @@
 
 				if (queryName == from_utf8(row[m_queryColumns.m_name]))
 				{
-					newQuery = false;
+					m_settings.removeQuery(queryName);
 					break;
 				}
 			}
 
-			// Add these terms and edit the new query
+			// Add these terms
 			queryProps.setAnyWords(queryProps.getAnyWords() + moreLike);
-			edit_query(queryProps, newQuery);
+
+			// Update everything
+			if (m_settings.addQuery(queryProps) == true)
+			{
+				populate_queryTreeview(queryName);
+			}
 		}
 	}
 	else if (type == "LabelUpdateThread")



From fabricecolin at berlios.de  Fri Jun 23 13:02:55 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Fri, 23 Jun 2006 13:02:55 +0200
Subject: [Pinot-svn] r331 - trunk/UI/GTK2/src
Message-ID: <200606231102.k5NB2tTT010348@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-23 13:02:38 +0200 (Fri, 23 Jun 2006)
New Revision: 331

Modified:
   trunk/UI/GTK2/src/mainWindow.cc
Log:
Fix results indexing and labeling, accidentally broken by previous checkins.


Modified: trunk/UI/GTK2/src/mainWindow.cc
===================================================================
--- trunk/UI/GTK2/src/mainWindow.cc	2006-06-22 13:58:35 UTC (rev 330)
+++ trunk/UI/GTK2/src/mainWindow.cc	2006-06-23 11:02:38 UTC (rev 331)
@@ -480,7 +480,7 @@
 		(resultsList.empty() == false))
 	{
 		XapianIndex docsIndex(m_settings.m_indexLocation);
-		bool firstResult = true, isViewable = true, isCached = false, isIndexed = false, isIndexable = false;
+		bool firstResult = true, isViewable = true, isCached = false, isIndexed = false, isIndexable = true;
 
 		for (vector<DocumentInfo>::iterator resultIter = resultsList.begin();
 			resultIter != resultsList.end(); ++resultIter)
@@ -2089,9 +2089,12 @@
 			for (vector<IndexedDocument>::iterator docIter = documentsList.begin();
 				docIter != documentsList.end(); ++docIter)
 			{
+				unsigned int docId = docIter->getID();
+
+				docIter->setLocation(docIter->getOriginalLocation());
 				docIter->setLanguage(newLanguage);
 
-				start_thread(new UpdateDocumentThread(indexName, docIter->getID(), *docIter));
+				start_thread(new UpdateDocumentThread(indexName, docId, *docIter));
 			}
 		}
 
@@ -3005,9 +3008,9 @@
 			set<string> docLabels;
 
 			// Add this new label
-	#ifdef DEBUG
+#ifdef DEBUG
 			cout << "mainWindow::index_document: applying label " << labelName << " to document " << docId << endl;
-	#endif
+#endif
 			docLabels.insert(labelName);
 			index.setDocumentLabels(docId, docLabels, false);
 		}



From fabricecolin at berlios.de  Mon Jun 26 13:20:32 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Mon, 26 Jun 2006 13:20:32 +0200
Subject: [Pinot-svn] r332 - in trunk: . Utils
Message-ID: <200606261120.k5QBKWaP008418@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-26 13:20:29 +0200 (Mon, 26 Jun 2006)
New Revision: 332

Modified:
   trunk/Utils/TimeConverter.cpp
   trunk/configure.in
Log:
Don't use timelocal(), check for timegm().


Modified: trunk/Utils/TimeConverter.cpp
===================================================================
--- trunk/Utils/TimeConverter.cpp	2006-06-23 11:02:38 UTC (rev 331)
+++ trunk/Utils/TimeConverter.cpp	2006-06-26 11:20:29 UTC (rev 332)
@@ -119,7 +119,7 @@
 		}
 		else
 		{
-			gmTime = timelocal(&timeTm);
+			gmTime = mktime(&timeTm);
 		}
 
 #ifndef _STRPTIME_COPES_WITH_TIMEZONE

Modified: trunk/configure.in
===================================================================
--- trunk/configure.in	2006-06-23 11:02:38 UTC (rev 331)
+++ trunk/configure.in	2006-06-26 11:20:29 UTC (rev 332)
@@ -175,6 +175,7 @@
 
 dnl Check for specific functions
 AC_CHECK_FUNCS(gettimeofday)
+AC_CHECK_FUNCS(timegm)
 AC_CHECK_FUNCS(lstat)
 AC_CHECK_FUNCS(mmap)
 



From fabricecolin at berlios.de  Wed Jun 28 02:19:54 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Wed, 28 Jun 2006 02:19:54 +0200
Subject: [Pinot-svn] r333 - in trunk/UI/GTK2: . src
Message-ID: <200606280019.k5S0Jsgi001290@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-28 02:19:44 +0200 (Wed, 28 Jun 2006)
New Revision: 333

Modified:
   trunk/UI/GTK2/metase-gtk2.glade
   trunk/UI/GTK2/src/queryDialog.cc
   trunk/UI/GTK2/src/queryDialog_glade.cc
   trunk/UI/GTK2/src/queryDialog_glade.hh
Log:
Workaround for bizarre bug that would cause a segfault when creating a query
that indexes and labels results based on a language filter.


Modified: trunk/UI/GTK2/metase-gtk2.glade
===================================================================
--- trunk/UI/GTK2/metase-gtk2.glade	2006-06-26 11:20:29 UTC (rev 332)
+++ trunk/UI/GTK2/metase-gtk2.glade	2006-06-28 00:19:44 UTC (rev 333)
@@ -1764,7 +1764,6 @@
 
 	  <child>
 	    <widget class="GtkButton" id="queryCancelbutton">
-	      <property agent="glademm" name="cxx_visibility">protected</property>
 	      <property name="visible">True</property>
 	      <property name="can_default">True</property>
 	      <property name="can_focus">True</property>

Modified: trunk/UI/GTK2/src/queryDialog.cc
===================================================================
--- trunk/UI/GTK2/src/queryDialog.cc	2006-06-26 11:20:29 UTC (rev 332)
+++ trunk/UI/GTK2/src/queryDialog.cc	2006-06-28 00:19:44 UTC (rev 333)
@@ -131,13 +131,10 @@
 		string languageName = Languages::getIntlName(languageNum);
 		iter = m_refLanguageTree->append();
 		row = *iter;
-		row[m_languageColumns.m_name] = languageName;
+		row[m_languageColumns.m_name] = to_utf8(languageName);
 
 		if (languageName == m_properties.getLanguage())
 		{
-#ifdef DEBUG
-			cout << "queryDialog::populate_comboboxes: found at " << languageNum << endl;
-#endif
 			languageCombobox->set_active(languageNum + 1);
 		}
 	}
@@ -147,6 +144,7 @@
 {
 	return m_badName;
 }
+
 void queryDialog::on_queryOkbutton_clicked()
 {
 	// Name
@@ -190,8 +188,8 @@
 	// Index all results
 	m_properties.setIndexResults(indexCheckbutton->get_active());
 	// Index label
+	m_properties.setLabelName("");
 	int chosenLabel = labelNameCombobox->get_active_row_number();
-	m_properties.setLabelName("");
 	if (chosenLabel > 0)
 	{
 		TreeModel::iterator iter = labelNameCombobox->get_active();
@@ -204,8 +202,8 @@
 	m_properties.setHostFilter(from_utf8(hostNameEntry->get_text()));
 	m_properties.setFileFilter(from_utf8(fileNameEntry->get_text()));
 	// Label filter
+	m_properties.setLabelFilter("");
 	chosenLabel = labelFilterCombobox->get_active_row_number();
-	m_properties.setLabelFilter("");
 	if (chosenLabel > 0)
 	{
 		TreeModel::iterator iter = labelFilterCombobox->get_active();
@@ -214,6 +212,18 @@
 
 		m_properties.setLabelFilter(labelName);
 	}
+
+	// Workaround for bizarre bug that would cause a crash when creating a query
+	// that indexes and labels results based on a language filter
+	if (queryNotebook->get_current_page() == 0)
+	{
+		queryNotebook->next_page();
+	}
+	else
+	{
+		queryNotebook->prev_page();
+		queryNotebook->next_page();
+	}
 }
 
 void queryDialog::on_nameEntry_changed()

Modified: trunk/UI/GTK2/src/queryDialog_glade.cc
===================================================================
--- trunk/UI/GTK2/src/queryDialog_glade.cc	2006-06-26 11:20:29 UTC (rev 332)
+++ trunk/UI/GTK2/src/queryDialog_glade.cc	2006-06-28 00:19:44 UTC (rev 333)
@@ -1,9 +1,9 @@
-// generated 2006/4/14 17:36:14 SGT by fabrice at amra.dyndns.org.(none)
-// using glademm V2.6.0
+// generated 2006/6/27 12:45:50 SGT by fabrice at fabrix.asgent-tech.com.(none)
+// using glademm V2.12.1
 //
 // DO NOT EDIT THIS FILE ! It was created using
-// glade-- /home/fabrice/Projects/MetaSE/pinot/UI/GTK2/metase-gtk2.glade
-// for gtk 2.8.15 and gtkmm 2.8.3
+// glade-- /home/fabrice/pinot-0.49/UI/GTK2/metase-gtk2.glade
+// for gtk 2.8.19 and gtkmm 2.8.3
 //
 // Please modify the corresponding derived classes in ./src/queryDialog.cc
 
@@ -25,18 +25,11 @@
 #  else
 #    define N_(String) (String)
 #  endif
-#else
-#  define textdomain(String) (String)
-#  define gettext(String) (String)
-#  define dgettext(Domain,Message) (Message)
-#  define dcgettext(Domain,Message,Type) (Message)
-#  define bindtextdomain(Domain,Directory) (Domain)
-#  define _(String) (String)
-#  define N_(String) (String)
 #endif
 #include <gtkmmconfig.h>
 #if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
 #include <sigc++/compatibility.h>
+#include <sigc++/bind.h>
 #define GMM_GTKMM_22_24(a,b) b
 #else //gtkmm 2.2
 #define GMM_GTKMM_22_24(a,b) a
@@ -44,17 +37,29 @@
 #include "queryDialog_glade.hh"
 #include <gdk/gdkkeysyms.h>
 #include <gtkmm/accelgroup.h>
+#include <gtkmm/button.h>
 #include <gtkmm/buttonbox.h>
 #include <gtkmm/label.h>
 #include <gtkmm/table.h>
 #include <gtkmm/adjustment.h>
 #include <gtkmm/box.h>
+#ifndef ENABLE_NLS
+#  define textdomain(String) (String)
+#  define gettext(String) (String)
+#  define dgettext(Domain,Message) (Message)
+#  define dcgettext(Domain,Message,Type) (Message)
+#  define bindtextdomain(Domain,Directory) (Domain)
+#  define _(String) (String)
+#  define N_(String) (String)
+#endif
 
+
 queryDialog_glade::queryDialog_glade(
 )
 {  queryDialog = this;
    gmm_data = new GlademmData(get_accel_group());
-   queryCancelbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-cancel")));
+   
+   Gtk::Button *queryCancelbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-cancel")));
    queryOkbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-ok")));
    
    Gtk::Label *nameLabel = Gtk::manage(new class Gtk::Label(_("Name:")));

Modified: trunk/UI/GTK2/src/queryDialog_glade.hh
===================================================================
--- trunk/UI/GTK2/src/queryDialog_glade.hh	2006-06-26 11:20:29 UTC (rev 332)
+++ trunk/UI/GTK2/src/queryDialog_glade.hh	2006-06-28 00:19:44 UTC (rev 333)
@@ -1,9 +1,9 @@
-// generated 2005/12/15 22:39:14 SGT by fabrice at amra.dyndns.org.(none)
-// using glademm V2.6.0
+// generated 2006/6/27 12:45:50 SGT by fabrice at fabrix.asgent-tech.com.(none)
+// using glademm V2.12.1
 //
 // DO NOT EDIT THIS FILE ! It was created using
-// glade-- /home/fabrice/Projects/MetaSE/pinot/UI/GTK2/metase-gtk2.glade
-// for gtk 2.6.10 and gtkmm 2.6.2
+// glade-- /home/fabrice/pinot-0.49/UI/GTK2/metase-gtk2.glade
+// for gtk 2.8.19 and gtkmm 2.8.3
 //
 // Please modify the corresponding derived classes in ./src/queryDialog.hh and./src/queryDialog.cc
 
@@ -46,7 +46,6 @@
 public:
         class Gtk::Dialog * queryDialog;
 protected:
-        class Gtk::Button * queryCancelbutton;
         class Gtk::Button * queryOkbutton;
         class Gtk::Entry * nameEntry;
         class Gtk::Entry * anyEntry;



From fabricecolin at berlios.de  Wed Jun 28 02:28:37 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Wed, 28 Jun 2006 02:28:37 +0200
Subject: [Pinot-svn] r334 - trunk
Message-ID: <200606280028.k5S0SbWg002407@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-28 02:28:18 +0200 (Wed, 28 Jun 2006)
New Revision: 334

Modified:
   trunk/NEWS
Log:
Summarized additions since last version.


Modified: trunk/NEWS
===================================================================
--- trunk/NEWS	2006-06-28 00:19:44 UTC (rev 333)
+++ trunk/NEWS	2006-06-28 00:28:18 UTC (rev 334)
@@ -1,3 +1,19 @@
+??? version_0_5_0
+Tokenize :
+ - switched to pdftotext, which seems to support more files than pdftohtml
+Search :
+ - can search for documents with language "Unknown" (ie those for which
+  language detection failed)
+UI :
+ - multiple user-configurable cache services. They are defined in
+  $PREFIX/share/pinot/globalconfig.xml and listed under the View Cache menu.
+ - allow to change the language of several documents at once
+ - after editing a query, don't change selection in the queries list
+ - More Like This extracts representative terms from the selected documents
+  (if they are indexed) and creates a "More Like ..." query
+ - set the indexed status icon when results are indexed
+ - view results on double clicks
+
 2006/06/11 version_0_4_9
 General :
  - able to find the default application for a given MIME type



From fabricecolin at berlios.de  Wed Jun 28 12:41:38 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Wed, 28 Jun 2006 12:41:38 +0200
Subject: [Pinot-svn] r335 - trunk/Utils
Message-ID: <200606281041.k5SAfcu8030984@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-28 12:41:36 +0200 (Wed, 28 Jun 2006)
New Revision: 335

Modified:
   trunk/Utils/CommandLine.cpp
Log:
Don't look for substitution strings in arguments.


Modified: trunk/Utils/CommandLine.cpp
===================================================================
--- trunk/Utils/CommandLine.cpp	2006-06-28 00:28:18 UTC (rev 334)
+++ trunk/Utils/CommandLine.cpp	2006-06-28 10:41:36 UTC (rev 335)
@@ -199,10 +199,11 @@
 					break;
 			}
 
-			commandLine.replace(paramPos, 2, Glib::shell_quote(replacement));
+			string shellReplacement(Glib::shell_quote(replacement));
+			commandLine.replace(paramPos, 2, shellReplacement);
 
 			// Next
-			paramPos = commandLine.find('%', paramPos + 1);
+			paramPos = commandLine.find('%', paramPos + shellReplacement.length());
 		}
 
 		if (foundParam == false)



From fabricecolin at berlios.de  Wed Jun 28 12:43:05 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Wed, 28 Jun 2006 12:43:05 +0200
Subject: [Pinot-svn] r336 - trunk/UI/GTK2/src
Message-ID: <200606281043.k5SAh5kq031451@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-28 12:43:04 +0200 (Wed, 28 Jun 2006)
New Revision: 336

Modified:
   trunk/UI/GTK2/src/pinot.cc
Log:
Expire query and view items older than one month.


Modified: trunk/UI/GTK2/src/pinot.cc
===================================================================
--- trunk/UI/GTK2/src/pinot.cc	2006-06-28 10:41:36 UTC (rev 335)
+++ trunk/UI/GTK2/src/pinot.cc	2006-06-28 10:43:04 UTC (rev 336)
@@ -211,7 +211,17 @@
 		errorMsg += " ";
 		errorMsg += settings.m_historyDatabase;
 	}
+	else
+	{
+		QueryHistory queryHistory(settings.m_historyDatabase);
+		ViewHistory viewHistory(settings.m_historyDatabase);
+		time_t timeNow = time(NULL);
 
+		// Expire items older than a month
+		queryHistory.expireItems(timeNow - 2592000);
+		viewHistory.expireItems(timeNow - 2592000);
+	}
+
 	atexit(closeAll);
 
 	try



From fabricecolin at berlios.de  Wed Jun 28 12:45:19 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Wed, 28 Jun 2006 12:45:19 +0200
Subject: [Pinot-svn] r337 - trunk/UI/GTK2/src
Message-ID: <200606281045.k5SAjJ4K032096@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-28 12:45:08 +0200 (Wed, 28 Jun 2006)
New Revision: 337

Modified:
   trunk/UI/GTK2/src/EnginesTree.cpp
   trunk/UI/GTK2/src/IndexTree.cpp
   trunk/UI/GTK2/src/PinotUtils.cpp
   trunk/UI/GTK2/src/PinotUtils.h
   trunk/UI/GTK2/src/ResultsTree.cpp
   trunk/UI/GTK2/src/mainWindow.cc
Log:
Enable sorting on most tree columns.


Modified: trunk/UI/GTK2/src/EnginesTree.cpp
===================================================================
--- trunk/UI/GTK2/src/EnginesTree.cpp	2006-06-28 10:43:04 UTC (rev 336)
+++ trunk/UI/GTK2/src/EnginesTree.cpp	2006-06-28 10:45:08 UTC (rev 337)
@@ -63,13 +63,13 @@
 	m_refStore = TreeStore::create(m_enginesColumns);
 	set_model(m_refStore);
 
-	TreeViewColumn *treeColumn = new TreeViewColumn(_("Search Engines"));
+	TreeViewColumn *pColumn = new TreeViewColumn(_("Search Engines"));
 	// Pack an icon renderer for engines icons
-	CellRendererPixbuf *iconRenderer = new CellRendererPixbuf();
-	treeColumn->pack_start(*manage(iconRenderer), false);
-	treeColumn->set_cell_data_func(*iconRenderer, SigC::slot(*this, &EnginesTree::renderEngineIcon));
-	treeColumn->pack_end(m_enginesColumns.m_name, false);
-	append_column(*manage(treeColumn));
+	CellRendererPixbuf *pIconRenderer = new CellRendererPixbuf();
+	pColumn->pack_start(*manage(pIconRenderer), false);
+	pColumn->set_cell_data_func(*pIconRenderer, SigC::slot(*this, &EnginesTree::renderEngineIcon));
+	pColumn->pack_end(m_enginesColumns.m_name, false);
+	append_column(*manage(pColumn));
 
 	// Make headers clickable
 	set_headers_clickable(true);
@@ -133,17 +133,17 @@
 		return;
 	}
 
-	CellRendererPixbuf *iconRenderer = dynamic_cast<CellRendererPixbuf*>(renderer);
-	if (iconRenderer != NULL)
+	CellRendererPixbuf *pIconRenderer = dynamic_cast<CellRendererPixbuf*>(renderer);
+	if (pIconRenderer != NULL)
 	{
 		// Is this an engine folder ?
 		if (row[m_enginesColumns.m_type] == EnginesModelColumns::ENGINE_FOLDER)
 		{
-			iconRenderer->property_pixbuf() = m_engineFolderIconPixbuf;
+			pIconRenderer->property_pixbuf() = m_engineFolderIconPixbuf;
 		}
 		else
 		{
-			iconRenderer->property_pixbuf().reset_value();
+			pIconRenderer->property_pixbuf().reset_value();
 		}
 	}
 }

Modified: trunk/UI/GTK2/src/IndexTree.cpp
===================================================================
--- trunk/UI/GTK2/src/IndexTree.cpp	2006-06-28 10:43:04 UTC (rev 336)
+++ trunk/UI/GTK2/src/IndexTree.cpp	2006-06-28 10:45:08 UTC (rev 337)
@@ -60,17 +60,21 @@
 	set_model(m_refStore);
 
 	// The score column is used for status icons
-	TreeViewColumn *treeColumn = create_resizable_column(_("Title"), m_indexColumns.m_text);
-	if (treeColumn != NULL)
+	TreeViewColumn *pColumn = create_column(_("Title"), m_indexColumns.m_text, true, true);
+	if (pColumn != NULL)
 	{
-		append_column(*manage(treeColumn));
+		append_column(*manage(pColumn));
 	}
-	treeColumn = create_resizable_column(_("URL"), m_indexColumns.m_liveUrl);
-	if (treeColumn != NULL)
+	pColumn = create_column(_("URL"), m_indexColumns.m_liveUrl, true, true);
+	if (pColumn != NULL)
 	{
-		append_column(*manage(treeColumn));
+		append_column(*manage(pColumn));
 	}
-	append_column(_("Timestamp"), m_indexColumns.m_timestamp);
+	pColumn = create_column(_("Timestamp"), m_indexColumns.m_timestamp, false, true);
+	if (pColumn != NULL)
+	{
+		append_column(*manage(pColumn));
+	}
 
 	// Make headers clickable
 	set_headers_clickable(true);

Modified: trunk/UI/GTK2/src/PinotUtils.cpp
===================================================================
--- trunk/UI/GTK2/src/PinotUtils.cpp	2006-06-28 10:43:04 UTC (rev 336)
+++ trunk/UI/GTK2/src/PinotUtils.cpp	2006-06-28 10:45:08 UTC (rev 337)
@@ -156,38 +156,48 @@
 	return height;
 }
 
-/// Create a resizable text column.
-TreeViewColumn *create_resizable_column(const ustring &title, const TreeModelColumnBase& modelColumn)
+/// Create a text column.
+TreeViewColumn *create_column(const ustring &title, const TreeModelColumnBase& modelColumn,
+	bool isResizable, bool isSortable)
 {
-	TreeViewColumn *treeColumn = new TreeViewColumn(title);
+	TreeViewColumn *pColumn = new TreeViewColumn(title);
 
-	CellRendererText *textCellRenderer = new CellRendererText();
-	treeColumn->pack_start(*manage(textCellRenderer));
-	treeColumn->add_attribute(textCellRenderer->property_text(), modelColumn);
-	treeColumn->set_resizable(true);
+	CellRendererText *pTextRenderer = new CellRendererText();
+	pColumn->pack_start(*manage(pTextRenderer));
+	pColumn->add_attribute(pTextRenderer->property_text(), modelColumn);
+	pColumn->set_resizable(isResizable);
+	if (isSortable == true)
+	{
+		pColumn->set_sort_column(modelColumn);
+	}
 
-	return treeColumn;
+	return pColumn;
 }
 
-/// Create a resizable icon and text column, rendered by renderTextAndIconCell.
-TreeViewColumn *create_resizable_column_with_icon(const ustring &title,
-	const TreeModelColumnBase& modelColumn, const TreeViewColumn::SlotCellData &renderTextAndIconCell)
+/// Create an icon and text column, rendered by renderTextAndIconCell.
+TreeViewColumn *create_column_with_icon(const ustring &title, const TreeModelColumnBase& modelColumn,
+	const TreeViewColumn::SlotCellData &renderTextAndIconCell,
+	bool isResizable, bool isSortable)
 {
-	TreeViewColumn *treeColumn = new TreeViewColumn(title);
+	TreeViewColumn *pColumn = new TreeViewColumn(title);
 
 	// Pack an icon renderer in the column
-	CellRendererPixbuf *iconRenderer = new CellRendererPixbuf();
-	treeColumn->pack_start(*manage(iconRenderer), false);
-	treeColumn->set_cell_data_func(*iconRenderer, renderTextAndIconCell);
+	CellRendererPixbuf *pIconRenderer = new CellRendererPixbuf();
+	pColumn->pack_start(*manage(pIconRenderer), false);
+	pColumn->set_cell_data_func(*pIconRenderer, renderTextAndIconCell);
 	// ...followed by a text renderer
-	CellRendererText *textCellRenderer = new CellRendererText();
-	treeColumn->pack_start(*manage(textCellRenderer));
-	treeColumn->set_cell_data_func(*textCellRenderer, renderTextAndIconCell);
+	CellRendererText *pTextRenderer = new CellRendererText();
+	pColumn->pack_start(*manage(pTextRenderer));
+	pColumn->set_cell_data_func(*pTextRenderer, renderTextAndIconCell);
 
-	treeColumn->add_attribute(textCellRenderer->property_text(), modelColumn);
-	treeColumn->set_resizable(true);
+	pColumn->add_attribute(pTextRenderer->property_text(), modelColumn);
+	pColumn->set_resizable(isResizable);
+	if (isSortable == true)
+	{
+		pColumn->set_sort_column(modelColumn);
+	}
 
-	return treeColumn;
+	return pColumn;
 }
 
 /// Converts to UTF-8.

Modified: trunk/UI/GTK2/src/PinotUtils.h
===================================================================
--- trunk/UI/GTK2/src/PinotUtils.h	2006-06-28 10:43:04 UTC (rev 336)
+++ trunk/UI/GTK2/src/PinotUtils.h	2006-06-28 10:45:08 UTC (rev 337)
@@ -38,14 +38,16 @@
 /// Get a column height.
 int get_column_height(Gtk::TreeView *pTree);
 
-/// Create a resizable text column.
-Gtk::TreeViewColumn *create_resizable_column(const Glib::ustring &title,
-	const Gtk::TreeModelColumnBase& modelColumn);
+/// Create a text column.
+Gtk::TreeViewColumn *create_column(const Glib::ustring &title,
+	const Gtk::TreeModelColumnBase& modelColumn,
+	bool isResizable, bool isSortable);
 
-/// Create a resizable icon and text column, rendered by renderTextAndIconCell.
-Gtk::TreeViewColumn *create_resizable_column_with_icon(const Glib::ustring &title,
+/// Create an icon and text column, rendered by renderTextAndIconCell.
+Gtk::TreeViewColumn *create_column_with_icon(const Glib::ustring &title,
 	const Gtk::TreeModelColumnBase& modelColumn,
-	const  Gtk::TreeViewColumn::SlotCellData &renderTextAndIconCell);
+	const Gtk::TreeViewColumn::SlotCellData &renderTextAndIconCell,
+	bool isResizable, bool isSortable);
 
 /// Converts to UTF-8.
 Glib::ustring to_utf8(const std::string &text);

Modified: trunk/UI/GTK2/src/ResultsTree.cpp
===================================================================
--- trunk/UI/GTK2/src/ResultsTree.cpp	2006-06-28 10:43:04 UTC (rev 336)
+++ trunk/UI/GTK2/src/ResultsTree.cpp	2006-06-28 10:45:08 UTC (rev 337)
@@ -99,34 +99,40 @@
 	m_refStore = TreeStore::create(m_resultsColumns);
 	set_model(m_refStore);
 
-	// The first column is for status icons
-	TreeViewColumn *treeColumn = new TreeViewColumn("");
+	// The first column is for the score and status icons
+	TreeViewColumn *pColumn = new TreeViewColumn("");
 	// Pack an icon renderer for the viewed status
-	CellRendererPixbuf *iconRenderer = new CellRendererPixbuf();
-	treeColumn->pack_start(*manage(iconRenderer), false);
-	treeColumn->set_cell_data_func(*iconRenderer, SigC::slot(*this, &ResultsTree::renderViewStatus));
+	CellRendererPixbuf *pIconRenderer = new CellRendererPixbuf();
+	pColumn->pack_start(*manage(pIconRenderer), false);
+	pColumn->set_cell_data_func(*pIconRenderer, SigC::slot(*this, &ResultsTree::renderViewStatus));
 	// Pack a second icon renderer for the indexed status
-	iconRenderer = new CellRendererPixbuf();
-	treeColumn->pack_start(*manage(iconRenderer), false);
-	treeColumn->set_cell_data_func(*iconRenderer, SigC::slot(*this, &ResultsTree::renderIndexStatus));
+	pIconRenderer = new CellRendererPixbuf();
+	pColumn->pack_start(*manage(pIconRenderer), false);
+	pColumn->set_cell_data_func(*pIconRenderer, SigC::slot(*this, &ResultsTree::renderIndexStatus));
 	// And a third one for the ranking
-	iconRenderer = new CellRendererPixbuf();
-	treeColumn->pack_start(*manage(iconRenderer), false);
-	treeColumn->set_cell_data_func(*iconRenderer, SigC::slot(*this, &ResultsTree::renderRanking));
-	treeColumn->set_resizable(true);
-	append_column(*manage(treeColumn));
+	pIconRenderer = new CellRendererPixbuf();
+	pColumn->pack_start(*manage(pIconRenderer), false);
+	pColumn->set_cell_data_func(*pIconRenderer, SigC::slot(*this, &ResultsTree::renderRanking));
+	pColumn->set_resizable(true);
+	pColumn->set_sort_column(m_resultsColumns.m_score);
+	append_column(*manage(pColumn));
 
 	// This is the title column
-	treeColumn = new TreeViewColumn(_("Title"));
+	pColumn = new TreeViewColumn(_("Title"));
 	CellRendererText *textCellRenderer = new CellRendererText();
-	treeColumn->pack_start(*manage(textCellRenderer));
-	treeColumn->set_cell_data_func(*textCellRenderer, SigC::slot(*this, &ResultsTree::renderBackgroundColour));
-	treeColumn->add_attribute(textCellRenderer->property_text(), m_resultsColumns.m_text);
-	treeColumn->set_resizable(true);
-	append_column(*manage(treeColumn));
+	pColumn->pack_start(*manage(textCellRenderer));
+	pColumn->set_cell_data_func(*textCellRenderer, SigC::slot(*this, &ResultsTree::renderBackgroundColour));
+	pColumn->add_attribute(textCellRenderer->property_text(), m_resultsColumns.m_text);
+	pColumn->set_resizable(true);
+	pColumn->set_sort_column(m_resultsColumns.m_text);
+	append_column(*manage(pColumn));
 
 	// The last column is for the URL
-	append_column(_("URL"), m_resultsColumns.m_url);
+	pColumn = create_column(_("URL"), m_resultsColumns.m_url, false, true);
+	if (pColumn != NULL)
+	{
+		append_column(*manage(pColumn));
+	}
 
 	// Make headers clickable
 	set_headers_clickable(true);
@@ -172,18 +178,18 @@
 		return;
 	}
 
-	CellRendererPixbuf *iconRenderer = dynamic_cast<CellRendererPixbuf*>(renderer);
-	if (iconRenderer != NULL)
+	CellRendererPixbuf *pIconRenderer = dynamic_cast<CellRendererPixbuf*>(renderer);
+	if (pIconRenderer != NULL)
 	{
 		// Has this result been already viewed ?
 		if ((row[m_resultsColumns.m_viewed] == true) &&
 			(m_viewededIconPixbuf))
 		{
-			iconRenderer->property_pixbuf() = m_viewededIconPixbuf;
+			pIconRenderer->property_pixbuf() = m_viewededIconPixbuf;
 		}
 		else
 		{
-			iconRenderer->property_pixbuf().reset_value();
+			pIconRenderer->property_pixbuf().reset_value();
 		}
 	}
 }
@@ -197,18 +203,18 @@
 		return;
 	}
 
-	CellRendererPixbuf *iconRenderer = dynamic_cast<CellRendererPixbuf*>(renderer);
-	if (iconRenderer != NULL)
+	CellRendererPixbuf *pIconRenderer = dynamic_cast<CellRendererPixbuf*>(renderer);
+	if (pIconRenderer != NULL)
 	{
 		// Is this result indexed ?
 		if ((row[m_resultsColumns.m_indexed] == true) &&
 			(m_indexedIconPixbuf))
 		{
-			iconRenderer->property_pixbuf() = m_indexedIconPixbuf;
+			pIconRenderer->property_pixbuf() = m_indexedIconPixbuf;
 		}
 		else
 		{
-			iconRenderer->property_pixbuf().reset_value();
+			pIconRenderer->property_pixbuf().reset_value();
 		}
 	}
 }
@@ -222,8 +228,8 @@
 		return;
 	}
 
-	CellRendererPixbuf *iconRenderer = dynamic_cast<CellRendererPixbuf*>(renderer);
-	if (iconRenderer != NULL)
+	CellRendererPixbuf *pIconRenderer = dynamic_cast<CellRendererPixbuf*>(renderer);
+	if (pIconRenderer != NULL)
 	{
 		int rankDiff = row[m_resultsColumns.m_rankDiff];
 
@@ -231,15 +237,15 @@
 		if ((rankDiff > 0) &&
 			(rankDiff != 666))
 		{
-			iconRenderer->property_pixbuf() = m_upIconPixbuf;
+			pIconRenderer->property_pixbuf() = m_upIconPixbuf;
 		}
 		else if (rankDiff < 0)
 		{
-			iconRenderer->property_pixbuf() = m_downIconPixbuf;
+			pIconRenderer->property_pixbuf() = m_downIconPixbuf;
 		}
 		else
 		{
-			iconRenderer->property_pixbuf().reset_value();
+			pIconRenderer->property_pixbuf().reset_value();
 		}
 	}
 }
@@ -253,18 +259,18 @@
 		return;
 	}
 
-	CellRendererText *textRenderer = dynamic_cast<CellRendererText*>(renderer);
-	if (textRenderer != NULL)
+	CellRendererText *pTextRenderer = dynamic_cast<CellRendererText*>(renderer);
+	if (pTextRenderer != NULL)
 	{
 		// Is this result new ?
 		if (row[m_resultsColumns.m_rankDiff] == 666)
 		{
 			// Change the row's background
-			textRenderer->property_background_gdk() = m_settings.m_newResultsColour;
+			pTextRenderer->property_background_gdk() = m_settings.m_newResultsColour;
 		}
 		else
 		{
-			textRenderer->property_background_gdk().reset_value();
+			pTextRenderer->property_background_gdk().reset_value();
 		}
 	}
 }

Modified: trunk/UI/GTK2/src/mainWindow.cc
===================================================================
--- trunk/UI/GTK2/src/mainWindow.cc	2006-06-28 10:43:04 UTC (rev 336)
+++ trunk/UI/GTK2/src/mainWindow.cc	2006-06-28 10:45:08 UTC (rev 337)
@@ -166,12 +166,16 @@
 	// Associate the columns model to the query tree
 	m_refQueryTree = ListStore::create(m_queryColumns);
 	queryTreeview->set_model(m_refQueryTree);
-	TreeViewColumn *treeColumn = create_resizable_column(_("Query Name"), m_queryColumns.m_name);
-	if (treeColumn != NULL)
+	TreeViewColumn *pColumn = create_column(_("Query Name"), m_queryColumns.m_name, true, true);
+	if (pColumn != NULL)
 	{
-		queryTreeview->append_column(*manage(treeColumn));
+		queryTreeview->append_column(*manage(pColumn));
 	}
-	queryTreeview->append_column(_("Last Run"), m_queryColumns.m_lastRun);
+	pColumn = create_column(_("Last Run"), m_queryColumns.m_lastRun, true, true);
+	if (pColumn != NULL)
+	{
+		queryTreeview->append_column(*manage(pColumn));
+	}
 	queryTreeview->append_column(_("Summary"), m_queryColumns.m_summary);
 	// Allow only single selection
 	queryTreeview->get_selection()->set_mode(SELECTION_SINGLE);



From fabricecolin at berlios.de  Wed Jun 28 13:08:48 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Wed, 28 Jun 2006 13:08:48 +0200
Subject: [Pinot-svn] r338 - in trunk: . Collect Search UI/GTK2/src
Message-ID: <200606281108.k5SB8maV006232@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-28 13:08:33 +0200 (Wed, 28 Jun 2006)
New Revision: 338

Modified:
   trunk/Collect/pinot-collect.1
   trunk/NEWS
   trunk/Search/pinot-search.1
   trunk/UI/GTK2/src/pinot.1
   trunk/configure.in
Log:
Preparing for 0.50 release...


Modified: trunk/Collect/pinot-collect.1
===================================================================
--- trunk/Collect/pinot-collect.1	2006-06-28 10:45:08 UTC (rev 337)
+++ trunk/Collect/pinot-collect.1	2006-06-28 11:08:33 UTC (rev 338)
@@ -1,5 +1,5 @@
 .\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.36.
-.TH PINOT-COLLECT "1" "June 2006" "pinot-collect - pinot 0.49" "User Commands"
+.TH PINOT-COLLECT "1" "June 2006" "pinot-collect - pinot 0.50" "User Commands"
 .SH NAME
 pinot-collect \- Download an URL from the command-line
 .SH SYNOPSIS

Modified: trunk/NEWS
===================================================================
--- trunk/NEWS	2006-06-28 10:45:08 UTC (rev 337)
+++ trunk/NEWS	2006-06-28 11:08:33 UTC (rev 338)
@@ -1,6 +1,8 @@
 ??? version_0_5_0
 Tokenize :
  - switched to pdftotext, which seems to support more files than pdftohtml
+SQL :
+ - remove history items older than one month at startup
 Search :
  - can search for documents with language "Unknown" (ie those for which
   language detection failed)
@@ -13,6 +15,9 @@
   (if they are indexed) and creates a "More Like ..." query
  - set the indexed status icon when results are indexed
  - view results on double clicks
+ - most tree columns can be sorted at last ! :-)
+ - work-around for bizarre bug that causes a segfault when creating a query
+  that indexes and labels results based on a language filter
 
 2006/06/11 version_0_4_9
 General :

Modified: trunk/Search/pinot-search.1
===================================================================
--- trunk/Search/pinot-search.1	2006-06-28 10:45:08 UTC (rev 337)
+++ trunk/Search/pinot-search.1	2006-06-28 11:08:33 UTC (rev 338)
@@ -1,5 +1,5 @@
 .\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.36.
-.TH PINOT-SEARCH "1" "June 2006" "pinot-search - pinot 0.49" "User Commands"
+.TH PINOT-SEARCH "1" "June 2006" "pinot-search - pinot 0.50" "User Commands"
 .SH NAME
 pinot-search \- Query search engines from the command-line
 .SH SYNOPSIS

Modified: trunk/UI/GTK2/src/pinot.1
===================================================================
--- trunk/UI/GTK2/src/pinot.1	2006-06-28 10:45:08 UTC (rev 337)
+++ trunk/UI/GTK2/src/pinot.1	2006-06-28 11:08:33 UTC (rev 338)
@@ -1,5 +1,5 @@
 .\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.36.
-.TH PINOT "1" "June 2006" "pinot - pinot 0.49" "User Commands"
+.TH PINOT "1" "June 2006" "pinot - pinot 0.50" "User Commands"
 .SH NAME
 pinot \- A metasearch tool for the Free Desktop
 .SH SYNOPSIS

Modified: trunk/configure.in
===================================================================
--- trunk/configure.in	2006-06-28 10:45:08 UTC (rev 337)
+++ trunk/configure.in	2006-06-28 11:08:33 UTC (rev 338)
@@ -2,7 +2,7 @@
 # using glademm V2.6.0
 
 AC_PREREQ(2.50)
-AC_INIT(pinot, 0.49,[fabricecolin at users.berlios.de])
+AC_INIT(pinot, 0.50,[fabricecolin at users.berlios.de])
 AM_INIT_AUTOMAKE
 AC_CONFIG_HEADERS(config.h)
 



From fabricecolin at berlios.de  Thu Jun 29 16:20:59 2006
From: fabricecolin at berlios.de (fabricecolin at BerliOS)
Date: Thu, 29 Jun 2006 16:20:59 +0200
Subject: [Pinot-svn] r339 - trunk/UI/GTK2/src
Message-ID: <200606291420.k5TEKxTO025146@sheep.berlios.de>

Author: fabricecolin
Date: 2006-06-29 16:20:58 +0200 (Thu, 29 Jun 2006)
New Revision: 339

Modified:
   trunk/UI/GTK2/src/mainWindow.cc
Log:
Display a message if no application could be found for a given type.


Modified: trunk/UI/GTK2/src/mainWindow.cc
===================================================================
--- trunk/UI/GTK2/src/mainWindow.cc	2006-06-28 11:08:33 UTC (rev 338)
+++ trunk/UI/GTK2/src/mainWindow.cc	2006-06-29 14:20:58 UTC (rev 339)
@@ -3125,7 +3125,8 @@
 
 		if (locationIter->first != currentType)
 		{
-			if (arguments.empty() == false)
+			if ((action.m_exec.empty() == false) &&
+				(arguments.empty() == false))
 			{
 				// Run the default program for this type
 				if (CommandLine::runAsync(action, arguments) == false)
@@ -3143,10 +3144,10 @@
 			// Get the action for this MIME type
 			if (MIMEScanner::getDefaultAction(locationIter->first, action) == false)
 			{
-#ifdef DEBUG
-				cout << "mainWindow::view_documents: no default application defined for type "
-					<< locationIter->first << endl;
-#endif
+				ustring statusText = _("No default application defined for type");
+				statusText += " ";
+				statusText += locationIter->first;
+				set_status(statusText);
 				continue;
 			}
 		}
@@ -3161,7 +3162,8 @@
 		}
 	}
 
-	if (arguments.empty() == false)
+	if ((action.m_exec.empty() == false) &&
+		(arguments.empty() == false))
 	{
 		// Run the default program for this type
 		if (CommandLine::runAsync(action, arguments) == false)



